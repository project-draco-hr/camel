{
  HttpClientConfigurer configurer=resolveAndRemoveReferenceParameter(parameters,"httpClientConfigurerRef",HttpClientConfigurer.class);
  if (configurer == null) {
    configurer=resolveAndRemoveReferenceParameter(parameters,"httpClientConfigurer",HttpClientConfigurer.class);
  }
  if (configurer == null) {
    configurer=getHttpClientConfigurer();
  }
  String authUsername=getAndRemoveParameter(parameters,"authUsername",String.class);
  String authMethod=getAndRemoveParameter(parameters,"authMethod",String.class);
  if (authUsername != null && authMethod == null) {
    throw new IllegalArgumentException("Option authMethod must be provided to use authentication");
  }
  if (authMethod != null) {
    String authPassword=getAndRemoveParameter(parameters,"authPassword",String.class);
    String authDomain=getAndRemoveParameter(parameters,"authDomain",String.class);
    String authHost=getAndRemoveParameter(parameters,"authHost",String.class);
    configurer=configureAuth(configurer,authMethod,authUsername,authPassword,authDomain,authHost,authMethods);
  }
 else   if (httpConfiguration != null) {
    configurer=configureAuth(configurer,httpConfiguration.getAuthMethod(),httpConfiguration.getAuthUsername(),httpConfiguration.getAuthPassword(),httpConfiguration.getAuthDomain(),httpConfiguration.getAuthHost(),authMethods);
  }
  String proxyAuthUsername=getAndRemoveParameter(parameters,"proxyAuthUsername",String.class);
  String proxyAuthMethod=getAndRemoveParameter(parameters,"proxyAuthMethod",String.class);
  if (proxyAuthUsername != null && proxyAuthMethod == null) {
    throw new IllegalArgumentException("Option proxyAuthMethod must be provided to use proxy authentication");
  }
  if (proxyAuthMethod != null) {
    String proxyAuthPassword=getAndRemoveParameter(parameters,"proxyAuthPassword",String.class);
    String proxyAuthDomain=getAndRemoveParameter(parameters,"proxyAuthDomain",String.class);
    String proxyAuthHost=getAndRemoveParameter(parameters,"proxyAuthHost",String.class);
    configurer=configureProxyAuth(configurer,proxyAuthMethod,proxyAuthUsername,proxyAuthPassword,proxyAuthDomain,proxyAuthHost,authMethods);
  }
 else   if (httpConfiguration != null) {
    configurer=configureProxyAuth(configurer,httpConfiguration.getProxyAuthMethod(),httpConfiguration.getProxyAuthUsername(),httpConfiguration.getProxyAuthPassword(),httpConfiguration.getProxyAuthDomain(),httpConfiguration.getProxyAuthHost(),authMethods);
  }
  return configurer;
}
