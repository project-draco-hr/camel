{
  if (channel == null && !configuration.isLazyChannelCreation()) {
    throw new IllegalStateException("Not started yet!");
  }
  if (channel == null || !channel.isConnected()) {
    openConnection();
  }
  Object body=NettyPayloadHelper.getIn(getEndpoint(),exchange);
  if (body == null) {
    noReplyLogger.log("No payload to send for exchange: " + exchange);
    return;
  }
  if (configuration.isSync()) {
    countdownLatch=new CountDownLatch(1);
  }
  if (LOG.isDebugEnabled()) {
    Object out=body;
    if (body instanceof byte[]) {
      out=exchange.getContext().getTypeConverter().convertTo(String.class,body);
    }
    LOG.debug("Writing body : " + out);
  }
  NettyHelper.writeBody(channel,null,body,exchange);
  if (configuration.isSync()) {
    boolean success=countdownLatch.await(configuration.getTimeout(),TimeUnit.MILLISECONDS);
    if (!success) {
      throw new ExchangeTimedOutException(exchange,configuration.getTimeout());
    }
    ClientChannelHandler handler=(ClientChannelHandler)clientPipeline.get("handler");
    if (handler.getCause() != null) {
      throw new CamelExchangeException("Error occurred in ClientChannelHandler",exchange,handler.getCause());
    }
 else     if (!handler.isMessageReceived()) {
      throw new CamelExchangeException("No response received from remote server: " + configuration.getAddress(),exchange);
    }
 else {
      if (ExchangeHelper.isOutCapable(exchange)) {
        NettyPayloadHelper.setOut(exchange,handler.getMessage());
      }
 else {
        NettyPayloadHelper.setIn(exchange,handler.getMessage());
      }
    }
  }
  Boolean close;
  if (ExchangeHelper.isOutCapable(exchange)) {
    close=exchange.getOut().getHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE,Boolean.class);
  }
 else {
    close=exchange.getIn().getHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE,Boolean.class);
  }
  boolean disconnect=getConfiguration().isDisconnect();
  if (close != null) {
    disconnect=close;
  }
  if (disconnect) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Closing channel when complete at address: " + getEndpoint().getConfiguration().getAddress());
    }
    NettyHelper.close(channel);
  }
}
