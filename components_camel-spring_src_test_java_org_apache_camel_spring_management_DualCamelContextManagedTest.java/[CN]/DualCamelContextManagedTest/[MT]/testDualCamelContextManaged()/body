{
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  ObjectName on1=null;
  ObjectName on2=null;
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
  for (  ObjectName on : set) {
    if (on.getCanonicalName().contains("camel-A")) {
      on1=on;
    }
 else     if (on.getCanonicalName().contains("camel-B")) {
      on2=on;
    }
  }
  assertNotNull("Should have found camel-A route",on1);
  assertNotNull("Should have found camel-B route",on2);
  assertTrue("Route 1 is missing",on1.getCanonicalName().contains("route1"));
  assertTrue("Route 2 is missing",on2.getCanonicalName().contains("route2"));
  set=mbeanServer.queryNames(new ObjectName("*:type=endpoints,*"),null);
  assertEquals(7,set.size());
  for (  ObjectName on : set) {
    String name=on.getCanonicalName();
    if (name.contains("mock://mock1")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-A",id);
    }
 else     if (name.contains("mock://mock2")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-B",id);
    }
 else     if (name.contains("file://target/route1")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-A",id);
    }
 else     if (name.contains("file://target/route2")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-B",id);
    }
  }
}
