{
  List<OptionalParameter> oplist=Arrays.asList(deliverSm.getOptionalParametes());
  Map<Short,Object> optParams=new HashMap<Short,Object>();
  for (  OptionalParameter optPara : oplist) {
    if (COctetString.class.isInstance(optPara)) {
      optParams.put(Short.valueOf(optPara.tag),((COctetString)optPara).getValueAsString());
    }
 else     if (org.jsmpp.bean.OptionalParameter.OctetString.class.isInstance(optPara)) {
      optParams.put(Short.valueOf(optPara.tag),((OctetString)optPara).getValue());
    }
 else     if (org.jsmpp.bean.OptionalParameter.Byte.class.isInstance(optPara)) {
      optParams.put(Short.valueOf(optPara.tag),Byte.valueOf(((org.jsmpp.bean.OptionalParameter.Byte)optPara).getValue()));
    }
 else     if (org.jsmpp.bean.OptionalParameter.Short.class.isInstance(optPara)) {
      optParams.put(Short.valueOf(optPara.tag),Short.valueOf(((org.jsmpp.bean.OptionalParameter.Short)optPara).getValue()));
    }
 else     if (org.jsmpp.bean.OptionalParameter.Int.class.isInstance(optPara)) {
      optParams.put(Short.valueOf(optPara.tag),Integer.valueOf(((org.jsmpp.bean.OptionalParameter.Int)optPara).getValue()));
    }
 else     if (Null.class.isInstance(optPara)) {
      optParams.put(Short.valueOf(optPara.tag),null);
    }
  }
  return optParams;
}
