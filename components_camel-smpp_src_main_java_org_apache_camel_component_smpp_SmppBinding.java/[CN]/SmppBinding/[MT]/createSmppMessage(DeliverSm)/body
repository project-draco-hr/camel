{
  SmppMessage smppMessage=new SmppMessage(deliverSm,configuration);
  if (deliverSm.isSmscDeliveryReceipt()) {
    smppMessage.setHeader(SmppConstants.MESSAGE_TYPE,SmppMessageType.DeliveryReceipt.toString());
    DeliveryReceipt smscDeliveryReceipt=deliverSm.getShortMessageAsDeliveryReceipt();
    smppMessage.setBody(smscDeliveryReceipt.getText());
    smppMessage.setHeader(SmppConstants.ID,smscDeliveryReceipt.getId());
    smppMessage.setHeader(SmppConstants.DELIVERED,smscDeliveryReceipt.getDelivered());
    smppMessage.setHeader(SmppConstants.DONE_DATE,smscDeliveryReceipt.getDoneDate());
    if (!"000".equals(smscDeliveryReceipt.getError())) {
      smppMessage.setHeader(SmppConstants.ERROR,smscDeliveryReceipt.getError());
    }
    smppMessage.setHeader(SmppConstants.SUBMIT_DATE,smscDeliveryReceipt.getSubmitDate());
    smppMessage.setHeader(SmppConstants.SUBMITTED,smscDeliveryReceipt.getSubmitted());
    smppMessage.setHeader(SmppConstants.FINAL_STATUS,smscDeliveryReceipt.getFinalStatus());
    if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {
      List<OptionalParameter> oplist=Arrays.asList(deliverSm.getOptionalParametes());
      Map<String,Object> optParams=new HashMap<String,Object>();
      for (      OptionalParameter optPara : oplist) {
        if (OctetString.class.isInstance(optPara)) {
          optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(),((OctetString)optPara).getValueAsString());
        }
 else         if (org.jsmpp.bean.OptionalParameter.COctetString.class.isInstance(optPara)) {
          optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(),((COctetString)optPara).getValueAsString());
        }
 else         if (org.jsmpp.bean.OptionalParameter.Byte.class.isInstance(optPara)) {
          optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(),Byte.valueOf(((org.jsmpp.bean.OptionalParameter.Byte)optPara).getValue()));
        }
 else         if (org.jsmpp.bean.OptionalParameter.Short.class.isInstance(optPara)) {
          optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(),Short.valueOf(((org.jsmpp.bean.OptionalParameter.Short)optPara).getValue()));
        }
 else         if (org.jsmpp.bean.OptionalParameter.Int.class.isInstance(optPara)) {
          optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(),Integer.valueOf(((org.jsmpp.bean.OptionalParameter.Int)optPara).getValue()));
        }
 else         if (Null.class.isInstance(optPara)) {
          optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(),null);
        }
      }
      smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS,optParams);
    }
  }
 else {
    smppMessage.setHeader(SmppConstants.MESSAGE_TYPE,SmppMessageType.DeliverSm.toString());
    if (deliverSm.getShortMessage() != null) {
      if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {
        smppMessage.setBody(deliverSm.getShortMessage());
      }
 else {
        smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),configuration.getEncoding())));
      }
    }
 else     if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {
      List<OptionalParameter> oplist=Arrays.asList(deliverSm.getOptionalParametes());
      for (      OptionalParameter optPara : oplist) {
        if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {
          smppMessage.setBody(((OctetString)optPara).getValueAsString());
          break;
        }
      }
    }
    smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER,deliverSm.getSequenceNumber());
    smppMessage.setHeader(SmppConstants.COMMAND_ID,deliverSm.getCommandId());
    smppMessage.setHeader(SmppConstants.SOURCE_ADDR,deliverSm.getSourceAddr());
    smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI,deliverSm.getSourceAddrNpi());
    smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON,deliverSm.getSourceAddrTon());
    smppMessage.setHeader(SmppConstants.DEST_ADDR,deliverSm.getDestAddress());
    smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI,deliverSm.getDestAddrNpi());
    smppMessage.setHeader(SmppConstants.DEST_ADDR_TON,deliverSm.getDestAddrTon());
    smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME,deliverSm.getScheduleDeliveryTime());
    smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD,deliverSm.getValidityPeriod());
    smppMessage.setHeader(SmppConstants.SERVICE_TYPE,deliverSm.getServiceType());
  }
  return smppMessage;
}
