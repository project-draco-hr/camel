{
  assertEquals("Leading space",context.resolvePropertyPlaceholders("{{cool.leading}}"));
  assertEquals("Trailing space",context.resolvePropertyPlaceholders("{{cool.trailing}}"));
  assertEquals("Both leading and trailing space",context.resolvePropertyPlaceholders("{{cool.both}}"));
  assertEquals("\r\n",context.resolvePropertyPlaceholders("{{space.leading}}"));
  assertEquals("\t",context.resolvePropertyPlaceholders("{{space.trailing}}"));
  assertEquals("\r   \t  \n",context.resolvePropertyPlaceholders("{{space.both}}"));
  assertEquals("Leading space\r\n",context.resolvePropertyPlaceholders("{{mixed.leading}}"));
  assertEquals("Trailing space\t",context.resolvePropertyPlaceholders("{{mixed.trailing}}"));
  assertEquals("Both leading and trailing space\r   \t  \n",context.resolvePropertyPlaceholders("{{mixed.both}}"));
  assertEquals("",context.resolvePropertyPlaceholders("{{empty.line}}"));
}
