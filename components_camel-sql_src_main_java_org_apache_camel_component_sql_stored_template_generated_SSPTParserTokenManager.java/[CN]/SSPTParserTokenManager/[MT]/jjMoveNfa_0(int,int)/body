{
  int startsAt=0;
  jjnewStateCnt=19;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 10:
          if ((0x3ff609c00000000L & l) != 0L) {
            if (kind > 14)             kind=14;
            jjCheckNAdd(14);
          }
 else           if ((0x100002600L & l) != 0L) {
            if (kind > 7)             kind=7;
            jjCheckNAddStates(0,5);
          }
 else           if (curChar == 58)           jjstateSet[jjnewStateCnt++]=11;
 else           if (curChar == 41) {
            if (kind > 11)             kind=11;
            jjCheckNAdd(6);
          }
 else           if (curChar == 40) {
            if (kind > 10)             kind=10;
            jjCheckNAdd(4);
          }
 else           if (curChar == 44) {
            if (kind > 9)             kind=9;
            jjCheckNAdd(2);
          }
        if ((0x3ff000000000000L & l) != 0L) {
          if (kind > 3)           kind=3;
          jjCheckNAdd(0);
        }
 else         if (curChar == 36)         jjstateSet[jjnewStateCnt++]=7;
      break;
case 19:
    if ((0x100002600L & l) != 0L)     jjCheckNAddTwoStates(18,5);
 else     if (curChar == 41) {
      if (kind > 11)       kind=11;
      jjCheckNAdd(6);
    }
 else     if (curChar == 40) {
      if (kind > 10)       kind=10;
      jjCheckNAdd(4);
    }
 else     if (curChar == 44) {
      if (kind > 9)       kind=9;
      jjCheckNAdd(2);
    }
  if ((0x100002600L & l) != 0L)   jjCheckNAddTwoStates(17,3);
if ((0x100002600L & l) != 0L) jjCheckNAddTwoStates(16,1);
break;
case 0:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 3) kind=3;
jjCheckNAdd(0);
break;
case 1:
if (curChar != 44) break;
kind=9;
jjCheckNAdd(2);
break;
case 2:
if ((0x100002600L & l) == 0L) break;
if (kind > 9) kind=9;
jjCheckNAdd(2);
break;
case 3:
if (curChar != 40) break;
kind=10;
jjCheckNAdd(4);
break;
case 4:
if ((0x100002600L & l) == 0L) break;
if (kind > 10) kind=10;
jjCheckNAdd(4);
break;
case 5:
if (curChar != 41) break;
kind=11;
jjCheckNAdd(6);
break;
case 6:
if ((0x100002600L & l) == 0L) break;
if (kind > 11) kind=11;
jjCheckNAdd(6);
break;
case 8:
if ((0x3ff609d00000000L & l) != 0L) jjAddStates(6,7);
break;
case 11:
if (curChar == 35) jjCheckNAdd(12);
break;
case 12:
if ((0x3ff609c00000000L & l) == 0L) break;
if (kind > 13) kind=13;
jjCheckNAdd(12);
break;
case 13:
if (curChar == 58) jjstateSet[jjnewStateCnt++]=11;
break;
case 14:
if ((0x3ff609c00000000L & l) == 0L) break;
if (kind > 14) kind=14;
jjCheckNAdd(14);
break;
case 15:
if ((0x100002600L & l) == 0L) break;
if (kind > 7) kind=7;
jjCheckNAddStates(0,5);
break;
case 16:
if ((0x100002600L & l) != 0L) jjCheckNAddTwoStates(16,1);
break;
case 17:
if ((0x100002600L & l) != 0L) jjCheckNAddTwoStates(17,3);
break;
case 18:
if ((0x100002600L & l) != 0L) jjCheckNAddTwoStates(18,5);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 10:
case 14:
if ((0x2ffffffeaffffffeL & l) == 0L) break;
if (kind > 14) kind=14;
jjCheckNAdd(14);
break;
case 7:
if (curChar == 123) jjCheckNAdd(8);
break;
case 8:
if ((0x2ffffffeaffffffeL & l) != 0L) jjCheckNAddTwoStates(8,9);
break;
case 9:
if (curChar == 125 && kind > 12) kind=12;
break;
case 12:
if ((0x2ffffffeaffffffeL & l) == 0L) break;
if (kind > 13) kind=13;
jjstateSet[jjnewStateCnt++]=12;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=19 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
