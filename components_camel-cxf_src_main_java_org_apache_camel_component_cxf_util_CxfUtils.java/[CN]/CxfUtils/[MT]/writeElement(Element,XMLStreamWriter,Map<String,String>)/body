{
  String prefix=e.getPrefix();
  String ns=e.getNamespaceURI();
  String localName=e.getLocalName();
  if (prefix == null) {
    prefix="";
  }
  if (localName == null) {
    localName=e.getNodeName();
    if (localName == null) {
      throw new IllegalStateException("Element's local name cannot be null!");
    }
  }
  String decUri=writer.getNamespaceContext().getNamespaceURI(prefix);
  boolean declareNamespace=decUri == null || !decUri.equals(ns);
  if (ns == null || ns.length() == 0) {
    writer.writeStartElement(localName);
    if (StringUtils.isEmpty(decUri)) {
      declareNamespace=false;
    }
  }
 else {
    writer.writeStartElement(prefix,localName,ns);
  }
  NamedNodeMap attrs=e.getAttributes();
  for (int i=0; i < attrs.getLength(); i++) {
    Node attr=attrs.item(i);
    String name=attr.getLocalName();
    String attrPrefix=attr.getPrefix();
    if (attrPrefix == null) {
      attrPrefix="";
    }
    if (name == null) {
      name=attr.getNodeName();
    }
    if ("xmlns".equals(attrPrefix)) {
      writer.writeNamespace(name,attr.getNodeValue());
      if (name.equals(prefix) && attr.getNodeValue().equals(ns)) {
        declareNamespace=false;
      }
    }
 else {
      if ("xmlns".equals(name) && "".equals(attrPrefix)) {
        writer.writeNamespace("",attr.getNodeValue());
        if (attr.getNodeValue().equals(ns)) {
          declareNamespace=false;
        }
 else         if (StringUtils.isEmpty(attr.getNodeValue()) && StringUtils.isEmpty(ns)) {
          declareNamespace=false;
        }
      }
 else {
        String attns=attr.getNamespaceURI();
        String value=attr.getNodeValue();
        if (attns == null || attns.length() == 0) {
          writer.writeAttribute(name,value);
        }
 else         if (attrPrefix == null || attrPrefix.length() == 0) {
          writer.writeAttribute(attns,name,value);
        }
 else {
          writer.writeAttribute(attrPrefix,attns,name,value);
        }
      }
    }
  }
  if (declareNamespace) {
    if (ns == null) {
      writer.writeNamespace(prefix,"");
    }
 else {
      writer.writeNamespace(prefix,ns);
    }
  }
  if (namespaces != null && namespaces.size() > 0) {
    for (    Entry<String,String> entry : namespaces.entrySet()) {
      String namespaceURI=entry.getValue();
      writer.writeNamespace(entry.getKey(),namespaceURI);
    }
  }
  Node nd=e.getFirstChild();
  while (nd != null) {
    StaxUtils.writeNode(nd,writer,false);
    nd=nd.getNextSibling();
  }
  writer.writeEndElement();
}
