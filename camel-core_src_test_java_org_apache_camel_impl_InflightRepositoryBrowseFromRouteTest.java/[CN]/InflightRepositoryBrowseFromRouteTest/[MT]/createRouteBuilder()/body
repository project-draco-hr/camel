{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").routeId("foo").to("mock:a").to("direct:bar").to("mock:result");
      from("direct:bar").routeId("bar").to("mock:b").process(new Processor(){
        @Override public void process(        Exchange exchange) throws Exception {
          Collection<InflightRepository.InflightExchange> list=context.getInflightRepository().browse("foo");
          assertEquals(1,list.size());
          InflightRepository.InflightExchange inflight=list.iterator().next();
          assertNotNull(inflight);
          assertEquals(exchange,inflight.getExchange());
          assertEquals("foo",inflight.getFromRouteId());
          assertEquals("bar",inflight.getAtRouteId());
          assertEquals("myProcessor",inflight.getNodeId());
        }
      }
).id("myProcessor");
    }
  }
;
}
