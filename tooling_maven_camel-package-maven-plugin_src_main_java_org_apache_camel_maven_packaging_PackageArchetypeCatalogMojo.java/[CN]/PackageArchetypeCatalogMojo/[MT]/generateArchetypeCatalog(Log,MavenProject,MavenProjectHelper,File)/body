{
  File[] dirs=new File(".").listFiles(new FileFilter(){
    @Override public boolean accept(    File pathname){
      if ("camel-archetype-webconsole".equals(pathname.getName())) {
        return false;
      }
      return pathname.getName().startsWith("camel-archetype") && pathname.isDirectory();
    }
  }
);
  List<ArchetypeModel> models=new ArrayList<ArchetypeModel>();
  for (  File dir : dirs) {
    File pom=new File(dir,"pom.xml");
    if (!pom.exists() && !pom.isFile()) {
      continue;
    }
    boolean parent=false;
    ArchetypeModel model=new ArchetypeModel();
    for (    Object o : FileUtils.readLines(pom)) {
      String line=o.toString();
      if (line.contains("<parent>")) {
        parent=true;
        continue;
      }
      if (line.contains("</parent>")) {
        parent=false;
        continue;
      }
      if (parent) {
        String version=between(line,"<version>","</version>");
        if (version != null) {
          model.setVersion(version);
        }
        continue;
      }
      String groupId=between(line,"<groupId>","</groupId>");
      String artifactId=between(line,"<artifactId>","</artifactId>");
      String description=between(line,"<description>","</description>");
      if (groupId != null && model.getGroupId() == null) {
        model.setGroupId(groupId);
      }
      if (artifactId != null && model.getArtifactId() == null) {
        model.setArtifactId(artifactId);
      }
      if (description != null && model.getDescription() == null) {
        model.setDescription(description);
      }
    }
    if (model.getGroupId() != null && model.getArtifactId() != null && model.getVersion() != null) {
      models.add(model);
    }
  }
  log.info("Found " + models.size() + " archetypes");
  if (!models.isEmpty()) {
    outDir.mkdirs();
    File out=new File(outDir,"archetype-catalog.xml");
    FileOutputStream fos=new FileOutputStream(out,false);
    String top="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<archetype-catalog>\n  <archetypes>";
    fos.write(top.getBytes());
    for (    ArchetypeModel model : models) {
      fos.write("\n    <archetype>".getBytes());
      fos.write(("\n      <groupId>" + model.getGroupId() + "</groupId>").getBytes());
      fos.write(("\n      <artifactId>" + model.getArtifactId() + "</artifactId>").getBytes());
      fos.write(("\n      <version>" + model.getVersion() + "</version>").getBytes());
      if (model.getDescription() != null) {
        fos.write(("\n      <description>" + model.getDescription() + "</description>").getBytes());
      }
      fos.write("\n    </archetype>".getBytes());
    }
    String bottom="\n  </archetypes>\n</archetype-catalog>\n";
    fos.write(bottom.getBytes());
    fos.close();
    log.info("Saved archetype catalog to file " + out);
  }
}
