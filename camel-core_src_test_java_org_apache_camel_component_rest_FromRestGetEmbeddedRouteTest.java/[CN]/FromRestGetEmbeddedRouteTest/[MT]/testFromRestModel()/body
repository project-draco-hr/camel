{
  assertEquals(getExpectedNumberOfRoutes(),context.getRoutes().size());
  RestDefinition rest=context.getRestDefinitions().get(0);
  assertNotNull(rest);
  assertEquals(2,rest.getPaths().size());
  PathDefinition path=rest.getPaths().get(0);
  assertEquals("/say/hello",path.getUri());
  ToDefinition to=assertIsInstanceOf(ToDefinition.class,path.getVerbs().get(0).getOutputs().get(0));
  assertEquals("mock:hello",to.getUri());
  path=rest.getPaths().get(1);
  assertEquals("/say/bye",path.getUri());
  assertEquals("application/json",path.getVerbs().get(1).getAccept());
  to=assertIsInstanceOf(ToDefinition.class,path.getVerbs().get(1).getOutputs().get(0));
  assertEquals("mock:bye",to.getUri());
  getMockEndpoint("mock:update").expectedMessageCount(1);
  template.sendBody("seda:post-say","I was here");
  assertMockEndpointsSatisfied();
  String out=template.requestBody("seda:get-say-hello","Me",String.class);
  assertEquals("Hello World",out);
  String out2=template.requestBody("seda:get-say-bye","Me",String.class);
  assertEquals("Bye World",out2);
}
