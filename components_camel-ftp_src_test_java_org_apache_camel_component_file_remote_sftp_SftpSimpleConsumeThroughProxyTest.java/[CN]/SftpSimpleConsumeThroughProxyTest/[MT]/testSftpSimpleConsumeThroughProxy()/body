{
  if (!canTest()) {
    return;
  }
  HttpProxyServer proxyServer=new DefaultHttpProxyServer(proxyPort);
  proxyServer.addProxyAuthenticationHandler(new ProxyAuthorizationHandler(){
    @Override public boolean authenticate(    String userName,    String password){
      return "user".equals(userName) && "password".equals(password);
    }
  }
);
  proxyServer.start();
  String expected="Hello World";
  template.sendBodyAndHeader("file://" + FTP_ROOT_DIR,expected,Exchange.FILE_NAME,"hello.txt");
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  mock.expectedHeaderReceived(Exchange.FILE_NAME,"hello.txt");
  mock.expectedBodiesReceived(expected);
  context.startRoute("foo");
  assertMockEndpointsSatisfied();
  proxyServer.stop();
}
