{
  getMockEndpoint("mock:line").expectedBodiesReceived("Hello","World","Kaboom");
  getMockEndpoint("mock:line").allMessages().property("foo").isEqualTo("changed");
  getMockEndpoint("mock:result").expectedMessageCount(0);
  Exchange out=template.request("direct:start",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("Hello,World,Kaboom");
    }
  }
);
  assertNotNull(out);
  assertTrue(out.isFailed());
  assertFalse(out.hasOut());
  assertEquals("before",out.getProperty("foo"));
  assertEquals("Hello,World,Kaboom",out.getIn().getBody());
  IllegalArgumentException iae=out.getException(IllegalArgumentException.class);
  assertNotNull(iae);
  assertEquals("Forced exception",iae.getMessage());
  assertMockEndpointsSatisfied();
}
