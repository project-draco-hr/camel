{
  boolean exceptionHandled=hasExceptionBeenHandledByErrorHandler(exchange);
  if (exchange.isFailed() || exchange.isRollbackOnly() || exceptionHandled) {
    if (log.isDebugEnabled()) {
      StringBuilder sb=new StringBuilder();
      sb.append("Message exchange has failed " + message + " for exchange: ").append(exchange);
      if (exchange.isRollbackOnly()) {
        sb.append(" Marked as rollback only.");
      }
      if (exchange.getException() != null) {
        sb.append(" Exception: ").append(exchange.getException());
      }
      if (exchange.hasOut() && exchange.getOut().isFault()) {
        sb.append(" Fault: ").append(exchange.getOut());
      }
      if (exceptionHandled) {
        sb.append(" Handled by the error handler.");
      }
      log.debug(sb.toString());
    }
    return false;
  }
  Object stop=exchange.getProperty(Exchange.ROUTE_STOP);
  if (stop != null) {
    boolean doStop=exchange.getContext().getTypeConverter().convertTo(Boolean.class,exchange,stop);
    if (doStop) {
      if (log.isDebugEnabled()) {
        log.debug("ExchangeId: " + exchange.getExchangeId() + " is marked to stop routing: "+ exchange);
      }
      return false;
    }
  }
  return true;
}
