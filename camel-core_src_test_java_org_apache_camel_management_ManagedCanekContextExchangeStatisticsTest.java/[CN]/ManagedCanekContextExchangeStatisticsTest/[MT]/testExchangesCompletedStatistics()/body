{
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"");
  Long completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
  assertEquals(0,completed.longValue());
  ObjectName route1=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=routes,name=\"route1\"");
  Long completed1=(Long)mbeanServer.getAttribute(route1,"ExchangesCompleted");
  assertEquals(0,completed1.longValue());
  ObjectName route2=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=routes,name=\"route2\"");
  Long completed2=(Long)mbeanServer.getAttribute(route1,"ExchangesCompleted");
  assertEquals(0,completed2.longValue());
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  completed=(Long)mbeanServer.getAttribute(route1,"ExchangesCompleted");
  assertEquals(1,completed.longValue());
  completed1=(Long)mbeanServer.getAttribute(route1,"ExchangesCompleted");
  assertEquals(1,completed1.longValue());
  completed2=(Long)mbeanServer.getAttribute(route2,"ExchangesCompleted");
  assertEquals(0,completed2.longValue());
  resetMocks();
  getMockEndpoint("mock:result").expectedMessageCount(2);
  template.sendBody("direct:start","Hi World");
  template.sendBody("direct:bar","Bye World");
  assertMockEndpointsSatisfied();
  completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
  assertEquals(3,completed.longValue());
  completed1=(Long)mbeanServer.getAttribute(route1,"ExchangesCompleted");
  assertEquals(2,completed1.longValue());
  completed2=(Long)mbeanServer.getAttribute(route2,"ExchangesCompleted");
  assertEquals(1,completed2.longValue());
}
