{
  template.sendBodyAndHeader("file:target/browse","A",Exchange.FILE_NAME,"a.txt");
  template.sendBodyAndHeader("file:target/browse","B",Exchange.FILE_NAME,"foo/b.txt");
  template.sendBodyAndHeader("file:target/browse","C",Exchange.FILE_NAME,"bar/c.txt");
  FileEndpoint endpoint=context.getEndpoint("file:target/browse?recursive=true&sortBy=file:name",FileEndpoint.class);
  assertNotNull(endpoint);
  MemoryIdempotentRepository repo=(MemoryIdempotentRepository)endpoint.getInProgressRepository();
  assertEquals(0,repo.getCacheSize());
  List<Exchange> list=endpoint.getExchanges();
  assertNotNull(list);
  assertEquals(3,list.size());
  assertEquals("a.txt",list.get(0).getIn().getHeader(Exchange.FILE_NAME));
  assertEquals("c.txt",list.get(1).getIn().getHeader(Exchange.FILE_NAME_ONLY));
  assertEquals("b.txt",list.get(2).getIn().getHeader(Exchange.FILE_NAME_ONLY));
  assertEquals(0,repo.getCacheSize());
  File fileA=new File("target/browse/a.txt");
  assertTrue("File should exist " + fileA,fileA.exists());
  File fileB=new File("target/browse/foo/b.txt");
  assertTrue("File should exist " + fileB,fileB.exists());
  File fileC=new File("target/browse/bar/c.txt");
  assertTrue("File should exist " + fileC,fileC.exists());
}
