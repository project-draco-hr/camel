{
  StringBuilder sb=new StringBuilder();
  StringBuilder prefix=new StringBuilder();
  for (int i=0; i < indent; i++) {
    prefix.append(" ");
  }
  sb.append(prefix);
  sb.append("<message exchangeId=\"").append(message.getExchange().getExchangeId()).append("\">\n");
  if (message.hasHeaders()) {
    sb.append(prefix);
    sb.append("  <headers>\n");
    Map<String,Object> headers=new TreeMap<String,Object>(message.getHeaders());
    for (    Map.Entry<String,Object> entry : headers.entrySet()) {
      Object value=entry.getValue();
      String type=ObjectHelper.classCanonicalName(value);
      sb.append(prefix);
      sb.append("    <header key=\"").append(entry.getKey()).append("\"");
      if (type != null) {
        sb.append(" type=\"").append(type).append("\"");
      }
      sb.append(">");
      if (value != null) {
        try {
          String xml=message.getExchange().getContext().getTypeConverter().convertTo(String.class,message.getExchange(),value);
          if (xml != null) {
            sb.append(StringHelper.xmlEncode(xml));
          }
        }
 catch (        Exception e) {
        }
      }
      sb.append("</header>\n");
    }
    sb.append(prefix);
    sb.append("  </headers>\n");
  }
  if (includeBody) {
    sb.append(prefix);
    sb.append("  <body");
    String type=ObjectHelper.classCanonicalName(message.getBody());
    if (type != null) {
      sb.append(" type=\"").append(type).append("\"");
    }
    sb.append(">");
    String xml=extractBodyForLogging(message,"",allowStreams,allowFiles,maxChars);
    if (xml != null) {
      sb.append(StringHelper.xmlEncode(xml));
    }
    sb.append("</body>\n");
  }
  sb.append(prefix);
  sb.append("</message>");
  return sb.toString();
}
