{
  Object obj=message.getBody();
  if (obj == null) {
    return "Message: [Body is null]";
  }
  boolean streams=false;
  if (message.getExchange() != null) {
    String property=message.getExchange().getContext().getProperties().get(Exchange.LOG_DEBUG_BODY_STREAMS);
    if (property != null) {
      streams=message.getExchange().getContext().getTypeConverter().convertTo(Boolean.class,property);
    }
  }
  if (obj instanceof StringSource || obj instanceof BytesSource) {
  }
 else   if (!streams && obj instanceof StreamSource) {
    return "Message: [Body is instance of java.xml.transform.StreamSource]";
  }
 else   if (!streams && obj instanceof InputStream) {
    return "Message: [Body is instance of java.io.InputStream]";
  }
 else   if (!streams && obj instanceof OutputStream) {
    return "Message: [Body is instance of java.io.OutputStream]";
  }
 else   if (!streams && obj instanceof Reader) {
    return "Message: [Body is instance of java.io.Reader]";
  }
 else   if (!streams && obj instanceof Writer) {
    return "Message: [Body is instance of java.io.Writer]";
  }
  int length=1000;
  if (message.getExchange() != null) {
    String property=message.getExchange().getContext().getProperties().get(Exchange.LOG_DEBUG_BODY_MAX_CHARS);
    if (property != null) {
      length=message.getExchange().getContext().getTypeConverter().convertTo(Integer.class,property);
    }
  }
  String body=obj.toString();
  if (body == null) {
    return "Message: [Body is null]";
  }
  if (length > 0 && body.length() > length) {
    body=body.substring(0,length) + "... [Body clipped after " + length+ " chars, total length is "+ body.length()+ "]";
  }
  return "Message: " + body;
}
