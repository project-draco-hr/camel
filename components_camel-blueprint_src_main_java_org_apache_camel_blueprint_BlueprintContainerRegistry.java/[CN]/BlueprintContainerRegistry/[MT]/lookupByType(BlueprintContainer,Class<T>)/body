{
  Map<String,T> objects=new LinkedHashMap<String,T>();
  for (  ExtendedBeanMetadata metadata : blueprintContainer.getMetadata(ExtendedBeanMetadata.class)) {
    try {
      Class cl=metadata.getRuntimeClass();
      if (cl == null && metadata.getClassName() != null) {
        Bundle bundle=(Bundle)blueprintContainer.getComponentInstance("blueprintBundle");
        cl=bundle.loadClass(metadata.getClassName());
      }
      if (cl == null || type.isAssignableFrom(cl)) {
        Object o=blueprintContainer.getComponentInstance(metadata.getId());
        objects.put(metadata.getId(),type.cast(o));
      }
    }
 catch (    Throwable t) {
    }
  }
  for (  MutableReferenceMetadata metadata : blueprintContainer.getMetadata(MutableReferenceMetadata.class)) {
    try {
      Class cl=metadata.getRuntimeInterface();
      if (cl == null && metadata.getInterface() != null) {
        Bundle bundle=(Bundle)blueprintContainer.getComponentInstance("blueprintBundle");
        cl=bundle.loadClass(metadata.getInterface());
      }
      if (cl == null || type.isAssignableFrom(cl)) {
        Object o=blueprintContainer.getComponentInstance(metadata.getId());
        objects.put(metadata.getId(),type.cast(o));
      }
    }
 catch (    Throwable t) {
    }
  }
  return objects;
}
