{
  EventType[] expectedEventTypes=new EventType[]{EventType.NodeCreated,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDataChanged,EventType.NodeDeleted};
  MockEndpoint mock=getMockEndpoint("mock:zookeeper-data");
  mock.expectedMessageCount(expectedEventTypes.length);
  createCamelNode();
  updateNode(10);
  delay(500);
  client.delete("/camel");
  MockEndpoint.assertIsSatisfied(30,TimeUnit.SECONDS);
  int lastVersion=-1;
  for (int i=0; i < mock.getExchanges().size(); i++) {
    assertEquals(expectedEventTypes[i],mock.getExchanges().get(i).getIn().getHeader(ZooKeeperMessage.ZOOKEEPER_EVENT_TYPE));
    if (!EventType.NodeDeleted.equals(expectedEventTypes[i])) {
      int version=ZooKeeperMessage.getStatistics(mock.getExchanges().get(i).getIn()).getVersion();
      assertTrue("Version did not increase",lastVersion < version);
      lastVersion=version;
    }
  }
}
