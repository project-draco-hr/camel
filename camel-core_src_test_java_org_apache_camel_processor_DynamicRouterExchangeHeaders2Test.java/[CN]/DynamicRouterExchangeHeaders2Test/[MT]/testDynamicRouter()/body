{
  getMockEndpoint("mock:a").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:a").expectedHeaderReceived("invoked",1);
  getMockEndpoint("mock:b").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:b").expectedHeaderReceived("invoked",2);
  getMockEndpoint("mock:c").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:c").expectedHeaderReceived("invoked",2);
  getMockEndpoint("mock:foo").expectedBodiesReceived("Bye World");
  getMockEndpoint("mock:foo").expectedHeaderReceived("invoked",3);
  getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
  getMockEndpoint("mock:result").expectedHeaderReceived("invoked",4);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  assertEquals(5,bodies.size());
  assertEquals("Hello World",bodies.get(0));
  assertEquals("Hello World",bodies.get(1));
  assertEquals("Hello World",bodies.get(2));
  assertEquals("Bye World",bodies.get(3));
  assertEquals("Bye World",bodies.get(4));
  assertEquals(4,previouses.size());
  assertEquals("mock://a",previouses.get(0));
  assertEquals("mock://c",previouses.get(1));
  assertEquals("direct://foo",previouses.get(2));
  assertEquals("mock://result",previouses.get(3));
}
