{
  HttpCommonComponent jetty=context.getComponent("jetty",HttpCommonComponent.class);
  jetty.setAllowJavaSerializedObject(false);
  HttpComponent http=context.getComponent("http",HttpComponent.class);
  http.setAllowJavaSerializedObject(true);
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("jetty:http://localhost:{{port}}/myapp/myservice").process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          String body=exchange.getIn().getBody(String.class);
          assertNotNull(body);
          assertEquals("Hello World",body);
          MyCoolBean reply=new MyCoolBean(456,"Camel rocks");
          exchange.getOut().setBody(reply);
          exchange.getOut().setHeader(Exchange.CONTENT_TYPE,HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
        }
      }
);
    }
  }
);
  context.start();
  MyCoolBean cool=new MyCoolBean(123,"Camel");
  try {
    template.requestBodyAndHeader("http://localhost:{{port}}/myapp/myservice",cool,Exchange.CONTENT_TYPE,HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT,MyCoolBean.class);
    fail("Should fail");
  }
 catch (  CamelExecutionException e) {
    HttpOperationFailedException cause=assertIsInstanceOf(HttpOperationFailedException.class,e.getCause());
    assertEquals(415,cause.getStatusCode());
  }
}
