{
  PackageScanClassResolver resolver=exchange.getContext().getPackageScanClassResolver();
  BindyFixedLengthFactory factory=(BindyFixedLengthFactory)getFactory(resolver);
  ObjectHelper.notNull(factory,"not instantiated");
  List<Map<String,Object>> models=new ArrayList<Map<String,Object>>();
  Map<String,Object> model;
  InputStreamReader in=new InputStreamReader(inputStream,IOHelper.getCharsetName(exchange));
  Scanner scanner=new Scanner(in);
  AtomicInteger count=new AtomicInteger(0);
  try {
    if (scanner.hasNextLine() && factory.hasHeader()) {
      String line=getNextNonEmptyLine(scanner,count);
      if (!factory.skipHeader()) {
        Map<String,Object> headerObjMap=createModel(headerFactory,line,count.intValue());
        exchange.getOut().setHeader(CAMEL_BINDY_FIXED_LENGTH_HEADER,headerObjMap);
      }
    }
    String thisLine=getNextNonEmptyLine(scanner,count);
    String nextLine=null;
    if (thisLine != null) {
      nextLine=getNextNonEmptyLine(scanner,count);
    }
    while (thisLine != null && nextLine != null) {
      model=createModel(factory,thisLine,count.intValue());
      models.add(model);
      thisLine=nextLine;
      nextLine=getNextNonEmptyLine(scanner,count);
    }
    if (thisLine != null) {
      if (factory.hasFooter()) {
        if (!factory.skipFooter()) {
          Map<String,Object> footerObjMap=createModel(footerFactory,thisLine,count.intValue());
          exchange.getOut().setHeader(CAMEL_BINDY_FIXED_LENGTH_FOOTER,footerObjMap);
        }
      }
 else {
        model=createModel(factory,thisLine,count.intValue());
        models.add(model);
      }
    }
    if (models.size() == 0) {
      throw new java.lang.IllegalArgumentException("No records have been defined in the the file");
    }
 else {
      return extractUnmarshalResult(models);
    }
  }
  finally {
    scanner.close();
    IOHelper.close(in,"in",LOG);
  }
}
