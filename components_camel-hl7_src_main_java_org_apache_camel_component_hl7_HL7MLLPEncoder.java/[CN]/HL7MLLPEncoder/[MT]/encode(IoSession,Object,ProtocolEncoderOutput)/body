{
  if (message == null) {
    throw new IllegalArgumentException("Message to encode is null");
  }
 else   if (message instanceof Exception) {
    throw (Exception)message;
  }
  CharsetEncoder encoder=(CharsetEncoder)session.getAttribute(CHARSET_ENCODER);
  if (encoder == null) {
    encoder=config.getCharset().newEncoder();
    session.setAttribute(CHARSET_ENCODER,encoder);
  }
  String body;
  if (message instanceof Message) {
    body=HL7Converter.encode((Message)message,config.isValidate());
  }
 else   if (message instanceof String) {
    body=(String)message;
  }
 else   if (message instanceof byte[]) {
    body=new String((byte[])message);
  }
 else {
    throw new IllegalArgumentException("The message to encode is not a supported type: " + message.getClass().getCanonicalName());
  }
  if (config.isConvertLFtoCR()) {
    body=body.replace('\n','\r');
  }
  ByteBuffer buf=ByteBuffer.allocate(body.length() + 3).setAutoExpand(true);
  buf.put((byte)config.getStartByte());
  buf.putString(body,encoder);
  buf.put((byte)config.getEndByte1());
  buf.put((byte)config.getEndByte2());
  buf.flip();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Encoding HL7 from {} to byte stream",message.getClass().getCanonicalName());
  }
  out.write(buf);
}
