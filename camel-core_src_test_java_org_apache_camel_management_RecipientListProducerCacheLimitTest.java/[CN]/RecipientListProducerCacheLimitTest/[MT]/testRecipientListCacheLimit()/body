{
  MBeanServer mbeanServer=getMBeanServer();
  for (int i=0; i < 100; i++) {
    getMockEndpoint("mock:foo" + i).expectedMessageCount(1);
  }
  for (int i=0; i < 100; i++) {
    template.sendBodyAndHeader("direct:start","Hello World","foo","mock:foo" + i);
  }
  assertMockEndpointsSatisfied();
  Set<ObjectName> names=CastUtils.cast(mbeanServer.queryNames(new ObjectName("org.apache.camel" + ":type=services,*"),null));
  ObjectName on;
  int found=0;
  for (  ObjectName name : names) {
    if (name.toString().contains("ProducerCache")) {
      found++;
      on=name;
      Integer max=(Integer)mbeanServer.getAttribute(on,"MaximumCacheSize");
      assertEquals(40,max.intValue());
      Integer current=(Integer)mbeanServer.getAttribute(on,"Size");
      assertEquals(40,current.intValue());
      String source=(String)mbeanServer.getAttribute(on,"Source");
      assertEquals("RecipientList[header(foo)]",source);
    }
  }
  assertEquals("Should find 1 ProducerCache",1,found);
}
