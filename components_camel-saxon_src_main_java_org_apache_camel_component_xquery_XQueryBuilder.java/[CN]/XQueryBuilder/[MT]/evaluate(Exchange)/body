{
  try {
    if (!initialized.get()) {
      try {
        lock.acquire();
        if (!initialized.get()) {
          initialize();
          initialized.set(true);
        }
      }
  finally {
        lock.release();
      }
    }
    if (resultType != null) {
      if (resultType.equals(String.class)) {
        return evaluateAsString(exchange);
      }
 else       if (resultType.isAssignableFrom(Collection.class)) {
        return evaluateAsList(exchange);
      }
 else       if (resultType.isAssignableFrom(Node.class)) {
        return evaluateAsDOM(exchange);
      }
 else {
      }
    }
switch (resultsFormat) {
case Bytes:
      return evaluateAsBytes(exchange);
case BytesSource:
    return evaluateAsBytesSource(exchange);
case DOM:
  return evaluateAsDOM(exchange);
case List:
return evaluateAsList(exchange);
case StringSource:
return evaluateAsStringSource(exchange);
case String:
default :
return evaluateAsString(exchange);
}
}
 catch (Exception e) {
throw new RuntimeExpressionException(e);
}
}
