{
  Configuration config=getConfiguration();
  DynamicQueryContext dynamicQueryContext=new DynamicQueryContext(config);
  Message in=exchange.getIn();
  Item item=null;
  if (ObjectHelper.isNotEmpty(getHeaderName())) {
    item=in.getHeader(getHeaderName(),Item.class);
  }
 else {
    item=in.getBody(Item.class);
  }
  if (item != null) {
    dynamicQueryContext.setContextItem(item);
  }
 else {
    Object body=null;
    if (ObjectHelper.isNotEmpty(getHeaderName())) {
      body=in.getHeader(getHeaderName());
    }
 else {
      body=in.getBody();
    }
    InputStream is=null;
    try {
      Source source;
      if (isInputStreamNeeded(exchange)) {
        if (ObjectHelper.isNotEmpty(getHeaderName())) {
          is=exchange.getIn().getHeader(getHeaderName(),InputStream.class);
        }
 else {
          is=exchange.getIn().getBody(InputStream.class);
        }
        source=getSource(exchange,is);
      }
 else {
        source=getSource(exchange,body);
      }
      if (source == null) {
        if (body instanceof BeanInvocation) {
          BeanInvocation bi=exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class,body);
          if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {
            source=null;
          }
        }
      }
      if (source == null) {
        throw new NoTypeConversionAvailableException(body,Source.class);
      }
      DocumentInfo doc=config.buildDocument(source);
      dynamicQueryContext.setContextItem(doc);
    }
  finally {
      IOHelper.close(is);
    }
  }
  configureQuery(dynamicQueryContext,exchange);
  MessageHelper.resetStreamCache(exchange.getIn());
  return dynamicQueryContext;
}
