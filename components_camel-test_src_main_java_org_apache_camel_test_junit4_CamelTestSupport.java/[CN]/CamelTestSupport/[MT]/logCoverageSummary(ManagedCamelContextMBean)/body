{
  StringBuilder builder=new StringBuilder("\nCoverage summary\n");
  int routes=managedCamelContext.getTotalRoutes();
  long contextExchangesTotal=managedCamelContext.getExchangesTotal();
  List<String> uncoveredRoutes=new ArrayList<>();
  StringBuilder routesSummary=new StringBuilder();
  routesSummary.append("\tProcessor coverage\n");
  MBeanServer server=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  Map<String,List<ManagedProcessorMBean>> processorsForRoute=findProcessorsForEachRoute(server);
  for (  Route route : context.getRoutes()) {
    ManagedRouteMBean managedRoute=context.getManagedRoute(route.getId(),ManagedRouteMBean.class);
    if (managedRoute.getExchangesTotal() == 0) {
      uncoveredRoutes.add(route.getId());
    }
    long routeCoveragePercentage=Math.round((double)managedRoute.getExchangesTotal() / contextExchangesTotal * 100);
    routesSummary.append("\t\tRoute ").append(route.getId()).append(" total: ").append(managedRoute.getExchangesTotal()).append(" (").append(routeCoveragePercentage).append("%)\n");
    if (server != null) {
      for (      ManagedProcessorMBean managedProcessor : processorsForRoute.get(route.getId())) {
        String processorId=managedProcessor.getProcessorId();
        long processorExchangesTotal=managedProcessor.getExchangesTotal();
        long processorCoveragePercentage=Math.round((double)processorExchangesTotal / contextExchangesTotal * 100);
        routesSummary.append("\t\t\tProcessor ").append(processorId).append(" total: ").append(processorExchangesTotal).append(" (").append(processorCoveragePercentage).append("%)\n");
      }
    }
  }
  int used=routes - uncoveredRoutes.size();
  long contextPercentage=Math.round((double)used / routes * 100);
  builder.append("\tRoute coverage: ").append(used).append(" out of ").append(routes).append(" routes used (").append(contextPercentage).append("%)\n");
  builder.append("\t\tCamelContext (").append(managedCamelContext.getCamelId()).append(") total: ").append(contextExchangesTotal).append("\n");
  if (uncoveredRoutes.size() > 0) {
    builder.append("\t\tUncovered routes: ").append(uncoveredRoutes.stream().collect(Collectors.joining(", "))).append("\n");
  }
  builder.append(routesSummary);
  log.info(builder.toString());
}
