{
  InputStream is=null;
  try {
    LOG.trace("Trying to open resource as a file.");
    is=new FileInputStream(resource);
    LOG.debug("Loaded resource as file {}",resource);
  }
 catch (  FileNotFoundException e) {
    LOG.trace("Could not open resource as a file.",e);
  }
  if (is == null && Thread.currentThread().getContextClassLoader() != null) {
    LOG.trace("Trying to open resource as a class path resource with the TCCL {}.",Thread.currentThread().getContextClassLoader());
    is=Thread.currentThread().getContextClassLoader().getResourceAsStream(resource);
    if (is == null) {
      LOG.trace("Could not open resource as a class path resource using the TCCL {}.",Thread.currentThread().getContextClassLoader());
    }
 else {
      LOG.debug("Loaded resource from TCCL ClassLoader {}",resource);
    }
  }
  if (is == null) {
    LOG.trace("Trying to open resource as a class path resource using the classloader {}.",this.getClass().getClassLoader());
    is=this.getClass().getResourceAsStream(resource);
    if (is == null) {
      LOG.trace("Could not open resource as a class path resource using the classloader {}.",this.getClass().getClassLoader());
    }
 else {
      LOG.debug("Loaded resource from JsseParameter ClassLoader {}",resource);
    }
  }
  if (is == null) {
    try {
      LOG.trace("Trying to open resource as a URL.");
      is=new URL(resource).openStream();
      LOG.debug("Loaded resource as URL {}",resource);
    }
 catch (    IOException e) {
      LOG.trace("Could not open resource as a URL",e);
    }
  }
  if (is == null && this.context != null) {
    LOG.trace("Trying to open resource using the CamelContext ClassResolver {}",context.getClassResolver());
    is=context.getClassResolver().loadResourceAsStream(resource);
    if (is == null) {
      LOG.trace("Could not to open resource using the CamelContext ClassResolver {}.",context.getClassResolver());
    }
 else {
      LOG.debug("Loaded resource using the CamelContext ClassResolver {}",resource);
    }
  }
  if (is == null) {
    throw new IOException("Could not open " + resource + " as a file, class path resource, or URL.");
  }
  return is;
}
