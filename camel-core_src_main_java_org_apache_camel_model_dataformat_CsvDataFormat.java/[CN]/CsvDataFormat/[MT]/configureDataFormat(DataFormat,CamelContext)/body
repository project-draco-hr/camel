{
  if (ObjectHelper.isNotEmpty(formatRef)) {
    Object format=CamelContextHelper.mandatoryLookup(camelContext,formatRef);
    setProperty(camelContext,dataFormat,"format",format);
  }
 else   if (ObjectHelper.isNotEmpty(formatName)) {
    setProperty(camelContext,dataFormat,"formatName",formatName);
  }
  if (commentMarkerDisabled != null) {
    setProperty(camelContext,dataFormat,"commentMarkerDisabled",commentMarkerDisabled);
  }
  if (commentMarker != null) {
    setProperty(camelContext,dataFormat,"commentMarker",singleChar(commentMarker,"commentMarker"));
  }
  if (delimiter != null) {
    setProperty(camelContext,dataFormat,"delimiter",singleChar(delimiter,"delimiter"));
  }
  if (escapeDisabled != null) {
    setProperty(camelContext,dataFormat,"escapeDisabled",escapeDisabled);
  }
  if (escape != null) {
    setProperty(camelContext,dataFormat,"escape",singleChar(escape,"escape"));
  }
  if (headerDisabled != null) {
    setProperty(camelContext,dataFormat,"headerDisabled",headerDisabled);
  }
  if (header != null && !header.isEmpty()) {
    setProperty(camelContext,dataFormat,"header",header.toArray(new String[header.size()]));
  }
  if (allowMissingColumnNames != null) {
    setProperty(camelContext,dataFormat,"allowMissingColumnNames",allowMissingColumnNames);
  }
  if (ignoreEmptyLines != null) {
    setProperty(camelContext,dataFormat,"ignoreEmptyLines",ignoreEmptyLines);
  }
  if (ignoreSurroundingSpaces != null) {
    setProperty(camelContext,dataFormat,"ignoreSurroundingSpaces",ignoreSurroundingSpaces);
  }
  if (nullStringDisabled != null) {
    setProperty(camelContext,dataFormat,"nullStringDisabled",nullStringDisabled);
  }
  if (nullString != null) {
    setProperty(camelContext,dataFormat,"nullString",nullString);
  }
  if (quoteDisabled != null) {
    setProperty(camelContext,dataFormat,"quoteDisabled",quoteDisabled);
  }
  if (quote != null) {
    setProperty(camelContext,dataFormat,"quote",singleChar(quote,"quote"));
  }
  if (recordSeparatorDisabled != null) {
    setProperty(camelContext,dataFormat,"recordSeparatorDisabled",recordSeparatorDisabled);
  }
  if (recordSeparator != null) {
    setProperty(camelContext,dataFormat,"recordSeparator",recordSeparator);
  }
  if (skipHeaderRecord != null) {
    setProperty(camelContext,dataFormat,"skipHeaderRecord",skipHeaderRecord);
  }
  if (lazyLoad != null) {
    setProperty(camelContext,dataFormat,"lazyLoad",lazyLoad);
  }
  if (useMaps != null) {
    setProperty(camelContext,dataFormat,"useMaps",useMaps);
  }
  if (ObjectHelper.isNotEmpty(recordConverterRef)) {
    Object recordConverter=CamelContextHelper.mandatoryLookup(camelContext,recordConverterRef);
    setProperty(camelContext,dataFormat,"recordConverter",recordConverter);
  }
}
