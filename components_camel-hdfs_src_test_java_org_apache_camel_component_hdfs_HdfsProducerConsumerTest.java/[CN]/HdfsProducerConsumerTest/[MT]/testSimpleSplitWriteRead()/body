{
  if (SKIP) {
    return;
  }
  final Path file=new Path(new File("target/test/test-camel-simple-write-file").getAbsolutePath());
  context.addRoutes(new RouteBuilder(){
    @Override public void configure(){
      from("direct:start").to("hdfs:///" + file.toUri() + "?fileSystemType=LOCAL&splitStrategy=BYTES:5,IDLE:1000");
      from("hdfs:///" + file.toUri() + "?pattern=seg*&initialDelay=2000&fileSystemType=LOCAL&chunkSize=5").to("mock:result");
    }
  }
);
  context.start();
  for (int i=0; i < 10; ++i) {
    template.sendBody("direct:start","CIAO" + i);
  }
  MockEndpoint resultEndpoint=(MockEndpoint)context.getEndpoint("mock:result");
  resultEndpoint.expectedMessageCount(10);
  resultEndpoint.assertIsSatisfied();
  int i=0;
  List<Exchange> exchanges=resultEndpoint.getExchanges();
  for (  Exchange exchange : exchanges) {
    Assert.assertEquals("CIAO" + i++,exchange.getIn().getBody(String.class));
  }
}
