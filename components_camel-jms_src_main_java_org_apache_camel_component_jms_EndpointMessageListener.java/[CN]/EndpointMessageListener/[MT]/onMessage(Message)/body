{
  LOG.trace("onMessage START");
  LOG.debug("{} consumer received JMS message: {}",endpoint,message);
  boolean sendReply;
  RuntimeCamelException rce=null;
  try {
    Object replyDestination=getReplyToDestination(message);
    sendReply=replyDestination != null && !disableReplyTo;
    final Exchange exchange=createExchange(message,replyDestination);
    if (eagerLoadingOfProperties) {
      exchange.getIn().getHeaders();
    }
    String correlationId=message.getJMSCorrelationID();
    if (correlationId != null) {
      LOG.debug("Received Message has JMSCorrelationID [" + correlationId + "]");
    }
    LOG.trace("onMessage.process START");
    try {
      processor.process(exchange);
    }
 catch (    Throwable e) {
      exchange.setException(e);
    }
    LOG.trace("onMessage.process END");
    org.apache.camel.Message body=null;
    Exception cause=null;
    if (exchange.isFailed() || exchange.isRollbackOnly()) {
      if (exchange.isRollbackOnly()) {
        rce=wrapRuntimeCamelException(new RollbackExchangeException(exchange));
      }
 else       if (exchange.getException() != null) {
        if (endpoint.isTransferException()) {
          body=null;
          cause=exchange.getException();
        }
 else {
          rce=wrapRuntimeCamelException(exchange.getException());
        }
      }
 else       if (exchange.hasOut() && exchange.getOut().isFault()) {
        body=exchange.getOut();
        cause=null;
      }
    }
 else {
      if (sendReply && exchange.getPattern().isOutCapable() && exchange.hasOut()) {
        body=exchange.getOut();
        cause=null;
      }
    }
    if (rce == null && sendReply && (body != null || cause != null)) {
      LOG.trace("onMessage.sendReply START");
      if (replyDestination instanceof Destination) {
        sendReply((Destination)replyDestination,message,exchange,body,cause);
      }
 else {
        sendReply((String)replyDestination,message,exchange,body,cause);
      }
      LOG.trace("onMessage.sendReply END");
    }
  }
 catch (  Exception e) {
    rce=wrapRuntimeCamelException(e);
  }
  if (rce != null) {
    handleException(rce);
    LOG.trace("onMessage END throwing exception: {}",rce.getMessage());
    throw rce;
  }
  LOG.trace("onMessage END");
}
