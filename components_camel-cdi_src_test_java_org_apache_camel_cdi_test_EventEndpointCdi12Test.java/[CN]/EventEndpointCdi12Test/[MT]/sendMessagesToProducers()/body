{
  produceObject.sendBody("string");
  EventPayload foo=new EventPayload<>("foo");
  produceStringPayload.sendBody(foo);
  produceObject.sendBody(1234);
  produceString.sendBody("test");
  EventPayload<Integer> bar=new EventPayload<>(2);
  produceIntegerPayload.sendBody(bar);
  EventPayload<Integer> baz=new EventPayload<>(12);
  produceIntegerPayload.sendBody(baz);
  produceFooQualifier.sendBody(456L);
  produceBarQualifier.sendBody(495L);
  produceObject.sendBody(777L);
  assertThat(observer.getObjectEvents(),contains("string",foo,1234,"test",bar,baz,456L,495L,777L));
  assertThat(observer.getStringEvents(),contains("string","test"));
  assertThat(observer.getStringPayloadEvents(),contains(foo));
  assertThat(observer.getIntegerPayloadEvents(),contains(bar,baz));
  assertThat(observer.getDefaultQualifierEvents(),contains("string",foo,1234,"test",bar,baz,777L));
  assertThat(observer.getFooQualifierEvents(),contains(456L));
  assertThat(observer.getBarQualifierEvents(),contains(495L));
}
