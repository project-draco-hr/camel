{
  return processor.process(exchange,new AsyncCallback(){
    public void done(    boolean sync){
      if (sync) {
        return;
      }
      Exchange nextExchange=exchange;
      while (processors.hasNext()) {
        AsyncProcessor processor=AsyncProcessorTypeConverter.convert(processors.next());
        if (nextExchange.isFailed()) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Mesage exchange has failed so breaking out of pipeline: " + nextExchange + " exception: "+ nextExchange.getException()+ " fault: "+ nextExchange.getFault(false));
          }
          break;
        }
        nextExchange=createNextExchange(processor,nextExchange);
        sync=process(original,nextExchange,callback,processors,processor);
        if (!sync) {
          return;
        }
      }
      ExchangeHelper.copyResults(original,nextExchange);
      callback.done(false);
    }
  }
);
}
