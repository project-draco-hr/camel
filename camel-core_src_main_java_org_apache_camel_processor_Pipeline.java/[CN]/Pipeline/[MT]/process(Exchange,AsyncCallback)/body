{
  Iterator<Processor> processors=getProcessors().iterator();
  Exchange nextExchange=exchange;
  boolean first=true;
  while (continueRouting(processors,nextExchange)) {
    if (first) {
      first=false;
    }
 else {
      nextExchange=createNextExchange(nextExchange);
    }
    Processor processor=processors.next();
    AsyncProcessor async=AsyncProcessorTypeConverter.convert(processor);
    boolean sync=process(exchange,nextExchange,callback,processors,async);
    if (!sync) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Processing exchangeId: " + exchange.getExchangeId() + " is continued being processed asynchronously");
      }
      return false;
    }
    if (LOG.isTraceEnabled()) {
      LOG.trace("Processing exchangeId: " + exchange.getExchangeId() + " is continued being processed synchronously");
    }
    if (!continueProcessing(nextExchange,"so breaking out of pipeline",LOG)) {
      break;
    }
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Processing complete for exchangeId: " + exchange.getExchangeId() + " >>> "+ nextExchange);
  }
  ExchangeHelper.copyResults(exchange,nextExchange);
  callback.done(true);
  return true;
}
