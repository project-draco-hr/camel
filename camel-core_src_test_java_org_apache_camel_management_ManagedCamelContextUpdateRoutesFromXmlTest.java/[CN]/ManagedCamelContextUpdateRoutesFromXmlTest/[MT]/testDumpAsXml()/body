{
  if (isPlatform("aix")) {
    return;
  }
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedBodiesReceived("Hello World");
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
  assertEquals(1,set.size());
  String xml="<routes id=\"myRoute\" xmlns=\"http://camel.apache.org/schema/spring\">" + "<route id=\"myRoute\">" + "  <from uri=\"direct:start\"/>"+ "  <log message=\"This is a changed route saying ${body}\"/>"+ "  <to uri=\"mock:changed\"/>"+ "</route>"+ "<route id=\"myOtherRoute\">"+ "  <from uri=\"seda:bar\"/>"+ "  <to uri=\"mock:bar\"/>"+ "</route>"+ "</routes>";
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"");
  mbeanServer.invoke(on,"addOrUpdateRoutesFromXml",new Object[]{xml},new String[]{"java.lang.String"});
  set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
  assertEquals(2,set.size());
  getMockEndpoint("mock:changed").expectedMessageCount(1);
  template.sendBody("direct:start","Bye World");
  assertMockEndpointsSatisfied();
  getMockEndpoint("mock:bar").expectedMessageCount(1);
  template.sendBody("seda:bar","Hi Camel");
  assertMockEndpointsSatisfied();
}
