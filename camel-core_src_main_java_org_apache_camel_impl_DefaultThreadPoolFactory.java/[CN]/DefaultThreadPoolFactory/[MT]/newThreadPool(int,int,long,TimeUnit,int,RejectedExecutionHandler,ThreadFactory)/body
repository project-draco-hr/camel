{
  if (corePoolSize < 1) {
    throw new IllegalArgumentException("CorePoolSize must be >= 1, was " + corePoolSize);
  }
  if (maxPoolSize < corePoolSize) {
    throw new IllegalArgumentException("MaxPoolSize must be >= corePoolSize, was " + maxPoolSize + " >= "+ corePoolSize);
  }
  BlockingQueue<Runnable> workQueue;
  if (corePoolSize == 0 && maxQueueSize <= 0) {
    workQueue=new SynchronousQueue<Runnable>();
    corePoolSize=1;
    maxPoolSize=1;
  }
 else   if (maxQueueSize <= 0) {
    workQueue=new SynchronousQueue<Runnable>();
  }
 else {
    workQueue=new LinkedBlockingQueue<Runnable>(maxQueueSize);
  }
  ThreadPoolExecutor answer=new RejectableThreadPoolExecutor(corePoolSize,maxPoolSize,keepAliveTime,timeUnit,workQueue);
  answer.setThreadFactory(threadFactory);
  if (rejectedExecutionHandler == null) {
    rejectedExecutionHandler=new ThreadPoolExecutor.CallerRunsPolicy();
  }
  answer.setRejectedExecutionHandler(rejectedExecutionHandler);
  return answer;
}
