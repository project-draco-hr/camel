{
  MockEndpoint oneMock=getMockEndpoint("mock:one");
  MockEndpoint threeMock=getMockEndpoint("mock:three");
  MockEndpoint twoMock=getMockEndpoint("mock:two");
  MockEndpoint resultMock=getMockEndpoint("mock:result");
  oneMock.expectedMessageCount(1);
  oneMock.expectedHeaderReceived("foo","bar");
  twoMock.expectedMessageCount(1);
  twoMock.expectedHeaderReceived("foo","bar");
  threeMock.expectedMessageCount(0);
  resultMock.expectedMessageCount(1);
  resultMock.expectedHeaderReceived("foo","bar");
  String out=template.requestBodyAndHeader("jms:queue:start?jmsMessageType=Text&forceSendOriginalMessage=" + forceSendOriginalMessage,"Hello World","foo","bar",String.class);
  assertEquals("Hello Back",out);
  assertMockEndpointsSatisfied();
  assertEquals(ActiveMQTextMessage.class,oneMock.getExchanges().get(0).getIn().getBody().getClass());
  assertEquals("Hello World",((ActiveMQTextMessage)oneMock.getExchanges().get(0).getIn().getBody()).getText());
  assertEquals("bar",((ActiveMQTextMessage)oneMock.getExchanges().get(0).getIn().getBody()).getStringProperty("foo"));
  assertEquals(ActiveMQTextMessage.class,twoMock.getExchanges().get(0).getIn().getBody().getClass());
  assertEquals("Hello World",((ActiveMQTextMessage)twoMock.getExchanges().get(0).getIn().getBody()).getText());
  assertEquals("bar",((ActiveMQTextMessage)twoMock.getExchanges().get(0).getIn().getBody()).getStringProperty("foo"));
  oneMock.reset();
  twoMock.reset();
  threeMock.reset();
  resultMock.reset();
  oneMock.expectedMessageCount(0);
  twoMock.expectedMessageCount(0);
  threeMock.expectedMessageCount(1);
  threeMock.expectedHeaderReceived("foo","bar");
  resultMock.expectedMessageCount(1);
  resultMock.expectedHeaderReceived("foo","bar");
  out=template.requestBodyAndHeader("jms:queue:start?jmsMessageType=Text&forceSendOriginalMessage=" + forceSendOriginalMessage,"Hello World","foo","bar",String.class);
  assertEquals("Bye World",out);
  assertMockEndpointsSatisfied();
  assertEquals(ActiveMQTextMessage.class,threeMock.getExchanges().get(0).getIn().getBody().getClass());
  assertEquals("Hello World",((ActiveMQTextMessage)threeMock.getExchanges().get(0).getIn().getBody()).getText());
  assertEquals("bar",((ActiveMQTextMessage)threeMock.getExchanges().get(0).getIn().getBody()).getStringProperty("foo"));
}
