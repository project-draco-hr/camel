{
  addOption(new Option("h","help","Displays the help screen"){
    protected void doProcess(    String arg,    LinkedList<String> remainingArgs){
      showOptions();
      completed();
    }
  }
);
  addOption(new ParameterOption("o","outdir","Sets the DOT output directory where the visual representations of the routes are generated","dot"){
    protected void doProcess(    String arg,    String parameter,    LinkedList<String> remainingArgs){
      setDotOutputDir(parameter);
    }
  }
);
  addOption(new ParameterOption("ad","aggregate-dot","Aggregates all routes (in addition to individual route generation) into one context to create one monolithic DOT file for visual representations the entire system.","aggregate-dot"){
    protected void doProcess(    String arg,    String parameter,    LinkedList<String> remainingArgs){
      setAggregateDot("true".equals(parameter));
    }
  }
);
  addOption(new ParameterOption("d","duration","Sets the time duration that the applicaiton will run for, by default in milliseconds. You can use '10s' for 10 seconds etc","duration"){
    protected void doProcess(    String arg,    String parameter,    LinkedList<String> remainingArgs){
      String value=parameter.toUpperCase();
      if (value.endsWith("S")) {
        value=value.substring(0,value.length() - 1);
        setTimeUnit(TimeUnit.SECONDS);
      }
      setDuration(Integer.parseInt(value));
    }
  }
);
  addOption(new Option("x","debug","Enables the debugger"){
    protected void doProcess(    String arg,    LinkedList<String> remainingArgs){
      enableDebug();
    }
  }
);
  addOption(new Option("t","trace","Enables tracing"){
    protected void doProcess(    String arg,    LinkedList<String> remainingArgs){
      enableTrace();
    }
  }
);
  addOption(new ParameterOption("out","output","Output all routes to the specified XML file","filename"){
    protected void doProcess(    String arg,    String parameter,    LinkedList<String> remainingArgs){
      setRoutesOutputFile(parameter);
    }
  }
);
}
