{
  endpoint.setIteratorType(ShardIteratorType.LATEST);
  when(shardIteratorHandler.getShardIterator(anyString())).thenReturn("shard_iterator_b_000","shard_iterator_b_001","shard_iterator_b_001");
  Mockito.reset(amazonDynamoDBStreams);
  when(amazonDynamoDBStreams.getRecords(any(GetRecordsRequest.class))).thenAnswer(recordsAnswer).thenThrow(new ExpiredIteratorException("expired shard")).thenAnswer(recordsAnswer);
  undertest.poll();
  undertest.poll();
  ArgumentCaptor<Exchange> exchangeCaptor=ArgumentCaptor.forClass(Exchange.class);
  verify(processor,times(3)).process(exchangeCaptor.capture(),any(AsyncCallback.class));
  verify(shardIteratorHandler,times(2)).getShardIterator(null);
  verify(shardIteratorHandler).getShardIterator("9");
  assertThat(exchangeCaptor.getAllValues().get(0).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(),is("9"));
  assertThat(exchangeCaptor.getAllValues().get(1).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(),is("11"));
  assertThat(exchangeCaptor.getAllValues().get(2).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(),is("13"));
}
