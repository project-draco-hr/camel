{
  endpoint.setAmazonDynamoDbStreamsClient(amazonDynamoDBStreams);
  undertest=new DdbStreamConsumer(endpoint,processor,shardIteratorHandler);
  final Map<String,String> shardIterators=new HashMap<>();
  shardIterators.put("shard_iterator_a_000","shard_iterator_a_001");
  shardIterators.put("shard_iterator_b_000","shard_iterator_b_001");
  shardIterators.put("shard_iterator_b_001","shard_iterator_b_002");
  shardIterators.put("shard_iterator_c_000","shard_iterator_c_001");
  shardIterators.put("shard_iterator_d_000","shard_iterator_d_001");
  final Map<String,Collection<Record>> answers=new HashMap<>();
  answers.put("shard_iterator_a_001",createRecords("2"));
  answers.put("shard_iterator_b_000",createRecords("9"));
  answers.put("shard_iterator_b_001",createRecords("11","13"));
  answers.put("shard_iterator_b_002",createRecords("14"));
  answers.put("shard_iterator_d_000",createRecords("21","25"));
  answers.put("shard_iterator_d_001",createRecords("30","35","40"));
  recordsAnswer=new GetRecordsAnswer(shardIterators,answers);
  when(amazonDynamoDBStreams.getRecords(any(GetRecordsRequest.class))).thenAnswer(recordsAnswer);
}
