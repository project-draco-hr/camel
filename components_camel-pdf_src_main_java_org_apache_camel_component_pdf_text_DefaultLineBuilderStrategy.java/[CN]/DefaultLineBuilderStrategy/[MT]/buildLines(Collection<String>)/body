{
  LinkedList<String> wordsList=new LinkedList<>(splittedText);
  Collection<String> lines=new ArrayList<>();
  LineBuilder currentLine=new LineBuilder();
  float allowedLineWidth=getAllowedLineWidth();
  while (!wordsList.isEmpty()) {
    String word=wordsList.removeFirst();
    if (isWordFitInCurrentLine(currentLine,word,allowedLineWidth)) {
      currentLine.appendWord(word);
      if (wordsList.isEmpty()) {
        lines.add(currentLine.buildLine());
      }
    }
 else     if (currentLine.getWordsCount() != 0) {
      lines.add(currentLine.buildLine());
      wordsList.addFirst(word);
    }
 else {
      int splitIndex=findSplitIndex(word,allowedLineWidth);
      currentLine.appendWord(word.substring(0,splitIndex));
      lines.add(currentLine.buildLine());
      wordsList.addFirst(word.substring(splitIndex));
    }
  }
  return lines;
}
