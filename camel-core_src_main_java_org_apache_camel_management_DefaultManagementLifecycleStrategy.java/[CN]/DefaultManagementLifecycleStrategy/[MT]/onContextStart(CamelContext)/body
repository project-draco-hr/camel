{
  Object mc=getManagementObjectStrategy().getManagedObjectForCamelContext(context);
  String name=context.getName();
  String managementName=context.getManagementNameStrategy().getName();
  try {
    boolean done=false;
    while (!done) {
      ObjectName on=getManagementStrategy().getManagementNamingStrategy().getObjectNameForCamelContext(managementName,name);
      boolean exists=getManagementStrategy().isManaged(mc,on);
      if (!exists) {
        done=true;
      }
 else {
        boolean fixed=false;
        String newName=findFreeName(mc,context.getManagementNameStrategy(),name);
        if (newName != null) {
          fixed=true;
          done=true;
          managementName=newName;
        }
        if (!fixed) {
          throw new VetoCamelContextStartException("CamelContext (" + context.getName() + ") with ObjectName["+ on+ "] is already registered."+ " Make sure to use unique names on CamelContext when using multiple CamelContexts in the same MBeanServer.",context);
        }
 else {
          LOG.warn("This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer.");
        }
      }
    }
  }
 catch (  VetoCamelContextStartException e) {
    throw e;
  }
catch (  Exception e) {
    throw ObjectHelper.wrapRuntimeCamelException(e);
  }
  if (context instanceof DefaultCamelContext) {
    ((DefaultCamelContext)context).setManagementName(managementName);
  }
  try {
    manageObject(mc);
  }
 catch (  Exception e) {
    throw ObjectHelper.wrapRuntimeCamelException(e);
  }
  initialized=true;
  if (mc instanceof ManagedCamelContext) {
    camelContextMBean=(ManagedCamelContext)mc;
  }
  enlistPreRegisteredServices();
}
