{
  if (service instanceof Channel || service instanceof UnitOfWork || service instanceof InstrumentationProcessor) {
    return null;
  }
  Object answer=null;
  if (service instanceof ManagementAware) {
    return ((ManagementAware<Service>)service).getManagedObject(service);
  }
 else   if (service instanceof Tracer) {
    Tracer tracer=(Tracer)service;
    ManagedTracer mt=managedTracers.get(tracer);
    if (mt == null) {
      mt=new ManagedTracer(context,tracer);
      mt.init(getManagementStrategy());
      managedTracers.put(tracer,mt);
    }
    return mt;
  }
 else   if (service instanceof BacklogTracer) {
    BacklogTracer backlogTracer=(BacklogTracer)service;
    ManagedBacklogTracer mt=managedBacklogTracers.get(backlogTracer);
    if (mt == null) {
      mt=new ManagedBacklogTracer(context,backlogTracer);
      mt.init(getManagementStrategy());
      managedBacklogTracers.put(backlogTracer,mt);
    }
    return mt;
  }
 else   if (service instanceof BacklogDebugger) {
    BacklogDebugger backlogDebugger=(BacklogDebugger)service;
    ManagedBacklogDebugger md=managedBacklogDebuggers.get(backlogDebugger);
    if (md == null) {
      md=new ManagedBacklogDebugger(context,backlogDebugger);
      md.init(getManagementStrategy());
      managedBacklogDebuggers.put(backlogDebugger,md);
    }
    return md;
  }
 else   if (service instanceof Producer) {
    answer=getManagementObjectStrategy().getManagedObjectForProducer(context,(Producer)service);
  }
 else   if (service instanceof Consumer) {
    answer=getManagementObjectStrategy().getManagedObjectForConsumer(context,(Consumer)service);
  }
 else   if (service instanceof Processor) {
    return getManagedObjectForProcessor(context,(Processor)service,route);
  }
 else   if (service instanceof ThrottlingInflightRoutePolicy) {
    answer=new ManagedThrottlingInflightRoutePolicy(context,(ThrottlingInflightRoutePolicy)service);
  }
 else   if (service instanceof ConsumerCache) {
    answer=new ManagedConsumerCache(context,(ConsumerCache)service);
  }
 else   if (service instanceof ProducerCache) {
    answer=new ManagedProducerCache(context,(ProducerCache)service);
  }
 else   if (service instanceof DefaultEndpointRegistry) {
    answer=new ManagedEndpointRegistry(context,(DefaultEndpointRegistry)service);
  }
 else   if (service instanceof TypeConverterRegistry) {
    answer=new ManagedTypeConverterRegistry(context,(TypeConverterRegistry)service);
  }
 else   if (service instanceof RestRegistry) {
    answer=new ManagedRestRegistry(context,(RestRegistry)service);
  }
 else   if (service instanceof InflightRepository) {
    answer=new ManagedInflightRepository(context,(InflightRepository)service);
  }
 else   if (service instanceof AsyncProcessorAwaitManager) {
    answer=new ManagedAsyncProcessorAwaitManager(context,(AsyncProcessorAwaitManager)service);
  }
 else   if (service instanceof RuntimeEndpointRegistry) {
    answer=new ManagedRuntimeEndpointRegistry(context,(RuntimeEndpointRegistry)service);
  }
 else   if (service instanceof StreamCachingStrategy) {
    answer=new ManagedStreamCachingStrategy(context,(StreamCachingStrategy)service);
  }
 else   if (service instanceof EventNotifier) {
    answer=getManagementObjectStrategy().getManagedObjectForEventNotifier(context,(EventNotifier)service);
  }
 else   if (service != null) {
    answer=getManagementObjectStrategy().getManagedObjectForService(context,service);
  }
  if (answer != null && answer instanceof ManagedService) {
    ManagedService ms=(ManagedService)answer;
    ms.setRoute(route);
    ms.init(getManagementStrategy());
  }
  return answer;
}
