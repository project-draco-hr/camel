{
  ObjectHelper.notNull(command,"command");
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  ByteArrayOutputStream err=new ByteArrayOutputStream();
  ExecResult result=new ExecResult(command);
  DefaultExecutor executor=prepareDefaultExecutor(command);
  PumpStreamHandler handler=new PumpStreamHandler(out,err,command.getInput());
  executor.setStreamHandler(handler);
  CommandLine cl=toCommandLine(command);
  try {
    int exitValue=executor.execute(cl);
    result.setExitValue(exitValue);
    result.setStdout(new ByteArrayInputStream(out.toByteArray()));
    result.setStderr(new ByteArrayInputStream(err.toByteArray()));
    return result;
  }
 catch (  ExecuteException ee) {
    LOG.error("ExecuteExeption while executing " + command.toString());
    throw new ExecException("Failed to execute command " + command,ee);
  }
catch (  IOException ioe) {
    LOG.error("IOException while executing " + command.toString());
    throw new ExecException("Unable to execute command " + command,ioe);
  }
 finally {
    IOUtils.closeQuietly(command.getInput());
  }
}
