{
  if (!isRunAllowed()) {
    if (exchange.getException() == null) {
      exchange.setException(new RejectedExecutionException());
    }
    callback.done(data.sync);
    return;
  }
  if (exchange.isTransacted() && !supportTransacted() && exchange.getException() != null) {
    if (log.isDebugEnabled()) {
      log.debug("This error handler does not support transacted exchanges." + " Bypassing this error handler: " + this + " for exchangeId: "+ exchange.getExchangeId());
    }
    return;
  }
  if (exchange.getException() != null) {
    handleException(exchange,data);
  }
  boolean shouldRedeliver=shouldRedeliver(exchange,data);
  if (!shouldRedeliver) {
    deliverToFaultProcessor(exchange,callback,data);
    return;
  }
  if (data.redeliveryCounter > 0) {
    prepareExchangeForRedelivery(exchange);
    data.redeliveryDelay=data.currentRedeliveryPolicy.calculateRedeliveryDelay(data.redeliveryDelay,data.redeliveryCounter);
    REDELIVER_TIMER.schedule(new RedeliverTimerTask(exchange,callback,data),data.redeliveryDelay);
    deliverToRedeliveryProcessor(exchange,callback,data);
  }
}
