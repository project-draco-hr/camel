{
  while (true) {
    if (exchange.getException() != null) {
      Throwable e=exchange.getException();
      exchange.setException(null);
      logger.log("On delivery attempt: " + data.redeliveryCounter + " caught: "+ e,e);
      data.redeliveryCounter=incrementRedeliveryCounter(exchange,e);
      ExceptionType exceptionPolicy=getExceptionPolicy(exchange,e);
      if (exceptionPolicy != null) {
        data.currentRedeliveryPolicy=exceptionPolicy.createRedeliveryPolicy(data.currentRedeliveryPolicy);
        Processor processor=exceptionPolicy.getErrorHandler();
        if (processor != null) {
          data.failureProcessor=processor;
        }
      }
    }
    if (!data.currentRedeliveryPolicy.shouldRedeliver(data.redeliveryCounter)) {
      setFailureHandled(exchange,true);
      AsyncProcessor afp=AsyncProcessorTypeConverter.convert(data.failureProcessor);
      return afp.process(exchange,callback);
    }
    if (data.redeliveryCounter > 0) {
      data.redeliveryDelay=data.currentRedeliveryPolicy.getRedeliveryDelay(data.redeliveryDelay);
      sleep(data.redeliveryDelay);
    }
    boolean sync=outputAsync.process(exchange,new AsyncCallback(){
      public void done(      boolean sync){
        if (sync) {
          return;
        }
        if (exchange.getException() != null) {
          process(exchange,callback,data);
        }
 else {
          callback.done(sync);
        }
      }
    }
);
    if (!sync) {
      return false;
    }
    if (exchange.getException() == null || isFailureHandled(exchange)) {
      callback.done(true);
      return true;
    }
  }
}
