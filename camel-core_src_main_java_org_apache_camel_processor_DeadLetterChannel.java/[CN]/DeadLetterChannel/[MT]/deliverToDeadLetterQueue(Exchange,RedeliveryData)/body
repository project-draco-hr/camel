{
  if (data.deadLetterQueue == null) {
    return;
  }
  ExchangeHelper.setFailureHandled(exchange);
  decrementRedeliveryCounter(exchange);
  MessageHelper.resetStreamCache(exchange.getIn());
  if (data.useOriginalExchange) {
    if (log.isTraceEnabled()) {
      log.trace("Using the original exchange bodies in the DedLetterQueue instead of the current exchange bodies");
    }
    Exchange original=exchange.getUnitOfWork().getOriginalExchange();
    exchange.setIn(original.getIn());
    if (original.hasOut()) {
      exchange.setOut(original.getOut());
    }
 else {
      exchange.setOut(null);
    }
  }
  if (log.isTraceEnabled()) {
    log.trace("DeadLetterQueue " + data.deadLetterQueue + " is processing Exchange: "+ exchange);
  }
  try {
    data.deadLetterQueue.process(exchange);
  }
 catch (  Exception e) {
    exchange.setException(e);
  }
  log.trace("DedLetterQueue processor done");
  prepareExchangeAfterMovedToDeadLetterQueue(exchange,data.handledPredicate);
  String msg="Failed delivery for exchangeId: " + exchange.getExchangeId() + ". Moved to the dead letter queue: "+ data.deadLetterQueue;
  logFailedDelivery(false,exchange,msg,data,null);
}
