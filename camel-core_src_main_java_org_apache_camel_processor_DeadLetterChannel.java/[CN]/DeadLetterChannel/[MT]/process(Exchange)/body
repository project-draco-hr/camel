{
  int redeliveryCounter=0;
  long redeliveryDelay=0;
  RedeliveryPolicy currentRedeliveryPolicy=redeliveryPolicy;
  Processor failureProcessor=deadLetter;
  do {
    if (redeliveryCounter > 0) {
      redeliveryDelay=currentRedeliveryPolicy.getRedeliveryDelay(redeliveryDelay);
      sleep(redeliveryDelay);
    }
    try {
      output.process(exchange);
      return;
    }
 catch (    Throwable e) {
      logger.log("On delivery attempt: " + redeliveryCounter + " caught: "+ e,e);
      redeliveryCounter=incrementRedeliveryCounter(exchange,e);
      ExceptionType exceptionPolicy=getExceptionPolicy(exchange,e);
      if (exceptionPolicy != null) {
        currentRedeliveryPolicy=exceptionPolicy.createRedeliveryPolicy(currentRedeliveryPolicy);
        Processor processor=exceptionPolicy.getErrorHandler();
        if (processor != null) {
          failureProcessor=processor;
        }
      }
    }
  }
 while (currentRedeliveryPolicy.shouldRedeliver(redeliveryCounter));
  failureProcessor.process(exchange);
}
