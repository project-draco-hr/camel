{
  Exchange answer=getProducerCache(exchange).doInProducer(destination,exchange,pattern,new ProducerCallback<Exchange>(){
    public Exchange doInProducer(    Producer producer,    Exchange exchange,    ExchangePattern pattern) throws Exception {
      exchange=configureExchange(exchange,pattern);
      if (producer instanceof AsyncProcessor) {
        AsyncProcessor asyncProcessor=(AsyncProcessor)producer;
        final AsyncCallback callback=new AsyncCallback(){
          public void onDataReceived(          Exchange exchange){
            completedTasks.add(exchange);
          }
        }
;
        asyncProcessor.process(exchange,callback);
      }
 else {
        producer.process(exchange);
        completedTasks.add(exchange);
      }
      return exchange;
    }
  }
);
  return answer;
}
