{
  ObjectHelper.notNull(endpoint,"endpoint");
  File file=new File(fileName);
  try {
    File source=null;
    if (exchange.getIn().getBody() instanceof File || exchange.getIn().getBody() instanceof GenericFile) {
      source=exchange.getIn().getBody(File.class);
    }
    if (source != null) {
      File local=exchange.getIn().getHeader(Exchange.FILE_LOCAL_WORK_PATH,File.class);
      if (local != null && local.exists()) {
        boolean renamed=writeFileByLocalWorkPath(local,file);
        if (renamed) {
          exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,null);
          return true;
        }
      }
 else       if (source.exists()) {
        writeFileByFile(source,file);
        return true;
      }
    }
    InputStream in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class);
    writeFileByStream(in,file);
    return true;
  }
 catch (  IOException e) {
    throw new GenericFileOperationFailedException("Cannot store file: " + file,e);
  }
catch (  InvalidPayloadException e) {
    throw new GenericFileOperationFailedException("Cannot store file: " + file,e);
  }
}
