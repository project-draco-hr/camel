{
  ChannelPipeline pipeline=ch.pipeline();
  SslHandler sslHandler=configureServerSSLOnDemand();
  if (sslHandler != null) {
    LOG.debug("Server SSL handler configured and added as an interceptor against the ChannelPipeline: {}",sslHandler);
    pipeline.addLast("ssl",sslHandler);
  }
  pipeline.addLast("decoder",new HttpRequestDecoder());
  List<ChannelHandler> decoders=consumer.getConfiguration().getDecoders();
  for (int x=0; x < decoders.size(); x++) {
    ChannelHandler decoder=decoders.get(x);
    if (decoder instanceof ChannelHandlerFactory) {
      decoder=((ChannelHandlerFactory)decoder).newChannelHandler();
    }
    pipeline.addLast("decoder-" + x,decoder);
  }
  pipeline.addLast("aggregator",new HttpObjectAggregator(configuration.getChunkedMaxContentLength()));
  pipeline.addLast("encoder",new HttpResponseEncoder());
  List<ChannelHandler> encoders=consumer.getConfiguration().getEncoders();
  for (int x=0; x < encoders.size(); x++) {
    ChannelHandler encoder=encoders.get(x);
    if (encoder instanceof ChannelHandlerFactory) {
      encoder=((ChannelHandlerFactory)encoder).newChannelHandler();
    }
    pipeline.addLast("encoder-" + x,encoder);
  }
  if (supportCompressed()) {
    pipeline.addLast("deflater",new HttpContentCompressor());
  }
  int port=consumer.getConfiguration().getPort();
  ChannelHandler handler=consumer.getEndpoint().getComponent().getMultiplexChannelHandler(port).getChannelHandler();
  if (consumer.getConfiguration().isUsingExecutorService()) {
    EventExecutorGroup applicationExecutor=consumer.getEndpoint().getComponent().getExecutorService();
    pipeline.addLast(applicationExecutor,"handler",handler);
  }
 else {
    pipeline.addLast("handler",handler);
  }
}
