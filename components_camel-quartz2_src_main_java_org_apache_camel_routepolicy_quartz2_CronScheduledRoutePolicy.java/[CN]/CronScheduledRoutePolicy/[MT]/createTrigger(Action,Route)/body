{
  Trigger trigger=null;
  CronScheduleBuilder scheduleBuilder=null;
  String triggerPrefix=null;
  if (action == Action.START) {
    scheduleBuilder=CronScheduleBuilder.cronSchedule(getRouteStartTime());
    triggerPrefix=TRIGGER_START;
  }
 else   if (action == Action.STOP) {
    scheduleBuilder=CronScheduleBuilder.cronSchedule(getRouteStopTime());
    triggerPrefix=TRIGGER_STOP;
  }
 else   if (action == Action.SUSPEND) {
    scheduleBuilder=CronScheduleBuilder.cronSchedule(getRouteSuspendTime());
    triggerPrefix=TRIGGER_SUSPEND;
  }
 else   if (action == Action.RESUME) {
    scheduleBuilder=CronScheduleBuilder.cronSchedule(getRouteResumeTime());
    triggerPrefix=TRIGGER_RESUME;
  }
  if (scheduleBuilder != null) {
    if (timeZone != null) {
      scheduleBuilder.inTimeZone(timeZone);
    }
    TriggerKey triggerKey=new TriggerKey(triggerPrefix + route.getId(),TRIGGER_GROUP + route.getId());
    trigger=TriggerBuilder.newTrigger().withIdentity(triggerKey).withSchedule(scheduleBuilder).build();
  }
  return trigger;
}
