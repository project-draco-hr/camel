{
  Object[] answer=new Object[expressions.length];
  for (int i=0; i < expressions.length; i++) {
    if (body != null && body instanceof StreamCache) {
      ((StreamCache)body).reset();
    }
    Object parameterValue=it != null && it.hasNext() ? it.next() : null;
    Class<?> parameterType=parameters.get(i).getType();
    Object value=null;
    if (multiParameterArray && body instanceof Object[]) {
      Object[] array=(Object[])body;
      if (array.length >= i) {
        value=array[i];
      }
    }
 else {
      if (parameterValue != null && !parameterValue.equals("*")) {
        value=evaluateParameterValue(exchange,i,parameterValue,parameterType);
      }
      Expression expression=expressions[i];
      if (value == null && expression != null) {
        value=evaluateParameterBinding(exchange,expression,i,parameterType);
      }
    }
    if (value != Void.TYPE) {
      answer[i]=value;
    }
  }
  return answer;
}
