{
  final Object[] arguments=(Object[])parametersExpression.evaluate(messageExchange);
  return new MethodInvocation(){
    public Method getMethod(){
      return method;
    }
    public Object[] getArguments(){
      return arguments;
    }
    public Object proceed() throws Throwable {
      if (LOG.isTraceEnabled()) {
        LOG.trace(">>>> invoking: " + method + " on bean: "+ pojo+ " with arguments: "+ asString(arguments)+ " for exchange: "+ messageExchange);
      }
      return invoke(method,pojo,arguments,messageExchange);
    }
    public Object getThis(){
      return pojo;
    }
    public AccessibleObject getStaticPart(){
      return method;
    }
  }
;
}
