{
  if (ObjectHelper.isNotEmpty(config.getFileConfigurations())) {
    Environment env=applicationContext.getEnvironment();
    if (env instanceof ConfigurableEnvironment) {
      MutablePropertySources sources=((ConfigurableEnvironment)env).getPropertySources();
      if (sources != null) {
        if (!sources.contains("camel-file-configuration")) {
          sources.addFirst(new FilePropertySource("camel-file-configuration",applicationContext,config.getFileConfigurations()));
        }
      }
    }
  }
  CamelContext camelContext=new SpringCamelContext(applicationContext);
  SpringCamelContext.setNoStart(true);
  if (!config.isJmxEnabled()) {
    camelContext.disableJMX();
  }
  if (config.getName() != null) {
    ((SpringCamelContext)camelContext).setName(config.getName());
  }
  if (config.getLogDebugMaxChars() > 0) {
    camelContext.getProperties().put(Exchange.LOG_DEBUG_BODY_MAX_CHARS,"" + config.getLogDebugMaxChars());
  }
  camelContext.setStreamCaching(config.isStreamCaching());
  camelContext.setTracing(config.isTracing());
  camelContext.setMessageHistory(config.isMessageHistory());
  camelContext.setLogExhaustedMessageBody(config.isLogExhaustedMessageBody());
  camelContext.setHandleFault(config.isHandleFault());
  camelContext.setAutoStartup(config.isAutoStartup());
  camelContext.setAllowUseOriginalMessage(config.isAllowUseOriginalMessage());
  if (camelContext.getManagementStrategy().getManagementAgent() != null) {
    camelContext.getManagementStrategy().getManagementAgent().setEndpointRuntimeStatisticsEnabled(config.isEndpointRuntimeStatisticsEnabled());
    camelContext.getManagementStrategy().getManagementAgent().setStatisticsLevel(config.getJmxManagementStatisticsLevel());
    camelContext.getManagementStrategy().getManagementAgent().setManagementNamePattern(config.getJmxManagementNamePattern());
    camelContext.getManagementStrategy().getManagementAgent().setCreateConnector(config.isJmxCreateConnector());
  }
  camelContext.setPackageScanClassResolver(new FatJarPackageScanClassResolver());
  return camelContext;
}
