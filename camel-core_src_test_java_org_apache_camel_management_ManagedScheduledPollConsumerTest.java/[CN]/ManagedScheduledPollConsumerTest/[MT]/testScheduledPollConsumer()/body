{
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=consumers,*"),null);
  assertEquals(1,set.size());
  ObjectName on=set.iterator().next();
  assertTrue("Should be registered",mbeanServer.isRegistered(on));
  String uri=(String)mbeanServer.getAttribute(on,"EndpointUri");
  assertEquals("file://target/foo?delay=4000",uri);
  Long delay=(Long)mbeanServer.getAttribute(on,"Delay");
  assertEquals(4000,delay.longValue());
  Long initialDelay=(Long)mbeanServer.getAttribute(on,"InitialDelay");
  assertEquals(1000,initialDelay.longValue());
  Boolean fixedDelay=(Boolean)mbeanServer.getAttribute(on,"UseFixedDelay");
  assertEquals(Boolean.FALSE,fixedDelay);
  String timeUnit=(String)mbeanServer.getAttribute(on,"TimeUnit");
  assertEquals(TimeUnit.MILLISECONDS.toString(),timeUnit);
  String routeId=(String)mbeanServer.getAttribute(on,"RouteId");
  assertEquals("route1",routeId);
  mbeanServer.invoke(on,"stop",null,null);
  mbeanServer.setAttribute(on,new Attribute("Delay",2000));
  mbeanServer.invoke(on,"start",null,null);
  delay=(Long)mbeanServer.getAttribute(on,"Delay");
  assertEquals(2000,delay.longValue());
  mbeanServer.setAttribute(on,new Attribute("UseFixedDelay",Boolean.TRUE));
  fixedDelay=(Boolean)mbeanServer.getAttribute(on,"UseFixedDelay");
  assertEquals(Boolean.TRUE,fixedDelay);
  mbeanServer.setAttribute(on,new Attribute("TimeUnit",TimeUnit.SECONDS.name()));
  timeUnit=(String)mbeanServer.getAttribute(on,"TimeUnit");
  assertEquals(TimeUnit.SECONDS.toString(),timeUnit);
  mbeanServer.setAttribute(on,new Attribute("InitialDelay",Long.valueOf("2000")));
  initialDelay=(Long)mbeanServer.getAttribute(on,"InitialDelay");
  assertEquals(2000,initialDelay.longValue());
  context.stop();
  assertFalse("Should no longer be registered",mbeanServer.isRegistered(on));
}
