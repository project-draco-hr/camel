{
  if (isConnected()) {
    return true;
  }
  boolean connected=false;
  int attempt=0;
  while (!connected) {
    try {
      if (LOG.isTraceEnabled() && attempt > 0) {
        LOG.trace("Reconnect attempt #{} connecting to + {}",attempt,configuration.remoteServerInformation());
      }
      if (channel == null || !channel.isConnected()) {
        if (session == null || !session.isConnected()) {
          LOG.trace("Session isn't connected, trying to recreate and connect.");
          session=createSession(configuration);
          if (endpoint.getConfiguration().getConnectTimeout() > 0) {
            LOG.trace("Connecting use connectTimeout: " + endpoint.getConfiguration().getConnectTimeout() + " ...");
            session.connect(endpoint.getConfiguration().getConnectTimeout());
          }
 else {
            LOG.trace("Connecting ...");
            session.connect();
          }
        }
        LOG.trace("Channel isn't connected, trying to recreate and connect.");
        channel=(ChannelSftp)session.openChannel("sftp");
        if (endpoint.getConfiguration().getConnectTimeout() > 0) {
          LOG.trace("Connecting use connectTimeout: " + endpoint.getConfiguration().getConnectTimeout() + " ...");
          channel.connect(endpoint.getConfiguration().getConnectTimeout());
        }
 else {
          LOG.trace("Connecting ...");
          channel.connect();
        }
        LOG.info("Connected to " + configuration.remoteServerInformation());
      }
      connected=true;
    }
 catch (    Exception e) {
      if (Thread.currentThread().isInterrupted()) {
        throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));
      }
      GenericFileOperationFailedException failed=new GenericFileOperationFailedException("Cannot connect to " + configuration.remoteServerInformation(),e);
      LOG.trace("Cannot connect due: {}",failed.getMessage());
      attempt++;
      if (attempt > endpoint.getMaximumReconnectAttempts()) {
        throw failed;
      }
      if (endpoint.getReconnectDelay() > 0) {
        try {
          Thread.sleep(endpoint.getReconnectDelay());
        }
 catch (        InterruptedException ie) {
          Thread.currentThread().interrupt();
          throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);
        }
      }
    }
  }
  return true;
}
