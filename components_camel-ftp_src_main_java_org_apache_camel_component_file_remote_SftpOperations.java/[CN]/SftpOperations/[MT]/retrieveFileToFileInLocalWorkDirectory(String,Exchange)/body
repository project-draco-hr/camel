{
  File temp;
  File local=new File(endpoint.getLocalWorkDirectory());
  OutputStream os;
  GenericFile<ChannelSftp.LsEntry> file=(GenericFile<ChannelSftp.LsEntry>)exchange.getProperty(FileComponent.FILE_EXCHANGE_FILE);
  ObjectHelper.notNull(file,"Exchange should have the " + FileComponent.FILE_EXCHANGE_FILE + " set");
  try {
    String relativeName=file.getRelativeFilePath();
    temp=new File(local,relativeName + ".inprogress");
    local=new File(local,relativeName);
    local.mkdirs();
    if (temp.exists()) {
      if (!FileUtil.deleteFile(temp)) {
        throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + temp);
      }
    }
    if (local.exists()) {
      if (!FileUtil.deleteFile(local)) {
        throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + local);
      }
    }
    if (!temp.createNewFile()) {
      throw new GenericFileOperationFailedException("Cannot create new local work file: " + temp);
    }
    os=new FileOutputStream(temp);
    exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,local.getPath());
  }
 catch (  Exception e) {
    throw new GenericFileOperationFailedException("Cannot create new local work file: " + local);
  }
  String currentDir=null;
  try {
    file.setBody(local);
    String remoteName=name;
    if (endpoint.getConfiguration().isStepwise()) {
      currentDir=getCurrentDirectory();
      String path=FileUtil.onlyPath(name);
      if (path != null) {
        changeCurrentDirectory(path);
      }
      remoteName=FileUtil.stripPath(name);
    }
    channel.get(remoteName,os);
  }
 catch (  SftpException e) {
    LOG.trace("Error occurred during retrieving file: {} to local directory. Deleting local work file: {}",name,temp);
    IOHelper.close(os,"retrieve: " + name,LOG);
    boolean deleted=FileUtil.deleteFile(temp);
    if (!deleted) {
      LOG.warn("Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp);
    }
    throw new GenericFileOperationFailedException("Cannot retrieve file: " + name,e);
  }
 finally {
    IOHelper.close(os,"retrieve: " + name,LOG);
    if (currentDir != null) {
      changeCurrentDirectory(currentDir);
    }
  }
  LOG.debug("Retrieve file to local work file result: true");
  LOG.trace("Renaming local in progress file from: {} to: {}",temp,local);
  try {
    if (!FileUtil.renameFile(temp,local,false)) {
      throw new GenericFileOperationFailedException("Cannot rename local work file from: " + temp + " to: "+ local);
    }
  }
 catch (  IOException e) {
    throw new GenericFileOperationFailedException("Cannot rename local work file from: " + temp + " to: "+ local,e);
  }
  return true;
}
