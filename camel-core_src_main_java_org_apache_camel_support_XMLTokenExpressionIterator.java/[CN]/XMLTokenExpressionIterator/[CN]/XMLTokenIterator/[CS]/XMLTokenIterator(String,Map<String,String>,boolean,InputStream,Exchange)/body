{
  final String[] sl=path.substring(1).split("/");
  this.splitpath=new AttributedQName[sl.length];
  for (int i=0; i < sl.length; i++) {
    String s=sl[i];
    if (s.length() > 0) {
      int d=s.indexOf(':');
      String pfx=d > 0 ? s.substring(0,d) : "";
      this.splitpath[i]=new AttributedQName("*".equals(pfx) ? "*" : nsmap.get(pfx),d > 0 ? s.substring(d + 1) : s,pfx);
    }
  }
  this.wrap=wrap;
  String charset=IOHelper.getCharsetName(exchange,false);
  this.in=new RecordableInputStream(in,charset);
  this.reader=new StaxConverter().createXMLStreamReader(this.in,exchange);
  LOG.trace("reader.class: {}",reader.getClass());
  int coff=reader.getLocation().getCharacterOffset();
  if (coff != 0) {
    LOG.error("XMLStreamReader {} not supporting Location");
    throw new XMLStreamException("reader not supporting Location");
  }
  this.path=new ArrayList<QName>();
  if (wrap) {
    this.segments=new ArrayList<String>();
    this.segmentlog=new ArrayList<QName>();
  }
 else {
    this.namespaces=new ArrayList<Map<String,String>>();
  }
  this.nextToken=getNextToken();
}
