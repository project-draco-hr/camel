{
  for (int counter=0; counter <= 5; counter++) {
    Message message=new Message();
    message.setBody("{\"body\": \"Message " + counter + "\"}");
    message.setId("" + counter);
    ((MockQueue)endpoint.getClient().queue("testqueue")).add(message);
  }
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(5);
  assertMockEndpointsSatisfied();
  mock.message(0).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(0);
  mock.message(1).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(1);
  mock.message(2).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(2);
  mock.message(3).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(3);
  mock.message(4).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(4);
  mock.message(0).exchangeProperty(Exchange.BATCH_COMPLETE).isEqualTo(false);
  mock.message(1).exchangeProperty(Exchange.BATCH_COMPLETE).isEqualTo(false);
  mock.message(2).exchangeProperty(Exchange.BATCH_COMPLETE).isEqualTo(false);
  mock.message(3).exchangeProperty(Exchange.BATCH_COMPLETE).isEqualTo(false);
  mock.message(3).exchangeProperty(Exchange.BATCH_COMPLETE).isEqualTo(false);
  mock.message(4).exchangeProperty(Exchange.BATCH_COMPLETE).isEqualTo(true);
  mock.expectedPropertyReceived(Exchange.BATCH_SIZE,5);
}
