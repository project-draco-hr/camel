{
  HttpContext context=conn.getContext();
  ProtocolVersion ver=request.getRequestLine().getProtocolVersion();
  if (!ver.lessEquals(HttpVersion.HTTP_1_1)) {
    ver=HttpVersion.HTTP_1_1;
  }
  context.setAttribute(ExecutionContext.HTTP_REQUEST,request);
  context.setAttribute(ExecutionContext.HTTP_CONNECTION,conn);
  try {
    this.httpProcessor.process(request,context);
    HttpRequestHandler handler=null;
    if (handlerResolver != null) {
      String requestURI=request.getRequestLine().getUri();
      handler=handlerResolver.lookup(requestURI);
    }
    if (handler != null) {
      if (handler instanceof AsyncHttpRequestHandler) {
        ((AsyncHttpRequestHandler)handler).handle(request,context,new AsyncResponseHandler(){
          public void sendResponse(          HttpResponse response) throws IOException, HttpException {
            try {
              AsyncBufferingHttpServiceHandler.this.sendResponse(conn,response);
            }
 catch (            HttpException ex) {
              response=AsyncBufferingHttpServiceHandler.this.responseFactory.newHttpResponse(HttpVersion.HTTP_1_0,HttpStatus.SC_INTERNAL_SERVER_ERROR,conn.getContext());
              response.setParams(AsyncBufferingHttpServiceHandler.this.params);
              AsyncBufferingHttpServiceHandler.this.handleException(ex,response);
              AsyncBufferingHttpServiceHandler.this.sendResponse(conn,response);
            }
          }
        }
);
      }
 else {
        HttpResponse response=this.responseFactory.newHttpResponse(ver,HttpStatus.SC_OK,conn.getContext());
        response.setParams(this.params);
        context.setAttribute(ExecutionContext.HTTP_RESPONSE,response);
        handler.handle(request,response,context);
        sendResponse(conn,response);
      }
    }
 else {
      HttpResponse response=this.responseFactory.newHttpResponse(ver,HttpStatus.SC_OK,conn.getContext());
      response.setStatusCode(HttpStatus.SC_NOT_IMPLEMENTED);
    }
  }
 catch (  HttpException ex) {
    HttpResponse response=this.responseFactory.newHttpResponse(HttpVersion.HTTP_1_0,HttpStatus.SC_INTERNAL_SERVER_ERROR,context);
    response.setParams(this.params);
    handleException(ex,response);
    sendResponse(conn,response);
  }
}
