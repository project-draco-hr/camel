{
  HapiContext hapiContext=new DefaultHapiContext();
  hapiContext.setValidationContext(new NoValidation());
  Parser p=new GenericParser(hapiContext);
  hl7=new HL7DataFormat();
  hl7.setParser(p);
  ValidationRuleBuilder builder=new ValidationRuleBuilder(){
    private static final long serialVersionUID=1L;
    @Override protected void configure(){
      forVersion(Version.V24).message("ADT","*").terser("PID-2",not(empty()));
    }
  }
;
  ValidationContext customValidationContext=ValidationContextFactory.fromBuilder(builder);
  HapiContext customContext=new DefaultHapiContext(customValidationContext);
  final Parser customParser=new GenericParser(customContext);
  return new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:unmarshalFailed").unmarshal().hl7().to("mock:unmarshal");
      from("direct:unmarshalOk").unmarshal().hl7(false).to("mock:unmarshal");
      from("direct:unmarshalOkCustom").unmarshal(hl7).to("mock:unmarshal");
      from("direct:start1").marshal().hl7(customParser).to("mock:end");
      from("direct:start2").marshal().hl7(true).to("mock:end");
    }
  }
;
}
