{
  PGPPublicKey key=PGPDataFormatUtil.findPublicKey(exchange.getContext(),this.keyFileName,this.keyUserid);
  if (key == null) {
    throw new IllegalArgumentException("Public key is null, cannot proceed");
  }
  byte[] plaintextData;
  InputStream plaintextStream=null;
  try {
    plaintextStream=ExchangeHelper.convertToMandatoryType(exchange,InputStream.class,graph);
    plaintextData=IOUtils.toByteArray(plaintextStream);
  }
  finally {
    IOUtils.closeQuietly(plaintextStream);
  }
  byte[] compressedData=PGPDataFormatUtil.compress(plaintextData,PGPLiteralData.CONSOLE,CompressionAlgorithmTags.ZIP);
  if (armored) {
    outputStream=new ArmoredOutputStream(outputStream);
  }
  PGPEncryptedDataGenerator encGen=new PGPEncryptedDataGenerator(PGPEncryptedData.CAST5,integrity,new SecureRandom(),"BC");
  encGen.addMethod(key);
  OutputStream encOut=encGen.open(outputStream,compressedData.length);
  try {
    encOut.write(compressedData);
  }
  finally {
    IOHelper.close(encOut,outputStream);
  }
}
