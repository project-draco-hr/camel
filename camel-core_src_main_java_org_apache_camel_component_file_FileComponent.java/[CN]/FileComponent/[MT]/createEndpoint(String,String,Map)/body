{
  File file=new File(remaining);
  FileEndpoint result=new FileEndpoint(file,uri,this);
  String ref=getAndRemoveParameter(parameters,"idempotentRepositoryRef",String.class);
  if (ref != null) {
    MessageIdRepository repository=mandatoryLookup(ref,MessageIdRepository.class);
    result.setIdempotentRepository(repository);
  }
  ref=getAndRemoveParameter(parameters,"fileFilterRef",String.class);
  if (ref != null) {
    FileFilter filter=mandatoryLookup(ref,FileFilter.class);
    result.setFilter(filter);
  }
  ref=getAndRemoveParameter(parameters,"sorterRef",String.class);
  if (ref != null) {
    Comparator<File> sorter=mandatoryLookup(ref,Comparator.class);
    result.setFileSorter(sorter);
  }
  String sortBy=getAndRemoveParameter(parameters,"sortBy",String.class);
  if (sortBy != null) {
    String[] groups=sortBy.split(";");
    Iterator<String> it=ObjectHelper.createIterator(groups);
    Comparator<FileExchange> comparator=createSortByComparator(it);
    result.setExchangeSorter(comparator);
  }
  setProperties(result,parameters);
  return result;
}
