{
  if (isJava16() && isJavaVendor("ibm")) {
    return;
  }
  DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
  dbf.setNamespaceAware(true);
  DocumentBuilder db=dbf.newDocumentBuilder();
  Document doc=db.parse(getClass().getClassLoader().getResourceAsStream("test-rest.xml"));
  Element elem=null;
  NodeList nl=doc.getDocumentElement().getChildNodes();
  for (int i=0; i < nl.getLength(); i++) {
    Node node=nl.item(i);
    if (node instanceof Element) {
      elem=(Element)node;
      break;
    }
  }
  CamelNamespaceHandler.renameNamespaceRecursive(elem,CamelNamespaceHandler.BLUEPRINT_NS,CamelNamespaceHandler.SPRING_NS);
  JAXBContext context=JAXBContext.newInstance("org.apache.camel.blueprint:" + "org.apache.camel:org.apache.camel.model:" + "org.apache.camel.model.config:"+ "org.apache.camel.model.dataformat:"+ "org.apache.camel.model.language:"+ "org.apache.camel.model.loadbalancer:"+ "org.apache.camel.model.rest");
  Unmarshaller unmarshaller=context.createUnmarshaller();
  Object object=unmarshaller.unmarshal(elem);
  assertNotNull(object);
  assertTrue(object instanceof CamelContextFactoryBean);
  assertNotNull(((CamelContextFactoryBean)object).getRoutes());
  assertEquals(0,((CamelContextFactoryBean)object).getRoutes().size());
  CamelContextFactoryBean cfb=(CamelContextFactoryBean)object;
  assertEquals(2,cfb.getRests().size());
  assertEquals("/say/hello",cfb.getRests().get(0).getUri());
  assertEquals("/say/bye",cfb.getRests().get(1).getUri());
  assertEquals(1,cfb.getRests().get(0).getVerbs().size());
  assertEquals(2,cfb.getRests().get(1).getVerbs().size());
  assertEquals("get",cfb.getRests().get(0).getVerbs().get(0).asVerb());
  assertEquals("get",cfb.getRests().get(1).getVerbs().get(0).asVerb());
  assertEquals("post",cfb.getRests().get(1).getVerbs().get(1).asVerb());
  assertEquals("dummy-rest",cfb.getRestConfiguration().getComponent());
  assertEquals("localhost",cfb.getRestConfiguration().getHost());
  assertEquals("9090",cfb.getRestConfiguration().getPort());
}
