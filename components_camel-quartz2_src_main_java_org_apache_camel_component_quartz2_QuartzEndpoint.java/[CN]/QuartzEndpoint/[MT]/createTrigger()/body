{
  Trigger result;
  Date startTime=new Date();
  if (getComponent().getScheduler().isStarted()) {
    startTime=new Date(System.currentTimeMillis() + triggerStartDelay);
  }
  if (cron != null) {
    LOG.debug("Creating CronTrigger: {}",cron);
    result=TriggerBuilder.newTrigger().withIdentity(triggerKey).startAt(startTime).withSchedule(cronSchedule(cron).withMisfireHandlingInstructionFireAndProceed()).build();
  }
 else {
    LOG.debug("Creating SimpleTrigger.");
    int repeat=SimpleTrigger.REPEAT_INDEFINITELY;
    String repeatString=(String)triggerParameters.get("repeatCount");
    if (repeatString != null) {
      repeat=Integer.valueOf(repeatString);
    }
    long interval=1000;
    String intervalString=(String)triggerParameters.get("repeatInterval");
    if (intervalString != null) {
      interval=Long.valueOf(intervalString);
    }
    TriggerBuilder<SimpleTrigger> triggerBuilder=TriggerBuilder.newTrigger().withIdentity(triggerKey).startAt(startTime).withSchedule(simpleSchedule().withMisfireHandlingInstructionFireNow().withRepeatCount(repeat).withIntervalInMilliseconds(interval));
    if (fireNow) {
      triggerBuilder.startNow();
    }
    result=triggerBuilder.build();
  }
  if (triggerParameters != null && triggerParameters.size() > 0) {
    LOG.debug("Setting user extra triggerParameters {}",triggerParameters);
    setProperties(result,triggerParameters);
  }
  LOG.debug("Created trigger={}",result);
  return result;
}
