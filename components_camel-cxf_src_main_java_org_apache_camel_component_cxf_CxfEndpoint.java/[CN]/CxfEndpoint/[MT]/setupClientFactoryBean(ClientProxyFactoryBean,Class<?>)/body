{
  factoryBean.setServiceClass(cls);
  factoryBean.setInInterceptors(in);
  factoryBean.setOutInterceptors(out);
  factoryBean.setOutFaultInterceptors(outFault);
  factoryBean.setInFaultInterceptors(inFault);
  factoryBean.setFeatures(features);
  if (factoryBean instanceof JaxWsProxyFactoryBean && handlers != null) {
    ((JaxWsProxyFactoryBean)factoryBean).setHandlers(handlers);
  }
  if (transportId != null) {
    factoryBean.setTransportId(transportId);
  }
  if (bindingId != null) {
    factoryBean.setBindingId(bindingId);
  }
  factoryBean.setAddress(getAddress());
  if (getWsdlURL() != null) {
    factoryBean.setWsdlURL(getWsdlURL());
  }
  if (getServiceName() != null) {
    factoryBean.setServiceName(getServiceName());
  }
  if (getPortName() != null) {
    factoryBean.setEndpointName(getPortName());
  }
  if (getDataFormat() == DataFormat.MESSAGE) {
    factoryBean.getFeatures().add(new MessageDataFormatFeature());
  }
 else   if (getDataFormat() == DataFormat.PAYLOAD) {
    factoryBean.getFeatures().add(new PayLoadDataFormatFeature());
    factoryBean.setDataBinding(new HybridSourceDataBinding());
  }
  if (loggingFeatureEnabled) {
    factoryBean.getFeatures().add(new LoggingFeature());
  }
  if (getWrappedStyle() != null) {
    factoryBean.getServiceFactory().setWrapped(getWrappedStyle());
  }
  if (getProperties() != null) {
    if (factoryBean.getProperties() != null) {
      factoryBean.getProperties().putAll(getProperties());
    }
 else {
      factoryBean.setProperties(getProperties());
    }
    LOG.debug("ClientProxyFactoryBean: {} added properties: {}",factoryBean,properties);
  }
  factoryBean.setBus(getBus());
}
