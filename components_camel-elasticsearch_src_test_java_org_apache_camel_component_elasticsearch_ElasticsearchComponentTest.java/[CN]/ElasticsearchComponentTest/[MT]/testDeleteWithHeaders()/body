{
  HashMap<String,String> map=new HashMap<String,String>();
  map.put("content","test");
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_INDEX);
  headers.put(ElasticsearchConfiguration.PARAM_INDEX_NAME,"twitter");
  headers.put(ElasticsearchConfiguration.PARAM_INDEX_TYPE,"tweet");
  String indexId=(String)template.requestBodyAndHeaders("direct:start",map,headers);
  headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_GET_BY_ID);
  GetResponse response=(GetResponse)template.requestBodyAndHeaders("direct:start",indexId,headers);
  assertNotNull("response should not be null",response);
  assertNotNull("response source should not be null",response.getSource());
  headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_DELETE);
  DeleteResponse deleteResponse=(DeleteResponse)template.requestBodyAndHeaders("direct:start",indexId,headers);
  assertNotNull("response should not be null",deleteResponse);
  headers.put(ElasticsearchConfiguration.PARAM_OPERATION,ElasticsearchConfiguration.OPERATION_GET_BY_ID);
  response=(GetResponse)template.requestBodyAndHeaders("direct:start",indexId,headers);
  assertNotNull("response should not be null",response);
  assertNull("response source should be null",response.getSource());
}
