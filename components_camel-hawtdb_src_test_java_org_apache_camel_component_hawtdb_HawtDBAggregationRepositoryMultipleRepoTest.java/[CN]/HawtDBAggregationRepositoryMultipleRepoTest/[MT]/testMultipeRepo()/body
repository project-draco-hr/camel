{
  HawtDBAggregationRepository<String> repo1=new HawtDBAggregationRepository<String>();
  repo1.setHawtDBFile(hawtDBFile);
  repo1.setRepositoryName("repo1");
  HawtDBAggregationRepository<String> repo2=new HawtDBAggregationRepository<String>();
  repo2.setHawtDBFile(hawtDBFile);
  repo2.setRepositoryName("repo2");
  Exchange actual=repo1.get(context,"missing");
  assertEquals(null,actual);
  actual=repo2.get(context,"missing");
  assertEquals(null,actual);
  Exchange exchange1=new DefaultExchange(context);
  exchange1.getIn().setBody("counter:1");
  actual=repo1.add(context,"foo",exchange1);
  assertEquals(null,actual);
  actual=repo1.get(context,"foo");
  assertEquals("counter:1",actual.getIn().getBody());
  assertEquals(null,repo2.get(context,"foo"));
  Exchange exchange2=new DefaultExchange(context);
  exchange2.getIn().setBody("counter:2");
  actual=repo1.add(context,"foo",exchange2);
  assertEquals("counter:1",actual.getIn().getBody());
  Exchange exchange3=new DefaultExchange(context);
  exchange3.getIn().setBody("Hello World");
  actual=repo2.add(context,"bar",exchange3);
  assertEquals(null,actual);
  assertEquals(null,repo1.get(context,"bar"));
  actual=repo1.get(context,"foo");
  assertEquals("counter:2",actual.getIn().getBody());
  assertEquals(null,repo2.get(context,"foo"));
  actual=repo2.get(context,"bar");
  assertEquals("Hello World",actual.getIn().getBody());
  assertEquals(null,repo1.get(context,"bar"));
}
