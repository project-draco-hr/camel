{
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedBodiesReceived("Bye World","Foo World","Foo World");
  MockEndpoint mock=getMockEndpoint("mock:traced");
  mock.expectedMessageCount(8);
  mock.message(0).body().regex("^direct://start;.*;.*;Hello London");
  mock.message(1).body().regex("^direct://start;.*;.*;Hello World");
  mock.message(2).body().regex("^direct://start;.*;.*;Goodday World");
  mock.message(3).body().regex("^direct://start;.*;.*;Bye World");
  mock.message(4).body().regex("^direct://foo;.*;.*;Hello Copenhagen");
  mock.message(5).body().regex("^direct://foo;.*;.*;Foo World");
  mock.message(6).body().regex("^direct://foo;.*;.*;Hello Beijing");
  mock.message(7).body().regex("^direct://foo;.*;.*;Foo World");
  template.sendBodyAndHeader("direct:start","Hello London","to","James");
  template.sendBody("direct:foo","Hello Copenhagen");
  template.sendBody("direct:foo","Hello Beijing");
  assertMockEndpointsSatisfied();
  assertEquals("Hello London",tracedBodies.get(0));
  assertEquals("Hello World",tracedBodies.get(1));
  assertEquals("Goodday World",tracedBodies.get(2));
  assertEquals("Bye World",tracedBodies.get(3));
  assertEquals("Hello Copenhagen",tracedBodies.get(4));
  assertEquals("Foo World",tracedBodies.get(5));
  assertEquals("Hello Beijing",tracedBodies.get(6));
  assertEquals("Foo World",tracedBodies.get(7));
  assertEquals("{to=James}",tracedHeaders.get(0));
  assertEquals("{to=Hello}",tracedHeaders.get(1));
  assertEquals("{to=Goodday}",tracedHeaders.get(2));
  assertEquals("{to=Bye}",tracedHeaders.get(3));
  assertEquals("{to=Foo}",tracedHeaders.get(4));
  assertEquals("{to=Foo}",tracedHeaders.get(5));
}
