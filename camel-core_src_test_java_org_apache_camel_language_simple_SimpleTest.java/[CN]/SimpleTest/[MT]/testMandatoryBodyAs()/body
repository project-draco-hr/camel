{
  assertExpression("${mandatoryBodyAs(String)}","<hello id='m123'>world!</hello>");
  assertExpression("${mandatoryBodyAs('String')}","<hello id='m123'>world!</hello>");
  exchange.getIn().setBody(null);
  try {
    assertExpression("${mandatoryBodyAs('String')}","");
    fail("Should have thrown exception");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(InvalidPayloadException.class,e.getCause());
  }
  exchange.getIn().setBody(456);
  assertExpression("${mandatoryBodyAs(Integer)}",456);
  assertExpression("${mandatoryBodyAs(int)}",456);
  assertExpression("${mandatoryBodyAs('int')}",456);
  try {
    assertExpression("${mandatoryBodyAs(XXX)}",456);
    fail("Should have thrown an exception");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(ClassNotFoundException.class,e.getCause());
  }
  try {
    assertExpression("${mandatoryBodyAs(String).test}","hello.test");
    fail("should have thrown an exception");
  }
 catch (  SimpleIllegalSyntaxException e) {
    assertTrue("Get a wrong message",e.getMessage().indexOf("mandatoryBodyAs(String).test") > 0);
  }
}
