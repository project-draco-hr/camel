{
synchronized (locker) {
    locker.incrementAndGet();
  }
  try {
    for (int i=0; i < LOOP_COUNT; i++) {
      Endpoint endpoint=endpoints[Math.abs(rand.nextInt() % endpoints.length)];
      endpoint.setCamelContext(context);
      Exchange exchange=new DefaultExchange(endpoint);
      repo.add(exchange);
      int size=repo.size(endpoint);
      if (size <= 0) {
        failed=true;
      }
      repo.remove(exchange);
    }
  }
 catch (  Throwable t) {
    failed=true;
  }
synchronized (locker) {
    locker.decrementAndGet();
    locker.notifyAll();
  }
}
