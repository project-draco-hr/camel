{
  Class<?> outputClass=getEndpoint().getCamelContext().getClassResolver().resolveClass(getEndpoint().getOutputClass());
  Object answer=getEndpoint().getCamelContext().getInjector().newInstance(outputClass);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  for (  Map.Entry<String,Object> entry : row.entrySet()) {
    Object value=entry.getValue();
    String name=getEndpoint().getBeanRowMapper().map(entry.getKey(),value);
    properties.put(name,value);
  }
  try {
    IntrospectionSupport.setProperties(answer,properties);
  }
 catch (  Exception e) {
    throw new SQLException("Error setting properties on output class " + outputClass,e);
  }
  if (!properties.isEmpty()) {
    throw new IllegalArgumentException("Cannot map all properties to bean of type " + outputClass + ". There are "+ properties.size()+ " unmapped properties. "+ properties);
  }
  return answer;
}
