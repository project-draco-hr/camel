{
  Object response=extractResponseBody(method,exchange,getEndpoint().isIgnoreResponseBody());
  Message answer=exchange.getOut();
  answer.setHeader(Exchange.HTTP_RESPONSE_CODE,responseCode);
  answer.setHeader(Exchange.HTTP_RESPONSE_TEXT,method.getStatusText());
  answer.setBody(response);
  Header[] headers=method.getResponseHeaders();
  Map<String,List<String>> m=new HashMap<String,List<String>>();
  for (  Header header : headers) {
    String name=header.getName();
    String value=header.getValue();
    m.put(name,Collections.singletonList(value));
    if (name.toLowerCase().equals("content-type")) {
      name=Exchange.CONTENT_TYPE;
      exchange.setProperty(Exchange.CHARSET_NAME,IOHelper.getCharsetNameFromContentType(value));
    }
    Object extracted=HttpHelper.extractHttpParameterValue(value);
    if (strategy != null && !strategy.applyFilterToExternalHeaders(name,extracted,exchange)) {
      HttpHelper.appendHeader(answer.getHeaders(),name,extracted);
    }
  }
  if (getEndpoint().getCookieHandler() != null) {
    getEndpoint().getCookieHandler().storeCookies(exchange,new URI(method.getURI().getEscapedURI()),m);
  }
  if (getEndpoint().isCopyHeaders()) {
    MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);
  }
}
