{
  String url=HttpHelper.createURL(exchange,getEndpoint());
  URI uri=new URI(url);
  RequestEntity requestEntity=createRequestEntity(exchange);
  HttpMethods methodToUse=HttpHelper.createMethod(exchange,getEndpoint(),requestEntity != null);
  HttpMethod method=methodToUse.createMethod(url);
  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);
  if (queryString == null) {
    queryString=getEndpoint().getHttpUri().getRawQuery();
  }
  if (queryString == null) {
    queryString=uri.getQuery();
  }
  if (queryString != null) {
    method.setQueryString(queryString);
  }
  if (methodToUse.isEntityEnclosing()) {
    ((EntityEnclosingMethod)method).setRequestEntity(requestEntity);
    if (requestEntity != null && requestEntity.getContentType() == null) {
      LOG.debug("No Content-Type provided for URL: {} with exchange: {}",url,exchange);
    }
  }
  if (method.getHostConfiguration().getHost() == null) {
    throw new IllegalArgumentException("Invalid uri: " + url + ". If you are forwarding/bridging http endpoints, then enable the bridgeEndpoint option on the endpoint: "+ getEndpoint());
  }
  return method;
}
