{
  int processed=0;
  boolean consumerTimeout;
  MessageAndMetadata<byte[],byte[]> mm;
  ConsumerIterator<byte[],byte[]> it=stream.iterator();
  boolean hasNext=true;
  while (hasNext) {
    try {
      consumerTimeout=false;
      if (isRunAllowed() && !isSuspendingOrSuspended() && it.hasNext()) {
        mm=it.next();
        Exchange exchange=endpoint.createKafkaExchange(mm);
        try {
          processor.process(exchange);
        }
 catch (        Exception e) {
          LOG.error(e.getMessage(),e);
        }
        processed++;
      }
 else {
        hasNext=false;
      }
    }
 catch (    ConsumerTimeoutException e) {
      LOG.debug("Consumer timeout occurred due " + e.getMessage(),e);
      consumerTimeout=true;
    }
    if (processed >= endpoint.getBatchSize() || consumerTimeout || (processed > 0 && !hasNext)) {
      try {
        barrier.await(endpoint.getBarrierAwaitTimeoutMs(),TimeUnit.MILLISECONDS);
        if (!consumerTimeout) {
          processed=0;
        }
      }
 catch (      Exception e) {
        getExceptionHandler().handleException("Error waiting for batch to complete",e);
        break;
      }
    }
  }
}
