{
  super.doStart();
  log.info("Starting Kafka consumer");
  executor=endpoint.createExecutor();
  for (int i=0; i < endpoint.getConsumersCount(); i++) {
    ConsumerConnector consumer=kafka.consumer.Consumer.createJavaConsumerConnector(new ConsumerConfig(getProps()));
    Map<String,Integer> topicCountMap=new HashMap<String,Integer>();
    topicCountMap.put(endpoint.getTopic(),endpoint.getConsumerStreams());
    Map<String,List<KafkaStream<byte[],byte[]>>> consumerMap=consumer.createMessageStreams(topicCountMap);
    List<KafkaStream<byte[],byte[]>> streams=consumerMap.get(endpoint.getTopic());
    if (endpoint.isAutoCommitEnable() != null && Boolean.FALSE == endpoint.isAutoCommitEnable().booleanValue()) {
      CyclicBarrier barrier=new CyclicBarrier(endpoint.getConsumerStreams(),new CommitOffsetTask(consumer));
      for (      final KafkaStream<byte[],byte[]> stream : streams) {
        executor.submit(new BatchingConsumerTask(stream,barrier));
      }
      consumerBarriers.put(consumer,barrier);
    }
 else {
      for (      final KafkaStream<byte[],byte[]> stream : streams) {
        executor.submit(new AutoCommitConsumerTask(stream));
      }
      consumerBarriers.put(consumer,null);
    }
  }
}
