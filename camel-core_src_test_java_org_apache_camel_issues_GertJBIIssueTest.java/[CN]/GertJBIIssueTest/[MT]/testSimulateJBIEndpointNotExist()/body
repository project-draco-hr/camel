{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      errorHandler(deadLetterChannel("mock:dlc").maximumRedeliveries(0).handled(false));
      from("direct:start").threads(2).to("mock:done").throwException(new IllegalArgumentException("Forced"));
    }
  }
);
  context.start();
  getMockEndpoint("mock:done").expectedMessageCount(1);
  getMockEndpoint("mock:dlc").expectedMessageCount(1);
  Exchange out=template.send("direct:start",new Processor(){
    public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("Hello World");
    }
  }
);
  assertMockEndpointsSatisfied();
  Future<Exchange> future=out.getOut().getBody(Future.class);
  Exchange task=future.get();
  assertEquals("Should have failed",true,task.isFailed());
  Exception cause=assertIsInstanceOf(IllegalArgumentException.class,task.getException());
  assertEquals("Forced",cause.getMessage());
}
