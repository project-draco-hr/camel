{
  String contentType=message.getHeader(Exchange.CONTENT_TYPE,String.class);
  if (contentType != null && HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT.equals(contentType)) {
    if (allowJavaSerializedObject || isTransferException()) {
      try {
        Object object=message.getMandatoryBody(Serializable.class);
        HttpHelper.writeObjectToServletResponse(response,object);
        return;
      }
 catch (      InvalidPayloadException e) {
        throw new IOException(e);
      }
    }
 else {
      throw new RuntimeCamelException("Content-type " + HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT + " is not allowed");
    }
  }
  InputStream is=null;
  if (checkChunked(message,exchange)) {
    is=message.getBody(InputStream.class);
  }
 else {
    if (!isText(contentType)) {
      is=exchange.getContext().getTypeConverter().tryConvertTo(InputStream.class,message.getBody());
    }
  }
  if (is != null) {
    ServletOutputStream os=response.getOutputStream();
    if (!checkChunked(message,exchange)) {
      CachedOutputStream stream=new CachedOutputStream(exchange);
      try {
        int len=copyStream(is,stream,response.getBufferSize());
        response.setContentLength(len);
        OutputStream current=stream.getCurrentStream();
        if (current instanceof ByteArrayOutputStream) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Streaming (direct) response in non-chunked mode with content-length {}");
          }
          ByteArrayOutputStream bos=(ByteArrayOutputStream)current;
          bos.writeTo(os);
        }
 else {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Streaming response in non-chunked mode with content-length {} and buffer size: {}",len,len);
          }
          copyStream(stream.getInputStream(),os,len);
        }
      }
  finally {
        IOHelper.close(is,os);
      }
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Streaming response in chunked mode with buffer size {}",response.getBufferSize());
      }
      copyStream(is,os,response.getBufferSize());
    }
  }
 else {
    String data=message.getBody(String.class);
    if (data != null) {
      String charset=IOHelper.getCharsetName(exchange,true);
      final int dataByteLength=data.getBytes(charset).length;
      response.setCharacterEncoding(charset);
      response.setContentLength(dataByteLength);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Writing response in non-chunked mode as plain text with content-length {} and buffer size: {}",dataByteLength,response.getBufferSize());
      }
      try {
        response.getWriter().print(data);
      }
  finally {
        response.getWriter().flush();
      }
    }
  }
}
