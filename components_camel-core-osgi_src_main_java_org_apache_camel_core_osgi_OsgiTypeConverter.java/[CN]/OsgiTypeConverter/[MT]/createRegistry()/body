{
  DefaultTypeConverter answer=new DefaultTypeConverter(new DefaultPackageScanClassResolver(){
    @Override public Set<ClassLoader> getClassLoaders(){
      return Collections.emptySet();
    }
  }
,injector,factoryFinder);
  try {
    answer.loadCoreTypeConverters();
  }
 catch (  Exception e) {
    throw new RuntimeCamelException("Error loading CoreTypeConverter due: " + e.getMessage(),e);
  }
  ServiceReference<TypeConverterLoader>[] serviceReferences=this.tracker.getServiceReferences();
  if (serviceReferences != null) {
    ArrayList<ServiceReference<TypeConverterLoader>> servicesList=new ArrayList<ServiceReference<TypeConverterLoader>>(Arrays.asList(serviceReferences));
    Collections.sort(servicesList);
    for (    ServiceReference<TypeConverterLoader> sr : servicesList) {
      try {
        LOG.debug("loading type converter from bundle: {}",sr.getBundle().getSymbolicName());
        ((TypeConverterLoader)this.tracker.getService(sr)).load(answer);
      }
 catch (      Throwable t) {
        throw new RuntimeCamelException("Error loading type converters from service: " + sr + " due: "+ t.getMessage(),t);
      }
    }
  }
  LOG.trace("Created TypeConverter: {}",answer);
  return answer;
}
