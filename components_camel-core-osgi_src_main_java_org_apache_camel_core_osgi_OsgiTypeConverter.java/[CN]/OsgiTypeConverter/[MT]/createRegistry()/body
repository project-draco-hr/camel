{
  DefaultTypeConverter answer=new DefaultTypeConverter(new DefaultPackageScanClassResolver(){
    @Override public Set<ClassLoader> getClassLoaders(){
      return Collections.emptySet();
    }
  }
,injector,factoryFinder);
  try {
    answer.loadCoreTypeConverters();
  }
 catch (  Exception e) {
    throw new RuntimeCamelException("Error loading CoreTypeConverter due: " + e.getMessage(),e);
  }
  Object[] services=this.tracker.getServices();
  if (services != null) {
    for (    Object o : services) {
      try {
        ((TypeConverterLoader)o).load(answer);
      }
 catch (      Throwable t) {
        throw new RuntimeCamelException("Error loading type converters from service: " + o + " due: "+ t.getMessage(),t);
      }
    }
  }
  LOG.trace("Created TypeConverter: {}",answer);
  return answer;
}
