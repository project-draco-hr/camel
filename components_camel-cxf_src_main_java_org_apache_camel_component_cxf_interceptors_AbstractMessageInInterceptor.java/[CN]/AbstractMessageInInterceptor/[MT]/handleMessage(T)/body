{
  Logger logger=getLogger();
  if (isFaultMessage(message)) {
    message.getInterceptorChain().abort();
    Endpoint ep=message.getExchange().get(Endpoint.class);
    if (ep.getInFaultObserver() != null) {
      ep.getInFaultObserver().onMessage(message);
      return;
    }
  }
  Document document=createDOMMessage(message);
  Element payloadEl=(Element)document.getChildNodes().item(0);
  Exchange ex=message.getExchange();
  BindingOperationInfo boi=ex.get(BindingOperationInfo.class);
  if (boi == null) {
    BindingInfo bi=ex.get(BindingInfo.class);
    if (bi == null) {
      Endpoint ep=ex.get(Endpoint.class);
      bi=ep.getEndpointInfo().getBinding();
      ex.put(BindingInfo.class,bi);
    }
    if (logger.isLoggable(Level.INFO)) {
      logger.info("AbstractRoutingMessageInInterceptor Infer BindingOperationInfo.");
    }
    boi=getBindingOperation(message,document);
    if (boi == null) {
      QName startQName=new QName(payloadEl.getNamespaceURI(),payloadEl.getLocalName());
      throw new Fault(new org.apache.cxf.common.i18n.Message("REQ_NOT_UNDERSTOOD",getLogger(),startQName));
    }
    if (boi != null) {
      ex.put(BindingOperationInfo.class,boi);
      ex.put(OperationInfo.class,boi.getOperationInfo());
      ex.setOneWay(boi.getOperationInfo().isOneWay());
      if (logger.isLoggable(Level.INFO)) {
        logger.info("DOMInInterceptor- BindingOperation is:" + boi.getName());
      }
    }
  }
  BindingMessageInfo bmi=isRequestor(message) ? boi.getOutput() : boi.getInput();
  List<Element> partList=getPartList(message,payloadEl,bmi);
  message.put(List.class,partList);
  Element header=getHeader(message);
  message.put(Element.class,header);
}
