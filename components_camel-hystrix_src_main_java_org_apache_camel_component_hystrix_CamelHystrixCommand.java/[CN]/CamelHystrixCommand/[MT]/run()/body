{
  try {
    cache.doInProducer(runEndpoint,exchange,exchange.getPattern(),new ProducerCallback<Exchange>(){
      @Override public Exchange doInProducer(      Producer producer,      Exchange exchange,      ExchangePattern exchangePattern) throws Exception {
        try {
          producer.process(exchange);
        }
 catch (        Exception e) {
          exchange.setException(e);
        }
        return exchange;
      }
    }
);
  }
 catch (  Exception e) {
    exchange.setException(e);
  }
  if (exchange.getException() != null) {
    Exception exception=exchange.getException();
    exchange.setException(null);
    if (exception instanceof InterruptedException) {
      exchange.removeProperty(Exchange.ROUTE_STOP);
    }
    throw new RuntimeException(exception.getMessage());
  }
  return exchange;
}
