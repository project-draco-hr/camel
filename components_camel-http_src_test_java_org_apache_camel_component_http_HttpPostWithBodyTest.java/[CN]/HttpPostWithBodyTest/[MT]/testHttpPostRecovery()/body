{
  MockEndpoint mockResult=resolveMandatoryEndpoint("mock:result",MockEndpoint.class);
  MockEndpoint mockRecovery=resolveMandatoryEndpoint("mock:recovery",MockEndpoint.class);
  mockRecovery.expectedMessageCount(1);
  mockResult.expectedMessageCount(0);
  template.send("direct:reset",new Processor(){
    public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("q=activemq");
    }
  }
);
  mockRecovery.assertIsSatisfied();
  mockResult.assertIsSatisfied();
  List<Exchange> list=mockRecovery.getReceivedExchanges();
  Exchange exchange=list.get(0);
  assertNotNull("exchange",exchange);
  Message in=exchange.getIn();
  assertNotNull("in",in);
  Map<String,Object> headers=in.getHeaders();
  log.debug("Headers: " + headers);
  assertTrue("Should be more than one header but was: " + headers,headers.size() > 0);
  String body=in.getBody(String.class);
  log.debug("Body: " + body);
  assertNotNull("Should have a body!",body);
  assertTrue("body should contain: <html>",body.contains("<html>"));
}
