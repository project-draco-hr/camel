{
  DefaultCxfBinding cxfBinding=new DefaultCxfBinding();
  cxfBinding.setHeaderFilterStrategy(new DefaultHeaderFilterStrategy());
  Exchange exchange=new DefaultExchange(context);
  org.apache.cxf.message.Exchange cxfExchange=new org.apache.cxf.message.ExchangeImpl();
  exchange.setProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.PAYLOAD);
  Map<String,Object> responseContext=new HashMap<String,Object>();
  responseContext.put(org.apache.cxf.message.Message.RESPONSE_CODE,Integer.valueOf(200));
  Map<String,List<String>> headers=new TreeMap<String,List<String>>(String.CASE_INSENSITIVE_ORDER);
  responseContext.put(org.apache.cxf.message.Message.PROTOCOL_HEADERS,headers);
  org.apache.cxf.message.Message cxfMessage=new org.apache.cxf.message.MessageImpl();
  cxfExchange.setInMessage(cxfMessage);
  cxfBinding.populateExchangeFromCxfResponse(exchange,cxfExchange,responseContext);
  CxfPayload<?> cxfPayload=exchange.getOut().getBody(CxfPayload.class);
  assertNotNull(cxfPayload);
  List<?> body=cxfPayload.getBody();
  assertNotNull(body);
  assertEquals(0,body.size());
}
