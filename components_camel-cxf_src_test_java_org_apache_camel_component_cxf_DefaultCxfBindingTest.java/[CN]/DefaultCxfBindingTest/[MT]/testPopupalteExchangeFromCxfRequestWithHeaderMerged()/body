{
  DefaultCxfBinding cxfBinding=new DefaultCxfBinding();
  cxfBinding.setHeaderFilterStrategy(new DefaultHeaderFilterStrategy());
  Exchange exchange=new DefaultExchange(context);
  exchange.setProperty(CxfConstants.CAMEL_CXF_PROTOCOL_HEADERS_MERGED,Boolean.TRUE);
  org.apache.cxf.message.Exchange cxfExchange=new org.apache.cxf.message.ExchangeImpl();
  exchange.setProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.PAYLOAD);
  org.apache.cxf.message.Message cxfMessage=new org.apache.cxf.message.MessageImpl();
  Map<String,List<String>> headers=new TreeMap<String,List<String>>(String.CASE_INSENSITIVE_ORDER);
  headers.put("myfruitheader",Arrays.asList("peach"));
  headers.put("mybrewheader",Arrays.asList("cappuccino","espresso"));
  cxfMessage.put(org.apache.cxf.message.Message.PROTOCOL_HEADERS,headers);
  cxfExchange.setInMessage(cxfMessage);
  cxfBinding.populateExchangeFromCxfRequest(cxfExchange,exchange);
  Map<String,Object> camelHeaders=exchange.getIn().getHeaders();
  assertNotNull(camelHeaders);
  assertEquals("peach",camelHeaders.get("MyFruitHeader"));
  assertEquals("cappuccino, espresso",camelHeaders.get("MyBrewHeader"));
}
