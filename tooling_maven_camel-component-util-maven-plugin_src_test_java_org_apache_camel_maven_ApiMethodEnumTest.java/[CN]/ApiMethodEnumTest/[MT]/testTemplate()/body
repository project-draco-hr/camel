{
  final FileApiMethodGeneratorMojo mojo=new FileApiMethodGeneratorMojo(){
    @Override public List<String> getSignatureList() throws MojoExecutionException {
      final ArrayList<String> signatures=new ArrayList<String>();
      signatures.add("public String sayHi();");
      signatures.add("public String sayHi(final String name);");
      signatures.add("public final String greetMe(final String name);");
      signatures.add("public final String greetUs(final String name1, String name2);");
      signatures.add("public final String greetAll(String[] names);");
      signatures.add("public final String greetAll(java.util.List<String> names);");
      signatures.add("public final String[] greetTimes(String name, int times);");
      return signatures;
    }
  }
;
  mojo.substitutions=new Substitution[1];
  mojo.substitutions[0]=new Substitution(".+","(.+)","java.util.List","$1List");
  mojo.outDir=new File("target/generated-test-sources/camelComponent");
  mojo.outPackage="org.apache.camel.component.util";
  mojo.proxyClass=TestProxy.class.getCanonicalName();
  mojo.project=new MavenProject((Model)null){
    @Override public List getRuntimeClasspathElements() throws DependencyResolutionRequiredException {
      return Collections.EMPTY_LIST;
    }
  }
;
  mojo.execute();
}
