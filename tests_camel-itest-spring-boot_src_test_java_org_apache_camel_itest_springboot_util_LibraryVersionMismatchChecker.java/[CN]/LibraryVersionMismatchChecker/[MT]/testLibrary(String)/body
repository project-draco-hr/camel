{
  MavenResolverSystem resolver=Maven.resolver();
  MavenResolvedArtifact[] original=resolver.resolve("org.apache.camel:" + moduleName + ":2.18.0-SNAPSHOT").withTransitivity().asResolvedArtifact();
  Map<String,String> originalMap=versionMap(original);
  File userPom=createUserPom(moduleName);
  MavenResolvedArtifact[] user=resolver.loadPomFromFile(userPom).importRuntimeDependencies().resolve().withTransitivity().asResolvedArtifact();
  Map<String,String> userMap=versionMap(user);
  boolean changed=false;
  for (  String dep : originalMap.keySet()) {
    String originalVersion=originalMap.get(dep);
    String userVersion=userMap.get(dep);
    if (userVersion == null) {
      System.out.println("WARNING - " + moduleName + " - Library not present in user version: "+ dep);
    }
 else     if (!originalVersion.equals(userVersion)) {
      System.out.println("ERROR - " + moduleName + " - Version mismatch for "+ dep+ ": original="+ originalVersion+ ", user="+ userVersion);
      changed=true;
    }
  }
  return !changed;
}
