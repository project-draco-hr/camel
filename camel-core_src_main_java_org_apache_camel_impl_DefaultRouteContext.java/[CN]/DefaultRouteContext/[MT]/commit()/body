{
  if (!eventDrivenProcessors.isEmpty()) {
    Processor target=Pipeline.newInstance(getCamelContext(),eventDrivenProcessors);
    String routeId=route.idOrCreate(getCamelContext().getNodeIdFactory());
    CamelInternalProcessor internal=new CamelInternalProcessor(target);
    internal.addTask(new CamelInternalProcessor.UnitOfWorkProcessorTask(routeId));
    internal.addTask(new CamelInternalProcessor.RouteContextTask(this));
    List<RoutePolicy> routePolicyList=getRoutePolicyList();
    if (routePolicyList != null && !routePolicyList.isEmpty()) {
      for (      RoutePolicy policy : routePolicyList) {
        if (!camelContext.hasService(policy)) {
          try {
            camelContext.addService(policy);
          }
 catch (          Exception e) {
            throw ObjectHelper.wrapRuntimeCamelException(e);
          }
        }
      }
      internal.addTask(new CamelInternalProcessor.RoutePolicyTask(routePolicyList));
    }
    internal.addTask(new CamelInternalProcessor.RouteInflightRepositoryTask(camelContext.getInflightRepository(),routeId));
    InstrumentationProcessor instrument=new InstrumentationProcessor();
    instrument.setType("route");
    instrument.setProcessor(internal);
    Route edcr=new EventDrivenConsumerRoute(this,getEndpoint(),instrument);
    edcr.getProperties().put(Route.ID_PROPERTY,routeId);
    edcr.getProperties().put(Route.PARENT_PROPERTY,Integer.toHexString(route.hashCode()));
    if (route.getGroup() != null) {
      edcr.getProperties().put(Route.GROUP_PROPERTY,route.getGroup());
    }
    CamelInternalProcessor.RoutePolicyTask task=internal.getTask(CamelInternalProcessor.RoutePolicyTask.class);
    if (task != null) {
      task.setRoute(edcr);
    }
    if (routePolicyList != null && !routePolicyList.isEmpty()) {
      for (      RoutePolicy policy : routePolicyList) {
        policy.onInit(edcr);
      }
    }
    routes.add(edcr);
  }
}
