{
  if (!eventDrivenProcessors.isEmpty()) {
    Processor processor=Pipeline.newInstance(getCamelContext(),eventDrivenProcessors);
    UnitOfWorkProcessor unitOfWorkProcessor=new UnitOfWorkProcessor(this,processor);
    Processor target=unitOfWorkProcessor;
    RoutePolicyProcessor routePolicyProcessor=null;
    RoutePolicy policy=getRoutePolicy();
    if (policy != null) {
      routePolicyProcessor=new RoutePolicyProcessor(unitOfWorkProcessor,policy);
      if (!camelContext.hasService(policy)) {
        try {
          camelContext.addService(policy);
        }
 catch (        Exception e) {
          throw ObjectHelper.wrapRuntimeCamelException(e);
        }
      }
      target=routePolicyProcessor;
    }
    InstrumentationProcessor wrapper=new InstrumentationProcessor();
    wrapper.setType("route");
    wrapper.setProcessor(target);
    Route edcr=new EventDrivenConsumerRoute(this,getEndpoint(),wrapper);
    String routeId=route.idOrCreate(getCamelContext().getNodeIdFactory());
    edcr.getProperties().put(Route.ID_PROPERTY,routeId);
    edcr.getProperties().put(Route.PARENT_PROPERTY,Integer.toHexString(route.hashCode()));
    if (route.getGroup() != null) {
      edcr.getProperties().put(Route.GROUP_PROPERTY,route.getGroup());
    }
    if (routePolicyProcessor != null) {
      routePolicyProcessor.setRoute(edcr);
    }
    if (policy != null) {
      policy.onInit(edcr);
    }
    routes.add(edcr);
  }
}
