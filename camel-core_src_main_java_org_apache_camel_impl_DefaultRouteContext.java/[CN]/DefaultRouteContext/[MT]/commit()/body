{
  if (!eventDrivenProcessors.isEmpty()) {
    Processor target=Pipeline.newInstance(getCamelContext(),eventDrivenProcessors);
    String routeId=route.idOrCreate(getCamelContext().getNodeIdFactory());
    CamelInternalProcessor internal=new CamelInternalProcessor(target);
    internal.addAdvice(new CamelInternalProcessor.UnitOfWorkProcessorAdvice(this));
    List<RoutePolicy> routePolicyList=getRoutePolicyList();
    if (routePolicyList != null && !routePolicyList.isEmpty()) {
      for (      RoutePolicy policy : routePolicyList) {
        if (!camelContext.hasService(policy)) {
          try {
            camelContext.addService(policy);
          }
 catch (          Exception e) {
            throw ObjectHelper.wrapRuntimeCamelException(e);
          }
        }
      }
      internal.addAdvice(new CamelInternalProcessor.RoutePolicyAdvice(routePolicyList));
    }
    internal.addAdvice(new CamelInternalProcessor.RouteInflightRepositoryAdvice(camelContext.getInflightRepository(),routeId));
    internal.addAdvice(new CamelInternalProcessor.InstrumentationAdvice("route"));
    internal.addAdvice(new CamelInternalProcessor.RouteLifecycleAdvice());
    Route edcr=new EventDrivenConsumerRoute(this,getEndpoint(),internal);
    edcr.getProperties().put(Route.ID_PROPERTY,routeId);
    edcr.getProperties().put(Route.PARENT_PROPERTY,Integer.toHexString(route.hashCode()));
    edcr.getProperties().put(Route.DESCRIPTION_PROPERTY,route.getDescriptionText());
    if (route.getGroup() != null) {
      edcr.getProperties().put(Route.GROUP_PROPERTY,route.getGroup());
    }
    String rest="false";
    if (route.isRest() != null && route.isRest()) {
      rest="true";
    }
    edcr.getProperties().put(Route.REST_PROPERTY,rest);
    CamelInternalProcessor.RoutePolicyAdvice task=internal.getAdvice(CamelInternalProcessor.RoutePolicyAdvice.class);
    if (task != null) {
      task.setRoute(edcr);
    }
    CamelInternalProcessor.RouteLifecycleAdvice task2=internal.getAdvice(CamelInternalProcessor.RouteLifecycleAdvice.class);
    if (task2 != null) {
      task2.setRoute(edcr);
    }
    if (routePolicyList != null && !routePolicyList.isEmpty()) {
      for (      RoutePolicy policy : routePolicyList) {
        policy.onInit(edcr);
      }
    }
    routes.add(edcr);
  }
}
