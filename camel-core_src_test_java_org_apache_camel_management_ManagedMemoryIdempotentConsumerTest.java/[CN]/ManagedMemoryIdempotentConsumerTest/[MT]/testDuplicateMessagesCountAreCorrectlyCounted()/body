{
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> names=mbeanServer.queryNames(new ObjectName("org.apache.camel" + ":type=processors,*"),null);
  ObjectName on=null;
  for (  ObjectName name : names) {
    if (name.toString().contains("idempotentConsumer")) {
      on=name;
      break;
    }
  }
  assertTrue("Should be registered",mbeanServer.isRegistered(on));
  Long count=(Long)mbeanServer.getAttribute(on,"DuplicateMessageCount");
  assertEquals(0L,count.longValue());
  resultEndpoint.expectedBodiesReceived("one","two");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("2","two");
  resultEndpoint.assertIsSatisfied();
  count=(Long)mbeanServer.getAttribute(on,"DuplicateMessageCount");
  assertEquals(2L,count.longValue());
  mbeanServer.invoke(on,"resetDuplicateMessageCount",null,null);
  count=(Long)mbeanServer.getAttribute(on,"DuplicateMessageCount");
  assertEquals(0L,count.longValue());
  resetMocks();
  resultEndpoint.expectedBodiesReceived("five");
  sendMessage("4","four");
  sendMessage("4","four");
  sendMessage("5","five");
  sendMessage("4","four");
  resultEndpoint.assertIsSatisfied();
  count=(Long)mbeanServer.getAttribute(on,"DuplicateMessageCount");
  assertEquals(3L,count.longValue());
}
