{
  Message in=exchange.getIn();
  StringBuilder sb=new StringBuilder("");
  if (showAll || showExchangeId) {
    if (multiline) {
      sb.append('\n');
    }
    sb.append(", Id:").append(exchange.getExchangeId());
  }
  if (showAll || showProperties) {
    if (multiline) {
      sb.append('\n');
    }
    sb.append(", Properties:").append(exchange.getProperties());
  }
  if (showAll || showHeaders) {
    if (multiline) {
      sb.append('\n');
    }
    sb.append(", Headers:").append(in.getHeaders());
  }
  if (showAll || showBodyType) {
    if (multiline) {
      sb.append('\n');
    }
    sb.append(", BodyType:").append(getBodyTypeAsString(in));
  }
  if (showAll || showBody) {
    if (multiline) {
      sb.append('\n');
    }
    sb.append(", Body:").append(getBodyAsString(in));
  }
  Message out=exchange.getOut(false);
  if (showAll || showOut) {
    if (out != null) {
      if (showAll || showHeaders) {
        if (multiline) {
          sb.append('\n');
        }
        sb.append(", OutHeaders:").append(out.getHeaders());
      }
      if (showAll || showBodyType) {
        if (multiline) {
          sb.append('\n');
        }
        sb.append(", OutBodyType:").append(getBodyTypeAsString(out));
      }
      if (showAll || showBody) {
        if (multiline) {
          sb.append('\n');
        }
        sb.append(", OutBody:").append(getBodyAsString(out));
      }
    }
 else {
      if (multiline) {
        sb.append('\n');
      }
      sb.append(", Out: null");
    }
  }
  if (maxChars > 0) {
    StringBuilder answer=new StringBuilder();
    for (    String s : sb.toString().split("\n")) {
      if (s != null) {
        if (s.length() > maxChars) {
          s=s.substring(0,maxChars);
          answer.append(s).append("...");
        }
 else {
          answer.append(s);
        }
        if (multiline) {
          answer.append("\n");
        }
      }
    }
    return "Exchange[" + (multiline ? answer.append(']').toString() : answer.toString().substring(2) + "]");
  }
  return "Exchange[" + (multiline ? sb.append(']').toString() : sb.toString().substring(2) + "]");
}
