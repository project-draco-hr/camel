{
  List<SimpleNode> answer=new ArrayList<SimpleNode>();
  Stack<Block> stack=new Stack<Block>();
  for (  SimpleNode token : nodes) {
    if (token instanceof BlockStart) {
      stack.push((Block)token);
    }
 else     if (token instanceof BlockEnd) {
      if (stack.isEmpty()) {
        throw new SimpleParserException(token.getToken().getType().getType() + " has no matching start token",token.getToken().getIndex());
      }
      Block top=stack.pop();
      Block block=stack.isEmpty() ? null : stack.peek();
      if (block != null) {
        if (!block.acceptAndAddNode(top)) {
          throw new SimpleParserException(block.getToken().getType() + " cannot accept " + token.getToken().getType(),token.getToken().getIndex());
        }
      }
 else {
        answer.add(top);
      }
    }
 else {
      Block block=stack.isEmpty() ? null : stack.peek();
      if (block != null) {
        if (!block.acceptAndAddNode(token)) {
          throw new SimpleParserException(block.getToken().getType() + " cannot accept " + token.getToken().getType(),token.getToken().getIndex());
        }
      }
 else {
        answer.add(token);
      }
    }
  }
  nodes.clear();
  nodes.addAll(answer);
}
