{
  if (withSleepTime) {
    Thread.sleep(900);
  }
  Object body=exchange.getIn().getBody();
  if (body instanceof InputStream) {
    ByteArrayOutputStream output=new ByteArrayOutputStream();
    IOHelper.copy((InputStream)body,output);
    exchange.getOut().setBody(output.toByteArray());
  }
 else   if (body instanceof Reader) {
    Reader reader=(Reader)body;
    StringBuilder sb=new StringBuilder();
    for (int i=reader.read(); i > -1; i=reader.read()) {
      sb.append((char)i);
    }
    reader.close();
    exchange.getOut().setBody(sb.toString());
  }
 else   if (body instanceof StreamSource) {
    StreamSource ss=(StreamSource)body;
    if (ss.getInputStream() != null) {
      ByteArrayOutputStream output=new ByteArrayOutputStream();
      IOHelper.copy(ss.getInputStream(),output);
      exchange.getOut().setBody(output.toByteArray());
    }
 else     if (ss.getReader() != null) {
      Reader reader=ss.getReader();
      StringBuilder sb=new StringBuilder();
      for (int i=reader.read(); i > -1; i=reader.read()) {
        sb.append((char)i);
      }
      reader.close();
      exchange.getOut().setBody(sb.toString());
    }
 else {
      throw new RuntimeException("StreamSource without InputStream and without Reader not supported");
    }
  }
 else {
    throw new RuntimeException("Type " + body.getClass().getName() + " not supported");
  }
}
