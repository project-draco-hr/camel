{
  Exchange exchange=new DefaultExchange(new DefaultCamelContext(),ExchangePattern.InOut);
  exchange.getIn().setHeader(SmppConstants.COMMAND,"DataSm");
  Map<String,String> optionalParameters=new LinkedHashMap<String,String>();
  optionalParameters.put("SOURCE_SUBADDRESS","1292");
  optionalParameters.put("ADDITIONAL_STATUS_INFO_TEXT","urgent");
  optionalParameters.put("DEST_ADDR_SUBUNIT","4");
  optionalParameters.put("DEST_TELEMATICS_ID","2");
  optionalParameters.put("QOS_TIME_TO_LIVE","3600000");
  optionalParameters.put("ALERT_ON_MESSAGE_DELIVERY",null);
  optionalParameters.put("0x2150","0815");
  optionalParameters.put("0x2151","0816");
  optionalParameters.put("0x2152","6");
  optionalParameters.put("0x2153","9");
  optionalParameters.put("0x2154","7400000");
  optionalParameters.put("0x2155",null);
  exchange.getIn().setHeader(SmppConstants.OPTIONAL_PARAMETERS,optionalParameters);
  expect(session.dataShortMessage(eq("CMT"),eq(TypeOfNumber.UNKNOWN),eq(NumberingPlanIndicator.UNKNOWN),eq("1616"),eq(TypeOfNumber.UNKNOWN),eq(NumberingPlanIndicator.UNKNOWN),eq("1717"),eq(new ESMClass()),eq(new RegisteredDelivery((byte)1)),eq(DataCodings.newInstance((byte)0)),eq(new OptionalParameter.Source_subaddress("1292".getBytes())),eq(new OptionalParameter.Additional_status_info_text("urgent")),eq(new OptionalParameter.Dest_addr_subunit((byte)4)),eq(new OptionalParameter.Dest_telematics_id((short)2)),eq(new OptionalParameter.Qos_time_to_live(3600000)),eq(new OptionalParameter.Alert_on_message_delivery((byte)0)))).andReturn(new DataSmResult(new MessageId("1"),new OptionalParameter[]{new OptionalParameter.Source_subaddress("1292".getBytes()),new OptionalParameter.Additional_status_info_text("urgent"),new OptionalParameter.Dest_addr_subunit((byte)4),new OptionalParameter.Dest_telematics_id((short)2),new OptionalParameter.Qos_time_to_live(3600000),new OptionalParameter.Alert_on_message_delivery((byte)0)}));
  replay(session);
  command.execute(exchange);
  verify(session);
  assertEquals(3,exchange.getOut().getHeaders().size());
  assertEquals("1",exchange.getOut().getHeader(SmppConstants.ID));
  Map<String,String> optParamMap=exchange.getOut().getHeader(SmppConstants.OPTIONAL_PARAMETERS,Map.class);
  assertEquals(6,optParamMap.size());
  assertEquals("1292",optParamMap.get("SOURCE_SUBADDRESS"));
  assertEquals("urgent",optParamMap.get("ADDITIONAL_STATUS_INFO_TEXT"));
  assertEquals("4",optParamMap.get("DEST_ADDR_SUBUNIT"));
  assertEquals("2",optParamMap.get("DEST_TELEMATICS_ID"));
  assertEquals("3600000",optParamMap.get("QOS_TIME_TO_LIVE"));
  assertEquals("0",optParamMap.get("ALERT_ON_MESSAGE_DELIVERY"));
  Map<Short,Object> optionalResultParameter=exchange.getOut().getHeader(SmppConstants.OPTIONAL_PARAMETER,Map.class);
  assertEquals(6,optionalResultParameter.size());
  assertArrayEquals("1292".getBytes("UTF-8"),(byte[])optionalResultParameter.get(Short.valueOf((short)0x0202)));
  assertEquals("urgent",optionalResultParameter.get(Short.valueOf((short)0x001D)));
  assertEquals(Byte.valueOf((byte)4),optionalResultParameter.get(Short.valueOf((short)0x0005)));
  assertEquals(Short.valueOf((short)2),optionalResultParameter.get(Short.valueOf((short)0x0008)));
  assertEquals(Integer.valueOf(3600000),optionalResultParameter.get(Short.valueOf((short)0x0017)));
  assertEquals((byte)0,optionalResultParameter.get(Short.valueOf((short)0x130C)));
}
