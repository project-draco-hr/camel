{
  try {
    List<Object> arguments=new ArrayList<>(payloads.length + 1);
    arguments.add(rdd);
    arguments.addAll(asList(payloads));
    if (arguments.get(1) == null) {
      arguments.remove(1);
    }
    Method callbackMethod=rddCallbacks.get(0);
    callbackMethod.setAccessible(true);
    if (camelContext != null) {
      for (int i=1; i < arguments.size(); i++) {
        arguments.set(i,camelContext.getTypeConverter().convertTo(callbackMethod.getParameterTypes()[i],arguments.get(i)));
      }
    }
    return callbackMethod.invoke(objectWithCallback,arguments.toArray(new Object[arguments.size()]));
  }
 catch (  IllegalAccessException|InvocationTargetException e) {
    throw new RuntimeException(e);
  }
}
