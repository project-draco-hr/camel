{
  final Exchange exchange=endpoint.createExchange();
  org.apache.camel.Message in=exchange.getIn();
  setHeaders(in,message);
  Map<String,Object> data=message.getDataAsMap();
  @SuppressWarnings("unchecked") final Map<String,Object> event=(Map<String,Object>)data.get(EVENT_PROPERTY);
  final Object eventType=event.get(TYPE_PROPERTY);
  Object createdDate=event.get(CREATED_DATE_PROPERTY);
  Object replayId=event.get(REPLAY_ID_PROPERTY);
  if (log.isDebugEnabled()) {
    log.debug(String.format("Received event %s on channel %s created on %s",eventType,channel.getChannelId(),createdDate));
  }
  in.setHeader("CamelSalesforceEventType",eventType);
  in.setHeader("CamelSalesforceCreatedDate",createdDate);
  if (replayId != null) {
    in.setHeader("CamelSalesforceReplayId",replayId);
  }
  @SuppressWarnings("unchecked") final Map<String,Object> sObject=(Map<String,Object>)data.get(SOBJECT_PROPERTY);
  try {
    final String sObjectString=objectMapper.writeValueAsString(sObject);
    log.debug("Received SObject: {}",sObjectString);
    if (sObjectClass == null) {
      in.setBody(sObject);
    }
 else {
      in.setBody(objectMapper.readValue(new StringReader(sObjectString),sObjectClass));
    }
  }
 catch (  IOException e) {
    final String msg=String.format("Error parsing message [%s] from Topic %s: %s",message,topicName,e.getMessage());
    handleException(msg,new SalesforceException(msg,e));
  }
  try {
    getAsyncProcessor().process(exchange,new AsyncCallback(){
      public void done(      boolean doneSync){
        if (log.isTraceEnabled()) {
          log.trace("Done processing event: {} {}",eventType.toString(),doneSync ? "synchronously" : "asynchronously");
        }
      }
    }
);
  }
 catch (  Exception e) {
    String msg=String.format("Error processing %s: %s",exchange,e);
    handleException(msg,new SalesforceException(msg,e));
  }
 finally {
    Exception ex=exchange.getException();
    if (ex != null) {
      String msg=String.format("Unhandled exception: %s",ex.getMessage());
      handleException(msg,new SalesforceException(msg,ex));
    }
  }
}
