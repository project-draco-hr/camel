{
  List<String> allowedUserIds=determineSignaturenUserIds(exchange);
  for (int i=0; i < signatureList.size(); i++) {
    PGPOnePassSignature signature=signatureList.get(i);
    PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID());
    if (sigPublicKey == null) {
      continue;
    }
    if (isAllowedVerifyingKey(allowedUserIds,sigPublicKey)) {
      signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);
      return signature;
    }
  }
  if (signatureList.isEmpty()) {
    return null;
  }
 else {
    throw new IllegalArgumentException("No public key found fitting to the signature key Id; cannot verify the signature");
  }
}
