{
  LRUSoftCache<Integer,Object> cache=new LRUSoftCache<Integer,Object>(500);
  cache.start();
  for (int i=0; i < 500; i++) {
    Object data=createData();
    Integer key=new Integer(i);
    log.info("Putting {}",key);
    cache.put(key,data);
  }
  int size=cache.size();
  log.info("Cache size {}",size);
  assertTrue("Cache size should not be max, was: " + size,size < cache.getMaxCacheSize());
  List<Integer> list=new ArrayList<Integer>(cache.keySet());
  log.info("Keys: " + list);
  assertTrue("Cache size should not be max, was: " + list.size(),list.size() < cache.getMaxCacheSize());
  int first=list.get(0).intValue();
  assertTrue("First key should not be 0, was: " + first,first != 0);
  assertEquals(499,list.get(list.size() - 1).intValue());
  cache.stop();
}
