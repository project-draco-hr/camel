{
  if (session == null && !lazySessionCreation) {
    throw new IllegalStateException("Not started yet!");
  }
  if (session == null || !session.isConnected()) {
    openConnection();
  }
  if (getEndpoint().getConfiguration().getCharsetName() != null) {
    exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(getEndpoint().getConfiguration().getCharsetName()));
  }
  Object body=Mina2PayloadHelper.getIn(getEndpoint(),exchange);
  if (body == null) {
    noReplyLogger.log("No payload to send for exchange: " + exchange);
    return;
  }
  if (getEndpoint().getConfiguration().isTextline()) {
    body=getEndpoint().getCamelContext().getTypeConverter().mandatoryConvertTo(String.class,exchange,body);
  }
  if (sync) {
    responseLatch=new CountDownLatch(1);
    handler.reset();
  }
  if (LOG.isDebugEnabled()) {
    Object out=body;
    if (body instanceof byte[]) {
      out=exchange.getContext().getTypeConverter().convertTo(String.class,body);
    }
    LOG.debug("Writing body: {}",out);
  }
  Mina2Helper.writeBody(session,body,exchange);
  if (sync) {
    LOG.debug("Waiting for response using timeout {} millis.",timeout);
    boolean done=responseLatch.await(timeout,TimeUnit.MILLISECONDS);
    if (!done) {
      throw new ExchangeTimedOutException(exchange,timeout);
    }
    if (handler.getCause() != null) {
      throw new CamelExchangeException("Error occurred in ResponseHandler",exchange,handler.getCause());
    }
 else     if (!handler.isMessageReceived()) {
      throw new ExchangeTimedOutException(exchange,timeout);
    }
 else {
      if (ExchangeHelper.isOutCapable(exchange)) {
        Mina2PayloadHelper.setOut(exchange,handler.getMessage());
      }
 else {
        Mina2PayloadHelper.setIn(exchange,handler.getMessage());
      }
    }
  }
}
