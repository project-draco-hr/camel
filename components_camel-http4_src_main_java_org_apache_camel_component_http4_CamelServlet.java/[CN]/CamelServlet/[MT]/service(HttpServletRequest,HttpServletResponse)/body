{
  try {
    HttpConsumer consumer=resolve(request);
    if (consumer == null) {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
      return;
    }
    if (consumer.getEndpoint().getHttpMethodRestrict() != null && !consumer.getEndpoint().getHttpMethodRestrict().equals(request.getMethod())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
      return;
    }
    if ("TRACE".equals(request.getMethod()) && !consumer.isTraceEnabled()) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
      return;
    }
    DefaultExchange exchange=new DefaultExchange(consumer.getEndpoint(),ExchangePattern.InOut);
    if (consumer.getEndpoint().isBridgeEndpoint()) {
      exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);
    }
    if (consumer.getEndpoint().isDisableStreamCache()) {
      exchange.setProperty(Exchange.DISABLE_HTTP_STREAM_CACHE,Boolean.TRUE);
    }
    HttpHelper.setCharsetFromContentType(request.getContentType(),exchange);
    exchange.setIn(new HttpMessage(exchange,request,response));
    String contextPath=consumer.getEndpoint().getPath();
    exchange.getIn().setHeader("CamelServletContextPath",contextPath);
    consumer.getProcessor().process(exchange);
    consumer.getBinding().writeResponse(exchange,response);
  }
 catch (  Exception e) {
    throw new ServletException(e);
  }
}
