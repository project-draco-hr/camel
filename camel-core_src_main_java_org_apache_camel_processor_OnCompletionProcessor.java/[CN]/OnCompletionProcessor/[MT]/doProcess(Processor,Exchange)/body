{
  Object stop=exchange.removeProperty(Exchange.ROUTE_STOP);
  Object failureHandled=exchange.removeProperty(Exchange.FAILURE_HANDLED);
  Object errorhandlerHandled=exchange.removeProperty(Exchange.ERRORHANDLER_HANDLED);
  Object rollbackOnly=exchange.removeProperty(Exchange.ROLLBACK_ONLY);
  Object rollbackOnlyLast=exchange.removeProperty(Exchange.ROLLBACK_ONLY_LAST);
  Exception cause=exchange.getException();
  exchange.setException(null);
  try {
    processor.process(exchange);
  }
 catch (  Exception e) {
    exchange.setException(e);
  }
 finally {
    if (stop != null) {
      exchange.setProperty(Exchange.ROUTE_STOP,stop);
    }
    if (failureHandled != null) {
      exchange.setProperty(Exchange.FAILURE_HANDLED,failureHandled);
    }
    if (errorhandlerHandled != null) {
      exchange.setProperty(Exchange.ERRORHANDLER_HANDLED,errorhandlerHandled);
    }
    if (rollbackOnly != null) {
      exchange.setProperty(Exchange.ROLLBACK_ONLY,rollbackOnly);
    }
    if (rollbackOnlyLast != null) {
      exchange.setProperty(Exchange.ROLLBACK_ONLY_LAST,rollbackOnlyLast);
    }
    if (cause != null) {
      exchange.setException(cause);
    }
  }
}
