{
  if (processor == null) {
    return;
  }
  exchange.getUnitOfWork().addSynchronization(new SynchronizationAdapter(){
    @Override public void onComplete(    Exchange exchange){
      if (onFailureOnly) {
        return;
      }
      if (onWhen != null && !onWhen.matches(exchange)) {
        return;
      }
      final Exchange copy=prepareExchange(exchange);
      getExecutorService().submit(new Callable<Exchange>(){
        public Exchange call() throws Exception {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Processing onComplete: " + copy);
          }
          processor.process(copy);
          return copy;
        }
      }
);
    }
    public void onFailure(    Exchange exchange){
      if (onCompleteOnly) {
        return;
      }
      if (onWhen != null && !onWhen.matches(exchange)) {
        return;
      }
      final Exchange copy=prepareExchange(exchange);
      copy.setException(null);
      getExecutorService().submit(new Callable<Exchange>(){
        public Exchange call() throws Exception {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Processing onFailure: " + copy);
          }
          processor.process(copy);
          return copy;
        }
      }
);
    }
    @Override public String toString(){
      if (!onCompleteOnly && !onFailureOnly) {
        return "onCompleteOrFailure";
      }
 else       if (onCompleteOnly) {
        return "onCompleteOnly";
      }
 else {
        return "onFailureOnly";
      }
    }
  }
);
}
