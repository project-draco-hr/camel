{
  final String sqsURI=String.format("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient" + "&deleteIfFiltered=false" + "&defaultVisibilityTimeout=1");
  AmazonSQSClientMock clientMock=new AmazonSQSClientMock();
  populateMessages(clientMock);
  SimpleRegistry registry=new SimpleRegistry();
  DefaultCamelContext ctx=new DefaultCamelContext(registry);
  ctx.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from(sqsURI).setHeader("login",constant(true)).filter(simple("${header.login} == true")).to("mock:result");
    }
  }
);
  MockEndpoint result=MockEndpoint.resolve(ctx,"mock:result");
  registry.put("amazonSQSClient",clientMock);
  clientMock.setScheduler(ctx.getExecutorServiceManager().newScheduledThreadPool(clientMock,"ClientMock Scheduler",1));
  result.expectedMessageCount(1);
  ctx.start();
  assertIsSatisfied(1000,TimeUnit.MILLISECONDS);
  String response=ctx.createConsumerTemplate().receiveBody(sqsURI,5000,String.class);
  assertNull(response);
  ctx.stop();
  clientMock.shutdown();
}
