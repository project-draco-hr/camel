{
  BindyCsvFactory factory=getFactory(exchange.getContext().getPackageScanClassResolver());
  ObjectHelper.notNull(factory,"not instantiated");
  List<Map<String,Object>> models=new ArrayList<Map<String,Object>>();
  Map<String,Object> model;
  InputStreamReader in=new InputStreamReader(inputStream);
  Scanner scanner=new Scanner(in);
  String separator=factory.getSeparator();
  ObjectHelper.notEmpty(separator,"The separator has not been defined in the annotation @CsvRecord or not instantiated during initModel.");
  int count=0;
  try {
    if (factory.getSkipFirstLine()) {
      scanner.nextLine();
    }
    while (scanner.hasNextLine()) {
      String line=scanner.nextLine().trim();
      if (ObjectHelper.isEmpty(line)) {
        continue;
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Counter " + count++ + " : content : "+ line);
      }
      model=factory.factory();
      String[] tokens=line.split(separator,-1);
      List<String> result=Arrays.asList(tokens);
      if (result.size() == 0 || result.isEmpty()) {
        throw new java.lang.IllegalArgumentException("No records have been defined in the CSV !");
      }
      if (result.size() > 0) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Size of the record splitted : " + result.size());
        }
        factory.bind(result,model);
        factory.link(model);
        models.add(model);
        if (LOG.isDebugEnabled()) {
          LOG.debug("Graph of objects created : " + model);
        }
      }
    }
    if (models.size() == 0) {
      throw new java.lang.IllegalArgumentException("No records have been defined in the CSV !");
    }
 else {
      return models;
    }
  }
  finally {
    scanner.close();
    ObjectHelper.close(in,"in",LOG);
  }
}
