{
  String action=getEndpoint().getAction();
  String id=getEndpoint().getRouteId();
  if (ObjectHelper.equal("current",id)) {
    id=ROUTE_ID_EXPRESSION.evaluate(exchange,String.class);
  }
  Object result=null;
  String task=action + " route " + id;
  try {
    if ("start".equals(action)) {
      getEndpoint().getCamelContext().startRoute(id);
    }
 else     if ("stop".equals(action)) {
      getEndpoint().getCamelContext().stopRoute(id);
    }
 else     if ("suspend".equals(action)) {
      getEndpoint().getCamelContext().suspendRoute(id);
    }
 else     if ("resume".equals(action)) {
      getEndpoint().getCamelContext().resumeRoute(id);
    }
 else     if ("status".equals(action)) {
      ServiceStatus status=getEndpoint().getCamelContext().getRouteStatus(id);
      if (status != null) {
        result=status.name();
      }
    }
 else     if ("stats".equals(action)) {
      String name=getEndpoint().getCamelContext().getManagementName();
      if (name == null) {
        result="JMX is disabled, cannot get stats";
      }
 else {
        ObjectName on;
        String operation;
        if (id == null) {
          CamelContext camelContext=getEndpoint().getCamelContext();
          on=getEndpoint().getCamelContext().getManagementStrategy().getManagementNamingStrategy().getObjectNameForCamelContext(camelContext);
          operation="dumpRoutesStatsAsXml";
        }
 else {
          Route route=getEndpoint().getCamelContext().getRoute(id);
          on=getEndpoint().getCamelContext().getManagementStrategy().getManagementNamingStrategy().getObjectNameForRoute(route);
          operation="dumpRouteStatsAsXml";
        }
        if (on != null) {
          MBeanServer server=getEndpoint().getCamelContext().getManagementStrategy().getManagementAgent().getMBeanServer();
          result=server.invoke(on,operation,new Object[]{true,true},new String[]{"boolean","boolean"});
        }
 else {
          result="Cannot lookup route with id " + id;
        }
      }
    }
    if (result != null && !getEndpoint().isAsync()) {
      exchange.getIn().setBody(result);
    }
    logger.log("ControlBus task done [" + task + "] with result -> "+ (result != null ? result : "void"));
  }
 catch (  Exception e) {
    logger.log("Error executing ControlBus task [" + task + "]. This exception will be ignored.",e);
  }
}
