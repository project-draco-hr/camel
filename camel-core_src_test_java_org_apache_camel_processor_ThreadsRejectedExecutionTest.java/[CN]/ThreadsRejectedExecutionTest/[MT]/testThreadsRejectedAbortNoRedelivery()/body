{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      onException(Exception.class).maximumRedeliveries(3).handled(true).to("mock:error");
      from("seda:start").to("log:before").threads(1,1).maxPoolSize(1).maxQueueSize(2).rejectedPolicy(ThreadPoolRejectedPolicy.Abort).delay(1000).to("log:after").to("mock:result");
    }
  }
);
  context.start();
  NotifyBuilder notify=new NotifyBuilder(context).whenDone(10).create();
  getMockEndpoint("mock:error").expectedMessageCount(0);
  getMockEndpoint("mock:result").expectedMinimumMessageCount(2);
  for (int i=0; i < 10; i++) {
    template.sendBody("seda:start","Message " + i);
  }
  assertMockEndpointsSatisfied();
  assertTrue(notify.matchesMockWaitTime());
  int inflight=context.getInflightRepository().size();
  assertEquals(0,inflight);
}
