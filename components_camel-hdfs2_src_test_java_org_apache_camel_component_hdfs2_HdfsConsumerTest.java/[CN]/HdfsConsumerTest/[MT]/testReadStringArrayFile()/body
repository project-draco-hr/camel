{
  if (!canTest()) {
    return;
  }
  final Path file=new Path(new File("target/test/test-camel-string").getAbsolutePath());
  Configuration conf=new Configuration();
  FileSystem fs1=FileSystem.get(file.toUri(),conf);
  ArrayFile.Writer writer=new ArrayFile.Writer(conf,fs1,"target/test/test-camel-string1",Text.class,CompressionType.NONE,new Progressable(){
    @Override public void progress(){
    }
  }
);
  Text valueWritable=new Text();
  String value="CIAO!";
  valueWritable.set(value);
  writer.append(valueWritable);
  writer.close();
  MockEndpoint resultEndpoint=context.getEndpoint("mock:result",MockEndpoint.class);
  resultEndpoint.expectedMessageCount(1);
  context.addRoutes(new RouteBuilder(){
    public void configure(){
      from("hdfs2:///" + file.getParent().toUri() + "?fileSystemType=LOCAL&fileType=ARRAY_FILE&initialDelay=0").to("mock:result");
    }
  }
);
  context.start();
  resultEndpoint.assertIsSatisfied();
}
