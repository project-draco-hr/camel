{
  Properties properties=new Properties();
  addProperty(properties,"consumer.key","CAMEL_TWITTER_CONSUMER_KEY");
  addProperty(properties,"consumer.secret","CAMEL_TWITTER_CONSUMER_SECRET");
  addProperty(properties,"access.token","CAMEL_TWITTER_ACCESS_TOKEN");
  addProperty(properties,"access.token.secret","CAMEL_TWITTER_ACCESS_TOKE_SECRET");
  if (!properties.containsKey("consumer.key") || !properties.containsKey("consumer.secret") || !properties.containsKey("access.token")|| !properties.containsKey("access.token.secret")) {
    URL url=getClass().getResource("/test-options.properties");
    try (InputStream inStream=url.openStream()){
      properties.load(inStream);
    }
 catch (    IOException e) {
      e.printStackTrace();
      throw new IllegalAccessError("test-options.properties could not be found");
    }
  }
  consumerKey=properties.getProperty("consumer.key");
  consumerSecret=properties.getProperty("consumer.secret");
  accessToken=properties.getProperty("access.token");
  accessTokenSecret=properties.getProperty("access.token.secret");
  ObjectHelper.notNull(consumerKey,"consumer.key");
  ObjectHelper.notNull(consumerSecret,"consumer.secret");
  ObjectHelper.notNull(accessToken,"access.token");
  ObjectHelper.notNull(accessTokenSecret,"access.token.secret");
}
