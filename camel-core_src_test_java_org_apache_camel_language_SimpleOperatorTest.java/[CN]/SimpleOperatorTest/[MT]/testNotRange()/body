{
  assertExpression("${in.header.bar} not range 100..200",false);
  assertExpression("${in.header.bar} not range 200..300",true);
  assertExpression("${in.header.foo} not range 200..300",true);
  assertExpression("${bean:generator.generateId} not range 123..130",false);
  assertExpression("${bean:generator.generateId} not range 120..123",false);
  assertExpression("${bean:generator.generateId} not range 120..122",true);
  assertExpression("${bean:generator.generateId} not range 124..130",true);
  try {
    assertExpression("${in.header.foo} not range abc..200",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
  try {
    assertExpression("${in.header.foo} not range abc..",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
  try {
    assertExpression("${in.header.foo} not range 100 200",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
  try {
    assertExpression("${in.header.foo} not range 100.200",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
}
