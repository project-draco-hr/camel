{
  assertExpression("${in.header.bar} range 100..200",true);
  assertExpression("${in.header.bar} range 200..300",false);
  assertExpression("${in.header.foo} range 200..300",false);
  assertExpression("${bean:generator.generateId} range 123..130",true);
  assertExpression("${bean:generator.generateId} range 120..123",true);
  assertExpression("${bean:generator.generateId} range 120..122",false);
  assertExpression("${bean:generator.generateId} range 124..130",false);
  try {
    assertExpression("${in.header.foo} range abc..200",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
  try {
    assertExpression("${in.header.foo} range abc..",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
  try {
    assertExpression("${in.header.foo} range 100.200",false);
    fail("Should have thrown an exception");
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().startsWith("Syntax error"));
  }
  assertExpression("${in.header.bar} range 100..200 and ${in.header.foo} == abc",true);
  assertExpression("${in.header.bar} range 200..300 and ${in.header.foo} == abc",false);
  assertExpression("${in.header.bar} range 200..300 or ${in.header.foo} == abc",true);
  assertExpression("${in.header.bar} range 200..300 or ${in.header.foo} == def",false);
}
