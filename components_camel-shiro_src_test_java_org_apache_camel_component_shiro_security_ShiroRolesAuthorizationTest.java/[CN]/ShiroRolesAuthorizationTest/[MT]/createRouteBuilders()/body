{
  return new RouteBuilder[]{new RouteBuilder(){
    public void configure(){
      List<String> rolesList=new ArrayList<String>();
      rolesList.add("sec-level2");
      rolesList.add("sec-level3");
      final ShiroSecurityPolicy securityPolicy=new ShiroSecurityPolicy("src/test/resources/securityconfig.ini",passPhrase,true);
      securityPolicy.setRolesList(rolesList);
      onException(CamelAuthorizationException.class).to("mock:authorizationException");
      from("direct:secureEndpoint").policy(securityPolicy).to("log:incoming payload").to("mock:success");
    }
  }
,new RouteBuilder(){
    public void configure(){
      List<String> rolesList=new ArrayList<String>();
      rolesList.add("sec-level2");
      rolesList.add("sec-level3");
      final ShiroSecurityPolicy securityPolicy=new ShiroSecurityPolicy("src/test/resources/securityconfig.ini",passPhrase,true);
      securityPolicy.setRolesList(rolesList);
      securityPolicy.setAllRolesRequired(true);
      onException(CamelAuthorizationException.class).to("mock:authorizationException");
      from("direct:secureAllEndpoint").policy(securityPolicy).to("log:incoming payload").to("mock:success");
    }
  }
};
}
