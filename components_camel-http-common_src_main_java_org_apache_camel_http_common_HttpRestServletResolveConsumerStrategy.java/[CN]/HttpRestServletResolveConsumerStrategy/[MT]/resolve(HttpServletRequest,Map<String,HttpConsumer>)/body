{
  HttpConsumer answer=null;
  String path=request.getPathInfo();
  if (path == null) {
    return null;
  }
  String method=request.getMethod();
  if (method == null) {
    return null;
  }
  List<RestConsumerContextPathMatcher.ConsumerPath> paths=new ArrayList<RestConsumerContextPathMatcher.ConsumerPath>();
  for (  final Map.Entry<String,HttpConsumer> entry : consumers.entrySet()) {
    paths.add(new RestConsumerContextPathMatcher.ConsumerPath<HttpConsumer>(){
      @Override public String getRestrictMethod(){
        return entry.getValue().getEndpoint().getHttpMethodRestrict();
      }
      @Override public String getConsumerPath(){
        return entry.getValue().getPath();
      }
      @Override public HttpConsumer getConsumer(){
        return entry.getValue();
      }
    }
);
  }
  RestConsumerContextPathMatcher.ConsumerPath<HttpConsumer> best=RestConsumerContextPathMatcher.matchBestPath(method,path,paths);
  if (best != null) {
    answer=best.getConsumer();
  }
  if (answer == null) {
    answer=super.resolve(request,consumers);
  }
  return answer;
}
