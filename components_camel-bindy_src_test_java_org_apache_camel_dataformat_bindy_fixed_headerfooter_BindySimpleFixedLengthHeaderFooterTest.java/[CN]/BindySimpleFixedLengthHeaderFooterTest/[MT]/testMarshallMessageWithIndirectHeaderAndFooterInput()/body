{
  Order order=new Order();
  order.setOrderNr(10);
  order.setOrderType("BUY");
  order.setClientNr("A9");
  order.setFirstName("Pauline");
  order.setLastName("M");
  order.setAmount(new BigDecimal("2500.45"));
  order.setInstrumentCode("ISIN");
  order.setInstrumentNumber("XD12345678");
  order.setInstrumentType("Share");
  order.setCurrency("USD");
  Calendar calendar=new GregorianCalendar();
  calendar.set(2009,7,1,0,0,0);
  order.setOrderDate(calendar.getTime());
  List<Map<String,Object>> input=new ArrayList<Map<String,Object>>();
  Map<String,Object> bodyRow=new HashMap<String,Object>();
  bodyRow.put(Order.class.getName(),order);
  input.add(bodyRow);
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_HEADER,createHeaderRow());
  headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_FOOTER,createFooterRow());
  marshallResult.reset();
  marshallResult.expectedMessageCount(1);
  StringBuffer buff=new StringBuffer();
  buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER);
  marshallResult.expectedBodiesReceived(Arrays.asList(new String[]{buff.toString()}));
  template.sendBodyAndHeaders(URI_DIRECT_MARSHALL,input,headers);
  marshallResult.assertIsSatisfied();
}
