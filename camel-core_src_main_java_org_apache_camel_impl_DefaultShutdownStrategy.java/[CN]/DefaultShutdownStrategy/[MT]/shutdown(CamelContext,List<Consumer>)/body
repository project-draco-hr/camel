{
  long start=System.currentTimeMillis();
  if (timeout > 0) {
    LOG.info("Starting to graceful shutdown routes (timeout " + timeout + " "+ timeUnit.toString().toLowerCase()+ ")");
  }
 else {
    LOG.info("Starting to graceful shutdown routes (no timeout)");
  }
  Future future=getExecutorService().submit(new ShutdownTask(context,consumers));
  try {
    if (timeout > 0) {
      future.get(timeout,timeUnit);
    }
 else {
      future.get();
    }
  }
 catch (  TimeoutException e) {
    future.cancel(true);
    if (shutdownNowOnTimeout) {
      LOG.warn("Timeout occurred. Now forcing all routes to be shutdown now.");
      shutdownNow(consumers);
    }
 else {
      LOG.warn("Timeout occurred. Will ignore shutting down the remainder route input consumers.");
    }
  }
catch (  ExecutionException e) {
    throw ObjectHelper.wrapRuntimeCamelException(e.getCause());
  }
  long delta=System.currentTimeMillis() - start;
  long seconds=TimeUnit.SECONDS.convert(delta,TimeUnit.MILLISECONDS);
  LOG.info("Graceful shutdown of routes completed in " + seconds + " seconds");
}
