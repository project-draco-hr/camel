{
  if (LOG.isDebugEnabled()) {
    LOG.debug("There are " + routes.size() + " routes to shutdown");
  }
  List<ShutdownDeferredConsumer> deferredConsumers=new ArrayList<ShutdownDeferredConsumer>();
  for (  RouteStartupOrder order : routes) {
    ShutdownRoute shutdownRoute=order.getRoute().getRouteContext().getShutdownRoute();
    ShutdownRunningTask shutdownRunningTask=order.getRoute().getRouteContext().getShutdownRunningTask();
    if (LOG.isTraceEnabled()) {
      LOG.trace("Shutting down route: " + order.getRoute().getId() + " with options ["+ shutdownRoute+ ","+ shutdownRunningTask+ "]");
    }
    for (    Consumer consumer : order.getInputs()) {
      boolean suspend=false;
      boolean shutdown=shutdownRoute != ShutdownRoute.Defer;
      if (shutdown) {
        if (consumer instanceof ShutdownAware) {
          shutdown=!((ShutdownAware)consumer).deferShutdown(shutdownRunningTask);
        }
        if (shutdown && consumer instanceof SuspendableService) {
          suspend=true;
        }
      }
      if (suspend) {
        suspendNow((SuspendableService)consumer,consumer);
        deferredConsumers.add(new ShutdownDeferredConsumer(order.getRoute(),consumer));
        LOG.info("Route: " + order.getRoute().getId() + " suspended and shutdown deferred.");
      }
 else       if (shutdown) {
        shutdownNow(consumer);
        LOG.info("Route: " + order.getRoute().getId() + " shutdown complete.");
      }
 else {
        deferredConsumers.add(new ShutdownDeferredConsumer(order.getRoute(),consumer));
        LOG.info("Route: " + order.getRoute().getId() + " shutdown deferred.");
      }
    }
  }
  boolean done=false;
  while (!done) {
    int size=0;
    for (    RouteStartupOrder order : routes) {
      for (      Consumer consumer : order.getInputs()) {
        int inflight=context.getInflightRepository().size(consumer.getEndpoint());
        if (consumer instanceof ShutdownAware) {
          inflight+=((ShutdownAware)consumer).getPendingExchangesSize();
        }
        if (inflight > 0) {
          size+=inflight;
          if (LOG.isDebugEnabled()) {
            LOG.debug(inflight + " inflight and pending exchanges for consumer: " + consumer);
          }
        }
      }
    }
    if (size > 0) {
      try {
        LOG.info("Waiting as there are still " + size + " inflight and pending exchanges to complete before we can shutdown");
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
        LOG.warn("Interrupted while waiting during graceful shutdown, will force shutdown now.");
        Thread.currentThread().interrupt();
        break;
      }
    }
 else {
      done=true;
    }
  }
  for (  ShutdownDeferredConsumer deferred : deferredConsumers) {
    shutdownNow(deferred.getConsumer());
    LOG.info("Route: " + deferred.getRoute().getId() + " shutdown complete.");
  }
}
