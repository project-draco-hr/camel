{
  if (isPlatform("aix")) {
    return;
  }
  mbeanServer.setAttribute(on,new Attribute("FormatterShowBody",Boolean.TRUE));
  Boolean fsb=(Boolean)mbeanServer.getAttribute(on,"FormatterShowBody");
  assertEquals(true,fsb.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowBodyType",Boolean.TRUE));
  Boolean fsbt=(Boolean)mbeanServer.getAttribute(on,"FormatterShowBodyType");
  assertEquals(true,fsbt.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowOutBody",Boolean.TRUE));
  Boolean fsob=(Boolean)mbeanServer.getAttribute(on,"FormatterShowOutBody");
  assertEquals(true,fsob.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowOutBodyType",Boolean.TRUE));
  Boolean fsobt=(Boolean)mbeanServer.getAttribute(on,"FormatterShowOutBodyType");
  assertEquals(true,fsobt.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowBreadCrumb",Boolean.TRUE));
  Boolean fsbc=(Boolean)mbeanServer.getAttribute(on,"FormatterShowBreadCrumb");
  assertEquals(true,fsbc.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowExchangeId",Boolean.TRUE));
  Boolean fsei=(Boolean)mbeanServer.getAttribute(on,"FormatterShowExchangeId");
  assertEquals(true,fsei.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowShortExchangeId",Boolean.TRUE));
  Boolean fssei=(Boolean)mbeanServer.getAttribute(on,"FormatterShowShortExchangeId");
  assertEquals(true,fssei.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowHeaders",Boolean.TRUE));
  Boolean fsh=(Boolean)mbeanServer.getAttribute(on,"FormatterShowHeaders");
  assertEquals(true,fsh.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowOutHeaders",Boolean.TRUE));
  Boolean fsoh=(Boolean)mbeanServer.getAttribute(on,"FormatterShowOutHeaders");
  assertEquals(true,fsoh.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowProperties",Boolean.TRUE));
  Boolean fsp=(Boolean)mbeanServer.getAttribute(on,"FormatterShowProperties");
  assertEquals(true,fsp.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowNode",Boolean.TRUE));
  Boolean fsn=(Boolean)mbeanServer.getAttribute(on,"FormatterShowNode");
  assertEquals(true,fsn.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowRouteId",Boolean.FALSE));
  Boolean fsr=(Boolean)mbeanServer.getAttribute(on,"FormatterShowRouteId");
  assertEquals(false,fsr.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowExchangePattern",Boolean.TRUE));
  Boolean fsep=(Boolean)mbeanServer.getAttribute(on,"FormatterShowExchangePattern");
  assertEquals(true,fsep.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterShowException",Boolean.TRUE));
  Boolean fsex=(Boolean)mbeanServer.getAttribute(on,"FormatterShowException");
  assertEquals(true,fsex.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterBreadCrumbLength",100));
  Integer fbcl=(Integer)mbeanServer.getAttribute(on,"FormatterBreadCrumbLength");
  assertEquals(100,fbcl.intValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterNodeLength",50));
  Integer fnl=(Integer)mbeanServer.getAttribute(on,"FormatterNodeLength");
  assertEquals(50,fnl.intValue());
  mbeanServer.setAttribute(on,new Attribute("FormatterMaxChars",250));
  Integer fmc=(Integer)mbeanServer.getAttribute(on,"FormatterMaxChars");
  assertEquals(250,fmc.intValue());
}
