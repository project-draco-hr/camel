{
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=tracer,*"),null);
  assertEquals(1,set.size());
  ObjectName on=set.iterator().next();
  mbeanServer.setAttribute(on,new Attribute("Enabled",Boolean.TRUE));
  Boolean enabled=(Boolean)mbeanServer.getAttribute(on,"Enabled");
  assertEquals(true,enabled.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("DestinationUri",null));
  String duri=(String)mbeanServer.getAttribute(on,"DestinationUri");
  assertEquals(null,duri);
  mbeanServer.setAttribute(on,new Attribute("DestinationUri","mock://traced"));
  duri=(String)mbeanServer.getAttribute(on,"DestinationUri");
  assertEquals("mock://traced",duri);
  Boolean useJpa=(Boolean)mbeanServer.getAttribute(on,"UseJpa");
  assertEquals(false,useJpa.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("LogName","foo"));
  String ln=(String)mbeanServer.getAttribute(on,"LogName");
  assertEquals("foo",ln);
  mbeanServer.setAttribute(on,new Attribute("LogLevel","WARN"));
  String ll=(String)mbeanServer.getAttribute(on,"LogLevel");
  assertEquals(LoggingLevel.WARN.name(),ll);
  mbeanServer.setAttribute(on,new Attribute("LogStackTrace",Boolean.TRUE));
  Boolean lst=(Boolean)mbeanServer.getAttribute(on,"LogStackTrace");
  assertEquals(true,lst.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("TraceInterceptors",Boolean.TRUE));
  Boolean ti=(Boolean)mbeanServer.getAttribute(on,"TraceInterceptors");
  assertEquals(true,ti.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("TraceExceptions",Boolean.TRUE));
  Boolean te=(Boolean)mbeanServer.getAttribute(on,"TraceExceptions");
  assertEquals(true,te.booleanValue());
  mbeanServer.setAttribute(on,new Attribute("TraceOutExchanges",Boolean.TRUE));
  Boolean toe=(Boolean)mbeanServer.getAttribute(on,"TraceOutExchanges");
  assertEquals(true,toe.booleanValue());
  doAssertFormatter(mbeanServer,on);
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
}
