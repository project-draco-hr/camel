{
  assertEquals(getExpectedNumberOfRoutes(),context.getRoutes().size());
  assertEquals(2,context.getRestDefinitions().size());
  RestDefinition rest=context.getRestDefinitions().get(0);
  assertNotNull(rest);
  assertEquals("/say/hello",rest.getUri());
  assertEquals(1,rest.getVerbs().size());
  ToDefinition to=assertIsInstanceOf(ToDefinition.class,rest.getVerbs().get(0).getOutputs().get(0));
  assertEquals("mock:hello",to.getUri());
  rest=context.getRestDefinitions().get(1);
  assertNotNull(rest);
  assertEquals("/say/bye",rest.getUri());
  assertEquals(2,rest.getVerbs().size());
  assertEquals("application/json",rest.getVerbs().get(0).getConsumes());
  to=assertIsInstanceOf(ToDefinition.class,rest.getVerbs().get(0).getOutputs().get(0));
  assertEquals("mock:bye",to.getUri());
  getMockEndpoint("mock:update").expectedMessageCount(1);
  template.sendBody("seda:post-say-bye","I was here");
  assertMockEndpointsSatisfied();
  String out=template.requestBody("seda:get-say-hello","Me",String.class);
  assertEquals("Hello World",out);
  String out2=template.requestBody("seda:get-say-bye","Me",String.class);
  assertEquals("Bye World",out2);
}
