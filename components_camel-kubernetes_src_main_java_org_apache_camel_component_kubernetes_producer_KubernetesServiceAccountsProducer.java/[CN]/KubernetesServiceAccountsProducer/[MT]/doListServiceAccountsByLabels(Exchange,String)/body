{
  ServiceAccountList saList=null;
  Map<String,String> labels=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_SERVICE_ACCOUNTS_LABELS,Map.class);
  String namespaceName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,String.class);
  if (!ObjectHelper.isEmpty(namespaceName)) {
    ClientNonNamespaceOperation<ServiceAccount,ServiceAccountList,DoneableServiceAccount,ClientResource<ServiceAccount,DoneableServiceAccount>> serviceAccounts;
    serviceAccounts=getEndpoint().getKubernetesClient().serviceAccounts().inNamespace(namespaceName);
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      serviceAccounts.withLabel(entry.getKey(),entry.getValue());
    }
    saList=serviceAccounts.list();
  }
 else {
    ClientMixedOperation<ServiceAccount,ServiceAccountList,DoneableServiceAccount,ClientResource<ServiceAccount,DoneableServiceAccount>> serviceAccounts;
    serviceAccounts=getEndpoint().getKubernetesClient().serviceAccounts();
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      serviceAccounts.withLabel(entry.getKey(),entry.getValue());
    }
    saList=serviceAccounts.list();
  }
  exchange.getOut().setBody(saList.getItems());
}
