{
  ResourceQuotaList resList=null;
  Map<String,String> labels=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_RESOURCES_QUOTA_LABELS,Map.class);
  String namespaceName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,String.class);
  if (!ObjectHelper.isEmpty(namespaceName)) {
    ClientNonNamespaceOperation<KubernetesClient,ResourceQuota,ResourceQuotaList,DoneableResourceQuota,ClientResource<ResourceQuota,DoneableResourceQuota>> resQuota;
    resQuota=getEndpoint().getKubernetesClient().resourceQuotas().inNamespace(namespaceName);
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      resQuota.withLabel(entry.getKey(),entry.getValue());
    }
    resList=resQuota.list();
  }
 else {
    ClientOperation<KubernetesClient,ResourceQuota,ResourceQuotaList,DoneableResourceQuota,ClientResource<ResourceQuota,DoneableResourceQuota>> resQuota;
    resQuota=getEndpoint().getKubernetesClient().resourceQuotas();
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      resQuota.withLabel(entry.getKey(),entry.getValue());
    }
    resList=resQuota.list();
  }
  exchange.getOut().setBody(resList.getItems());
}
