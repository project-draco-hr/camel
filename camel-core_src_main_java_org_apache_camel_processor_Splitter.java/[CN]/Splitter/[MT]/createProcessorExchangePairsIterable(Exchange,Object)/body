{
  final Iterator iterator=ObjectHelper.createIterator(value);
  return new Iterable(){
    public Iterator iterator(){
      return new Iterator(){
        private int index;
        private boolean closed;
        public boolean hasNext(){
          if (closed) {
            return false;
          }
          boolean answer=iterator.hasNext();
          if (!answer) {
            closed=true;
            if (value instanceof Closeable) {
              IOHelper.close((Closeable)value,value.getClass().getName(),LOG);
            }
 else             if (value instanceof Scanner) {
              ((Scanner)value).close();
            }
          }
          return answer;
        }
        public Object next(){
          Object part=iterator.next();
          Exchange newExchange=exchange.copy();
          if (part instanceof Message) {
            newExchange.setIn((Message)part);
          }
 else {
            Message in=newExchange.getIn();
            in.setBody(part);
          }
          return createProcessorExchangePair(index++,getProcessors().iterator().next(),newExchange);
        }
        public void remove(){
          throw new UnsupportedOperationException("Remove is not supported by this iterator");
        }
      }
;
    }
  }
;
}
