{
  Processor processor=this.createChildProcessor(routeContext,true);
  Expression expression=getExpression().createExpression(routeContext);
  CamelInternalProcessor internal=new CamelInternalProcessor(processor);
  internal.addAdvice(new CamelInternalProcessor.UnitOfWorkProcessorAdvice(routeContext));
  ObjectHelper.notNull(config,"config",this);
  ObjectHelper.notNull(expression,"expression",this);
  boolean isReverse=config.getReverse() != null && config.getReverse();
  boolean isAllowDuplicates=config.getAllowDuplicates() != null && config.getAllowDuplicates();
  Resequencer resequencer=new Resequencer(routeContext.getCamelContext(),internal,expression,isAllowDuplicates,isReverse);
  resequencer.setBatchSize(config.getBatchSize());
  resequencer.setBatchTimeout(config.getBatchTimeout());
  resequencer.setReverse(isReverse);
  resequencer.setAllowDuplicates(isAllowDuplicates);
  if (config.getIgnoreInvalidExchanges() != null) {
    resequencer.setIgnoreInvalidExchanges(config.getIgnoreInvalidExchanges());
  }
  return resequencer;
}
