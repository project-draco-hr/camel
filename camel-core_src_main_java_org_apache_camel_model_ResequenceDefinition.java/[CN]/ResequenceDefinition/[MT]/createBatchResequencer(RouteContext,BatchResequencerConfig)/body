{
  Processor processor=this.createChildProcessor(routeContext,true);
  Expression expression=getExpression().createExpression(routeContext);
  String routeId=routeContext.getRoute().idOrCreate(routeContext.getCamelContext().getNodeIdFactory());
  CamelInternalProcessor internal=new CamelInternalProcessor(processor);
  internal.addTask(new CamelInternalProcessor.UnitOfWorkProcessorTask(routeId));
  ObjectHelper.notNull(config,"config",this);
  ObjectHelper.notNull(expression,"expression",this);
  Resequencer resequencer=new Resequencer(routeContext.getCamelContext(),internal,expression,config.isAllowDuplicates(),config.isReverse());
  resequencer.setBatchSize(config.getBatchSize());
  resequencer.setBatchTimeout(config.getBatchTimeout());
  if (config.getIgnoreInvalidExchanges() != null) {
    resequencer.setIgnoreInvalidExchanges(config.getIgnoreInvalidExchanges());
  }
  return resequencer;
}
