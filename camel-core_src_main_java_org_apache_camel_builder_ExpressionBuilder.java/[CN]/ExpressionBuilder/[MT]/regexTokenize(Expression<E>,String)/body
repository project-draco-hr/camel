{
  final Pattern pattern=Pattern.compile(regexTokenizer);
  return new Expression<E>(){
    public Object evaluate(    E exchange){
      List<String> answer=new ArrayList<String>();
      Object value=expression.evaluate(exchange);
      Scanner scanner=getScanner(expression,exchange,value);
      if (scanner != null) {
        scanner.useDelimiter(regexTokenizer);
        while (scanner.hasNext()) {
          answer.add(scanner.next());
        }
      }
      return answer;
    }
    @Override public String toString(){
      return "regexTokenize(" + expression + ", "+ pattern.pattern()+ ")";
    }
  }
;
}
