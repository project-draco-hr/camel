{
  return new ExpressionAdapter(){
    public Object evaluate(    Exchange exchange){
      String text=simpleExpression(name).evaluate(exchange,String.class);
      Class<?> type;
      try {
        type=exchange.getContext().getClassResolver().resolveMandatoryClass(text);
      }
 catch (      ClassNotFoundException e) {
        throw ObjectHelper.wrapCamelExecutionException(exchange,e);
      }
      Object body=exchange.getIn().getBody(type);
      if (body != null) {
        MethodCallExpression call=new MethodCallExpression(exchange,ognl);
        call.setInstance(body);
        return call.evaluate(exchange);
      }
 else {
        return null;
      }
    }
    @Override public String toString(){
      return "bodyOgnlAs[" + name + "]("+ ognl+ ")";
    }
  }
;
}
