{
  return new ExpressionAdapter(){
    @SuppressWarnings("unchecked") public Object evaluate(    Exchange exchange){
      Class type;
      try {
        type=exchange.getContext().getClassResolver().resolveMandatoryClass(name);
      }
 catch (      ClassNotFoundException e) {
        throw ObjectHelper.wrapCamelExecutionException(exchange,e);
      }
      try {
        return exchange.getIn().getMandatoryBody(type);
      }
 catch (      InvalidPayloadException e) {
        throw ObjectHelper.wrapCamelExecutionException(exchange,e);
      }
    }
    @Override public String toString(){
      return "mandatoryBodyAs[" + name + "]";
    }
  }
;
}
