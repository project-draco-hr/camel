{
  return new ExpressionAdapter(){
    public Object evaluate(    Exchange exchange){
      if (nullBodyAllowed) {
        if (exchange.getIn().getBody() == null) {
          return null;
        }
        BeanInvocation bi=exchange.getIn().getBody(BeanInvocation.class);
        if (bi != null && (bi.getArgs() == null || bi.getArgs().length == 0 || bi.getArgs()[0] == null)) {
          return null;
        }
      }
      try {
        return exchange.getIn().getMandatoryBody(type);
      }
 catch (      InvalidPayloadException e) {
        throw ObjectHelper.wrapCamelExecutionException(exchange,e);
      }
    }
    @Override public String toString(){
      return "mandatoryBodyAs[" + type.getName() + "]";
    }
  }
;
}
