{
  return new ExpressionAdapter(){
    public Object evaluate(    Exchange exchange){
      Date date;
      if ("now".equals(command)) {
        date=new Date();
      }
 else       if (command.startsWith("header.") || command.startsWith("in.header.")) {
        String key=command.substring(command.lastIndexOf('.') + 1);
        date=exchange.getIn().getHeader(key,Date.class);
        if (date == null) {
          throw new IllegalArgumentException("Cannot find java.util.Date object at command: " + command);
        }
      }
 else       if (command.startsWith("out.header.")) {
        String key=command.substring(command.lastIndexOf('.') + 1);
        date=exchange.getOut().getHeader(key,Date.class);
        if (date == null) {
          throw new IllegalArgumentException("Cannot find java.util.Date object at command: " + command);
        }
      }
 else       if ("file".equals(command)) {
        date=exchange.getIn().getHeader("CamelFileLastModified",Date.class);
        if (date == null) {
          throw new IllegalArgumentException("Cannot find CamelFileLastModified header at command: " + command);
        }
      }
 else {
        throw new IllegalArgumentException("Command not supported for dateExpression: " + command);
      }
      SimpleDateFormat df=new SimpleDateFormat(pattern);
      return df.format(date);
    }
    @Override public String toString(){
      return "date(" + command + ":"+ pattern+ ")";
    }
  }
;
}
