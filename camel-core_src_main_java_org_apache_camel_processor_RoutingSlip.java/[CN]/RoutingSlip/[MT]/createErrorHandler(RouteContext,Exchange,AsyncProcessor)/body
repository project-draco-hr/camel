{
  AsyncProcessor answer=processor;
  boolean tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class);
  if (!tryBlock && routeContext != null) {
    final PreparedErrorHandler key=new PreparedErrorHandler(routeContext,processor);
    answer=errorHandlers.get(key);
    if (answer != null) {
      log.trace("Using existing error handler for: {}",processor);
      return answer;
    }
    log.trace("Creating error handler for: {}",processor);
    ErrorHandlerFactory builder=routeContext.getRoute().getErrorHandlerBuilder();
    try {
      answer=(AsyncProcessor)builder.createErrorHandler(routeContext,processor);
      ServiceHelper.startServices(answer);
      errorHandlers.putIfAbsent(key,answer);
    }
 catch (    Exception e) {
      throw ObjectHelper.wrapRuntimeCamelException(e);
    }
  }
  return answer;
}
