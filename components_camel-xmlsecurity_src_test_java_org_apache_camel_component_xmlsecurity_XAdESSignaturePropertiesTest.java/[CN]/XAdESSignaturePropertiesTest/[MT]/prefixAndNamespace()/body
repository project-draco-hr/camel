{
  XmlSignerEndpoint endpoint=getSignerEndpoint();
  XAdESSignatureProperties props=(XAdESSignatureProperties)endpoint.getProperties();
  props.setPrefix("p");
  props.setNamespace(XAdESSignatureProperties.HTTP_URI_ETSI_ORG_01903_V1_1_1);
  props.setCommitmentTypeIdDescription(null);
  props.setCommitmentTypeIdDocumentationReferences(Collections.<String>emptyList());
  props.setCommitmentTypeIdQualifier(null);
  props.setDataObjectFormatIdentifierDescription(null);
  props.setDataObjectFormatIdentifierDocumentationReferences(Collections.<String>emptyList());
  props.setDataObjectFormatIdentifierQualifier(null);
  props.setSigPolicyIdDescription(null);
  props.setSigPolicyIdDocumentationReferences(Collections.<String>emptyList());
  props.setSigPolicyIdQualifier(null);
  props.setSigPolicyQualifiers(Collections.<String>emptyList());
  props.setSignerClaimedRoles(Collections.<String>emptyList());
  props.setCommitmentTypeQualifiers(Collections.<String>emptyList());
  Document doc=testEnveloping();
  Map<String,String> prefix2Namespace=new TreeMap<String,String>();
  prefix2Namespace.put("ds",XMLSignature.XMLNS);
  prefix2Namespace.put("etsi",XAdESSignatureProperties.HTTP_URI_ETSI_ORG_01903_V1_1_1);
  XPathExpression expr=getXpath("/ds:Signature/ds:Object/etsi:QualifyingProperties",prefix2Namespace);
  Object result=expr.evaluate(doc,XPathConstants.NODE);
  assertNotNull(result);
  Node node=(Node)result;
  assertEquals("p",node.getPrefix());
  assertEquals(XAdESSignatureProperties.HTTP_URI_ETSI_ORG_01903_V1_1_1,node.getNamespaceURI());
}
