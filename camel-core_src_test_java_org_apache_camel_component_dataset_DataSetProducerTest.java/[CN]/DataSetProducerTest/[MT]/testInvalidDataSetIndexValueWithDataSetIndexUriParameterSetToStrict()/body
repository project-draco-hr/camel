{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from(sourceUri).to(dataSetUriWithDataSetIndexSetToStrict).to(resultUri);
    }
  }
);
  context.start();
  long size=dataSet.getSize();
  MockEndpoint result=getMockEndpoint(resultUri);
  result.expectedMessageCount((int)size);
  result.allMessages().header(Exchange.DATASET_INDEX).isNotNull();
  for (long i=0; i < size; i++) {
    if (i == (size / 2)) {
      template.sendBodyAndHeader(sourceUri,dataSet.getDefaultBody(),Exchange.DATASET_INDEX,i + 10);
    }
 else {
      template.sendBodyAndHeader(sourceUri,dataSet.getDefaultBody(),Exchange.DATASET_INDEX,i);
    }
  }
  try {
    assertMockEndpointsSatisfied();
  }
 catch (  AssertionError assertionError) {
    String expectedErrorString=dataSetUriWithDataSetIndexSetToStrict + " Failed due to caught exception: " + AssertionError.class.getName()+ ": Header: "+ Exchange.DATASET_INDEX+ " does not match. Expected: "+ size / 2 + " but was: " + (size / 2 + 10) + " on Exchange";
    String actualErrorString=assertionError.getMessage();
    if (actualErrorString.startsWith(expectedErrorString)) {
      return;
    }
 else {
      throw assertionError;
    }
  }
  fail("AssertionError should have been generated");
}
