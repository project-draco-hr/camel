{
  if (ObjectHelper.isEmpty(href)) {
    throw new TransformerException("include href is empty");
  }
  LOG.trace("Resolving URI with href: {} and base: {}",href,base);
  String scheme=ResourceHelper.getScheme(href);
  if (scheme != null) {
    if ("file:".equals(scheme) || "classpath:".equals(scheme)) {
      href=FileUtil.compactPath(href);
    }
    LOG.debug("Resolving URI from {}: {}",scheme,href);
    InputStream is;
    try {
      is=ResourceHelper.resolveMandatoryResourceAsInputStream(resolver,href);
    }
 catch (    IOException e) {
      throw new TransformerException(e);
    }
    return new StreamSource(is);
  }
  if (href.equals(location)) {
    String path=baseScheme + href;
    return resolve(path,base);
  }
  String path=FileUtil.onlyPath(location);
  if (ObjectHelper.isEmpty(path)) {
    path=baseScheme + href;
    return resolve(path,base);
  }
 else {
    if (ResourceHelper.hasScheme(path)) {
      path=path + "/" + href;
    }
 else {
      path=baseScheme + path + "/"+ href;
    }
    return resolve(path,base);
  }
}
