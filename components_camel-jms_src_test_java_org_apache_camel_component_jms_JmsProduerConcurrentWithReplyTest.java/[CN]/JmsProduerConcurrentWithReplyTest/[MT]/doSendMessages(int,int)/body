{
  getMockEndpoint("mock:result").expectedMessageCount(files);
  getMockEndpoint("mock:result").expectsNoDuplicates(body());
  ExecutorService executor=Executors.newFixedThreadPool(poolSize);
  final List<Future<String>> futures=new ArrayList<Future<String>>();
  for (int i=0; i < files; i++) {
    final int index=i;
    Future<String> out=executor.submit(new Callable<String>(){
      public String call() throws Exception {
        return template.requestBody("direct:start","Message " + index,String.class);
      }
    }
);
    futures.add(out);
  }
  assertMockEndpointsSatisfied();
  for (int i=0; i < futures.size(); i++) {
    Object out=futures.get(i).get();
    assertEquals("Bye Message " + i,out);
  }
  executor.shutdownNow();
}
