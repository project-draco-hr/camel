{
  RSAPublicKey publicKey=(RSAPublicKey)keyPair.getPublic();
  byte[] sshRsa=ALGORITHM_TYPE.getBytes();
  byte[] eArray=publicKey.getPublicExponent().toByteArray();
  byte[] nArray=publicKey.getModulus().toByteArray();
  byte[] result=new byte[sshRsa.length + 4 + eArray.length+ 4+ nArray.length+ 4];
  int index=0;
  byte[] intAsByteArray=ByteBuffer.allocate(4).putInt(sshRsa.length).array();
  System.arraycopy(intAsByteArray,0,result,index,4);
  index+=4;
  System.arraycopy(sshRsa,0,result,index,sshRsa.length);
  index+=sshRsa.length;
  intAsByteArray=ByteBuffer.allocate(4).putInt(eArray.length).array();
  System.arraycopy(intAsByteArray,0,result,index,4);
  index+=4;
  System.arraycopy(eArray,0,result,index,eArray.length);
  index+=eArray.length;
  intAsByteArray=ByteBuffer.allocate(4).putInt(nArray.length).array();
  System.arraycopy(intAsByteArray,0,result,index,4);
  index+=4;
  System.arraycopy(nArray,0,result,index,nArray.length);
  return result;
}
