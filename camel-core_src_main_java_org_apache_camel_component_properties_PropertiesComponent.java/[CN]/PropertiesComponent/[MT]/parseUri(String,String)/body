{
  Properties prop=new Properties();
  if (null != initialProperties) {
    prop.putAll(initialProperties);
  }
  if (paths != null) {
    String[] locations=parseLocations(paths);
    CacheKey key=new CacheKey(locations);
    Properties locationsProp=cache ? cacheMap.get(key) : null;
    if (locationsProp == null) {
      locationsProp=propertiesResolver.resolveProperties(getCamelContext(),ignoreMissingLocation,locations);
      if (cache) {
        cacheMap.put(key,locationsProp);
      }
    }
    prop.putAll(locationsProp);
  }
  if (overrideProperties != null) {
    Properties override=new Properties();
    override.putAll(prop);
    override.putAll(overrideProperties);
    prop=override;
  }
  if (!uri.contains(prefixToken) && !uri.startsWith(prefixToken)) {
    uri=prefixToken + uri;
  }
  if (!uri.contains(suffixToken) && !uri.endsWith(suffixToken)) {
    uri=uri + suffixToken;
  }
  LOG.trace("Parsing uri {} with properties: {}",uri,prop);
  if (propertiesParser instanceof AugmentedPropertyNameAwarePropertiesParser) {
    return ((AugmentedPropertyNameAwarePropertiesParser)propertiesParser).parseUri(uri,prop,prefixToken,suffixToken,propertyPrefixResolved,propertySuffixResolved,fallbackToUnaugmentedProperty,disableDefaultValueResolution);
  }
 else {
    return propertiesParser.parseUri(uri,prop,prefixToken,suffixToken);
  }
}
