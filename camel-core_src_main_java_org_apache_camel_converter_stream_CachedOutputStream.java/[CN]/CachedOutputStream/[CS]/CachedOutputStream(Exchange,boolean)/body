{
  String bufferSize=exchange.getContext().getProperty(BUFFER_SIZE);
  String hold=exchange.getContext().getProperty(THRESHOLD);
  String dir=exchange.getContext().getProperty(TEMP_DIR);
  if (bufferSize != null) {
    this.bufferSize=exchange.getContext().getTypeConverter().convertTo(Integer.class,bufferSize);
  }
  if (hold != null) {
    this.threshold=exchange.getContext().getTypeConverter().convertTo(Long.class,hold);
  }
  if (dir != null) {
    this.outputDir=exchange.getContext().getTypeConverter().convertTo(File.class,dir);
  }
  this.cipherTransformation=exchange.getContext().getProperty(CIPHER_TRANSFORMATION);
  currentStream=new ByteArrayOutputStream(this.bufferSize);
  if (closedOnCompletion) {
    exchange.addOnCompletion(new SynchronizationAdapter(){
      @Override public void onDone(      Exchange exchange){
        try {
          if (fileInputStreamCache != null) {
            fileInputStreamCache.close();
          }
          close();
        }
 catch (        Exception e) {
          LOG.warn("Error deleting temporary cache file: " + tempFile,e);
        }
      }
      @Override public String toString(){
        return "OnCompletion[CachedOutputStream]";
      }
    }
);
  }
}
