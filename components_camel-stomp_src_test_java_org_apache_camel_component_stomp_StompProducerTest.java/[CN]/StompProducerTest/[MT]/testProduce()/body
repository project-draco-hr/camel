{
  if (!canTest()) {
    return;
  }
  context.addRoutes(createRouteBuilder());
  context.start();
  Stomp stomp=new Stomp("tcp://localhost:" + getPort());
  final BlockingConnection subscribeConnection=stomp.connectBlocking();
  StompFrame frame=new StompFrame(SUBSCRIBE);
  frame.addHeader(DESTINATION,StompFrame.encodeHeader("/queue/test"));
  frame.addHeader(ID,subscribeConnection.nextId());
  StompFrame response=subscribeConnection.request(frame);
  final CountDownLatch latch=new CountDownLatch(numberOfMessages);
  Thread thread=new Thread(new Runnable(){
    public void run(){
      for (int i=0; i < numberOfMessages; i++) {
        try {
          StompFrame frame=subscribeConnection.receive();
          frame.contentAsString().startsWith("test message ");
          latch.countDown();
        }
 catch (        Exception e) {
          e.printStackTrace();
          break;
        }
      }
    }
  }
);
  thread.start();
  Producer producer=context.getEndpoint("direct:foo").createProducer();
  for (int i=0; i < numberOfMessages; i++) {
    Exchange exchange=producer.createExchange();
    exchange.getIn().setBody(("test message " + i).getBytes("UTF-8"));
    producer.process(exchange);
  }
  latch.await(20,TimeUnit.SECONDS);
  assertTrue("Messages not consumed = " + latch.getCount(),latch.getCount() == 0);
}
