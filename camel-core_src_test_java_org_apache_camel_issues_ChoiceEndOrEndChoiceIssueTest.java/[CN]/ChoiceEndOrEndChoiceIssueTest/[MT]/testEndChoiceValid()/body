{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").choice().when(header("number").isEqualTo("one")).to("mock:one").when(header("number").isEqualTo("two")).to("mock:two").when(header("number").isEqualTo("three")).to("mock:three").end().to("mock:finally");
    }
  }
);
  context.start();
  getMockEndpoint("mock:one").expectedHeaderReceived("number","one");
  getMockEndpoint("mock:two").expectedHeaderReceived("number","two");
  getMockEndpoint("mock:three").expectedHeaderReceived("number","three");
  getMockEndpoint("mock:finally").expectedBodiesReceived("1","2","3");
  template.sendBodyAndHeader("direct:start","1","number","one");
  template.sendBodyAndHeader("direct:start","2","number","two");
  template.sendBodyAndHeader("direct:start","3","number","three");
  assertMockEndpointsSatisfied();
}
