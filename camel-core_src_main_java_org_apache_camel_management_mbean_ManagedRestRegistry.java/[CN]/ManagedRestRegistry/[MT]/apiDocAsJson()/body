{
  Endpoint restApiEndpoint=null;
  Endpoint restEndpoint=null;
  for (  Map.Entry<String,Endpoint> entry : getContext().getEndpointMap().entrySet()) {
    String uri=entry.getKey();
    if (uri.startsWith("rest-api:")) {
      restApiEndpoint=entry.getValue();
      break;
    }
 else     if (restEndpoint == null && uri.startsWith("rest:")) {
      restEndpoint=entry.getValue();
    }
  }
  if (restApiEndpoint == null && restEndpoint != null) {
    RestEndpoint rest=(RestEndpoint)restEndpoint;
    String componentName=rest.getComponentName();
    if (componentName != null) {
      RestConfiguration config=getContext().getRestConfiguration(componentName,true);
      String apiComponent=config.getApiComponent() != null ? config.getApiComponent() : RestApiEndpoint.DEFAULT_API_COMPONENT_NAME;
      String path=config.getApiContextPath() != null ? config.getApiContextPath() : "api-doc";
      restApiEndpoint=getContext().getEndpoint(String.format("rest-api:%s/%s?componentName=%s&apiComponentName=%s&contextIdPattern=#name#",path,getCamelId(),componentName,apiComponent));
    }
  }
  try {
    if (restApiEndpoint != null) {
      Producer producer=restApiEndpoint.createProducer();
      ServiceHelper.startService(producer);
      try {
        Exchange dummy=restApiEndpoint.createExchange();
        producer.process(dummy);
        String json=dummy.hasOut() ? dummy.getOut().getBody(String.class) : dummy.getIn().getBody(String.class);
        return json;
      }
  finally {
        ServiceHelper.stopService(producer);
      }
    }
  }
 catch (  Exception e) {
    throw ObjectHelper.wrapRuntimeCamelException(e);
  }
  return null;
}
