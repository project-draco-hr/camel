{
  SMPPSession session=createMock(SMPPSession.class);
  DataSm dataSm=createMock(DataSm.class);
  Exchange exchange=createMock(Exchange.class);
  OptionalParameter[] optionalParameters=new OptionalParameter[]{};
  expect(endpoint.createOnAcceptDataSm(dataSm,"1")).andReturn(exchange);
  processor.process(exchange);
  expect(exchange.getException()).andReturn(null);
  expect(dataSm.getOptionalParameters()).andReturn(optionalParameters);
  replay(endpoint,processor,exceptionHandler,session,dataSm,exchange);
  DataSmResult result=listener.onAcceptDataSm(dataSm,session);
  verify(endpoint,processor,exceptionHandler,session,dataSm,exchange);
  assertEquals("1",result.getMessageId());
  assertSame(optionalParameters,result.getOptionalParameters());
}
