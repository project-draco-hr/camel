{
  ByteSource encryptedToken;
  if (policy.isBase64()) {
    String base64=ExchangeHelper.getMandatoryHeader(exchange,ShiroConstants.SHIRO_SECURITY_TOKEN,String.class);
    byte[] bytes=Base64.decode(base64);
    encryptedToken=ByteSource.Util.bytes(bytes);
  }
 else {
    encryptedToken=ExchangeHelper.getMandatoryHeader(exchange,ShiroConstants.SHIRO_SECURITY_TOKEN,ByteSource.class);
  }
  ByteSource decryptedToken=policy.getCipherService().decrypt(encryptedToken.getBytes(),policy.getPassPhrase());
  ByteArrayInputStream byteArrayInputStream=new ByteArrayInputStream(decryptedToken.getBytes());
  ObjectInputStream objectInputStream=new ObjectInputStream(byteArrayInputStream);
  ShiroSecurityToken securityToken;
  try {
    securityToken=(ShiroSecurityToken)objectInputStream.readObject();
  }
  finally {
    IOHelper.close(objectInputStream,byteArrayInputStream);
  }
  Subject currentUser=SecurityUtils.getSubject();
  try {
    authenticateUser(currentUser,securityToken);
    authorizeUser(currentUser,exchange);
  }
  finally {
    if (policy.isAlwaysReauthenticate()) {
      currentUser.logout();
    }
  }
}
