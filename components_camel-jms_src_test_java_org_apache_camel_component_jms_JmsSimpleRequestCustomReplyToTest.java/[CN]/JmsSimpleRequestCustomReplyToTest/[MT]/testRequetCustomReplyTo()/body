{
  Thread sender=new Thread(new SendLateReply());
  sender.start();
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMessageCount(1);
  Exchange out=template.request("activemq:queue:hello",new Processor(){
    public void process(    Exchange exchange) throws Exception {
      exchange.setPattern(ExchangePattern.InOnly);
      exchange.getIn().setHeader("MyReplyQeueue","foo");
      exchange.getIn().setBody("Hello World");
    }
  }
);
  result.assertIsSatisfied();
  assertNotNull(out);
  assertNull(out.getOut(false));
  Endpoint end=context.getEndpoint(componentName + ":" + myReplyTo);
  final Consumer consumer=end.createConsumer(new Processor(){
    public void process(    Exchange exchange) throws Exception {
      assertEquals("Late reply",exchange.getIn().getBody());
      latch.countDown();
    }
  }
);
  latch=new CountDownLatch(1);
  consumer.start();
  latch.await();
  consumer.stop();
}
