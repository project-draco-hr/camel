{
  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("component",json,false);
  ComponentModel component=new ComponentModel();
  component.setScheme(getValue("scheme",rows));
  component.setSyntax(getValue("syntax",rows));
  component.setTitle(getValue("title",rows));
  component.setDescription(getValue("description",rows));
  component.setLabel(getValue("label",rows));
  component.setDeprecated(getValue("deprecated",rows));
  component.setConsumerOnly(getValue("consumerOnly",rows));
  component.setProducerOnly(getValue("producerOnly",rows));
  component.setJavaType(getValue("javaType",rows));
  component.setGroupId(getValue("groupId",rows));
  component.setArtifactId(getValue("artifactId",rows));
  component.setVersion(getValue("version",rows));
  rows=JSonSchemaHelper.parseJsonSchema("componentProperties",json,true);
  List<ComponentOptionModel> options=new ArrayList<ComponentOptionModel>();
  ComponentOptionModel option=new ComponentOptionModel();
  for (  Map<String,String> row : rows) {
    option.setKey(getValue("key",row));
    option.setKind(getValue("kind",row));
    option.setType(getValue("type",row));
    option.setJavaType(getValue("javaType",row));
    option.setDeprecated(getValue("javaType",row));
    option.setDescription(getValue("description",row));
    options.add(option);
  }
  component.setOptions(options);
  return component;
}
