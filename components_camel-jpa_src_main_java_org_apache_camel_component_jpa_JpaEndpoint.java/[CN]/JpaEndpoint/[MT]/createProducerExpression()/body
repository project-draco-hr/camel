{
  final Class<?> type=getEntityType();
  if (type == null) {
    return ExpressionBuilder.bodyExpression();
  }
 else {
    return new ExpressionAdapter(){
      public Object evaluate(      Exchange exchange){
        Object answer=null;
        try {
          answer=exchange.getIn().getBody(type);
        }
 catch (        NoTypeConversionAvailableException e) {
        }
        if (answer == null) {
          Object defaultValue=exchange.getIn().getBody();
          if (defaultValue != null) {
            throw new NoTypeConversionAvailableException(defaultValue,type);
          }
          answer=exchange.getContext().getInjector().newInstance(type);
        }
        return answer;
      }
    }
;
  }
}
