{
  final Class<?> type=getEntityType();
  if (type == null) {
    return ExpressionBuilder.bodyExpression();
  }
 else {
    return new ExpressionAdapter(){
      public Object evaluate(      Exchange exchange){
        exchange.getIn().setHeader(JpaConstants.JPA_TEMPLATE,getTemplate());
        Object answer=exchange.getIn().getBody(type);
        if (answer == null) {
          Object defaultValue=exchange.getIn().getBody();
          if (defaultValue != null) {
            throw new RuntimeCamelException(new NoTypeConversionAvailableException(defaultValue,type));
          }
          answer=exchange.getContext().getInjector().newInstance(type);
        }
        return answer;
      }
    }
;
  }
}
