{
  TEST_XML_WITH_XML_HEADER_ISO_8859_1_AS_BYTE_ARRAY_STREAM.reset();
  XMLStreamReader reader=null;
  XMLStreamWriter writer=null;
  ByteArrayOutputStream output=null;
  try {
    reader=context.getTypeConverter().mandatoryConvertTo(XMLStreamReader.class,TEST_XML_WITH_XML_HEADER_ISO_8859_1_AS_BYTE_ARRAY_STREAM);
    output=new ByteArrayOutputStream();
    Exchange exchange=new DefaultExchange(context);
    writer=context.getTypeConverter().mandatoryConvertTo(XMLStreamWriter.class,exchange,output);
    while (reader.hasNext()) {
      reader.next();
switch (reader.getEventType()) {
case XMLEvent.START_DOCUMENT:
        writer.writeStartDocument();
      break;
case XMLEvent.END_DOCUMENT:
    writer.writeEndDocument();
  break;
case XMLEvent.START_ELEMENT:
writer.writeStartElement(reader.getName().getLocalPart());
break;
case XMLEvent.CHARACTERS:
writer.writeCharacters(reader.getText());
break;
case XMLEvent.END_ELEMENT:
writer.writeEndElement();
break;
default :
break;
}
}
}
  finally {
if (reader != null) {
reader.close();
}
if (writer != null) {
writer.close();
}
}
assertNotNull(output);
String result=new String(output.toByteArray(),UTF_8.name());
assertEquals(TEST_XML,result);
}
