{
  super(endpoint,processor);
  ServerFactoryBean svrBean=endpoint.createServerFactoryBean();
  svrBean.setInvoker(new Invoker(){
    public Object invoke(    Exchange cxfExchange,    Object o){
      if (LOG.isTraceEnabled()) {
        LOG.trace("Received CXF Request: " + cxfExchange);
      }
      CxfEndpoint endpoint=(CxfEndpoint)getEndpoint();
      CxfBinding binding=endpoint.getCxfBinding();
      org.apache.camel.Exchange camelExchange=endpoint.createExchange();
      DataFormat dataFormat=endpoint.getDataFormat();
      camelExchange.setProperty(CxfConstants.DATA_FORMAT_PROPERTY,dataFormat);
      if (LOG.isTraceEnabled()) {
        LOG.trace("Set Exchange property: " + DataFormat.class.getName() + "="+ dataFormat);
      }
      binding.populateExchangeFromCxfRequest(cxfExchange,camelExchange);
      try {
        getProcessor().process(camelExchange);
      }
 catch (      Exception e) {
        throw new Fault(e);
      }
      if (camelExchange.isFailed()) {
        Throwable t=(Throwable)camelExchange.getFault().getBody();
        if (t instanceof Fault) {
          throw (Fault)t;
        }
 else         if (t == null) {
          t=camelExchange.getException();
        }
        throw new Fault(t);
      }
      if (camelExchange.getPattern().isOutCapable()) {
        binding.populateCxfResponseFromExchange(camelExchange,cxfExchange);
      }
      return null;
    }
  }
);
  server=svrBean.create();
}
