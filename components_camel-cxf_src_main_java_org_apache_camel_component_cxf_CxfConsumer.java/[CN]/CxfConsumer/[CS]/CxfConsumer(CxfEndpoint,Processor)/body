{
  super(endpoint,processor);
  ServerFactoryBean svrBean=endpoint.createServerFactoryBean();
  svrBean.setInvoker(new Invoker(){
    public Object invoke(    Exchange cxfExchange,    Object o){
      if (LOG.isTraceEnabled()) {
        LOG.trace("Received CXF Request: " + cxfExchange);
      }
      CxfEndpoint endpoint=(CxfEndpoint)getEndpoint();
      CxfBinding binding=endpoint.getCxfBinding();
      org.apache.camel.Exchange camelExchange=endpoint.createExchange();
      DataFormat dataFormat=endpoint.getDataFormat();
      BindingOperationInfo boi=cxfExchange.getBindingOperationInfo();
      if (dataFormat == DataFormat.PAYLOAD && boi.isUnwrapped()) {
        boi=boi.getWrappedOperation();
        cxfExchange.put(BindingOperationInfo.class,boi);
      }
      if (boi != null) {
        camelExchange.setProperty(BindingOperationInfo.class.getName(),boi);
        if (LOG.isTraceEnabled()) {
          LOG.trace("Set exchange property: BindingOperationInfo: " + boi);
        }
      }
      camelExchange.setProperty(CxfConstants.DATA_FORMAT_PROPERTY,dataFormat);
      if (LOG.isTraceEnabled()) {
        LOG.trace("Set Exchange property: " + DataFormat.class.getName() + "="+ dataFormat);
      }
      binding.populateExchangeFromCxfRequest(cxfExchange,camelExchange);
      Map<String,Object> context=new HashMap<String,Object>();
      binding.extractJaxWsContext(cxfExchange,context);
      try {
        getProcessor().process(camelExchange);
      }
 catch (      Exception e) {
        throw new Fault(e);
      }
      checkFailure(camelExchange);
      if (camelExchange.getPattern().isOutCapable()) {
        binding.populateCxfResponseFromExchange(camelExchange,cxfExchange);
      }
      checkFailure(camelExchange);
      binding.copyJaxWsContext(cxfExchange,context);
      return null;
    }
    private void checkFailure(    org.apache.camel.Exchange camelExchange) throws Fault {
      if (camelExchange.isFailed()) {
        Throwable t=(camelExchange.hasOut() && camelExchange.getOut().isFault()) ? (Throwable)camelExchange.getOut().getBody() : camelExchange.getException();
        throw (t instanceof Fault) ? (Fault)t : new Fault(t);
      }
    }
  }
);
  server=svrBean.create();
}
