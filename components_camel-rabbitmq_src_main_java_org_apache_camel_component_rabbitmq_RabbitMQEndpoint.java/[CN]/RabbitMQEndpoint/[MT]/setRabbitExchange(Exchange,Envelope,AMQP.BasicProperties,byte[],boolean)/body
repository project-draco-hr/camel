{
  Message message;
  if (out) {
    message=camelExchange.getOut();
  }
 else {
    if (camelExchange.getIn() != null) {
      message=camelExchange.getIn();
    }
 else {
      message=new DefaultMessage();
      camelExchange.setIn(message);
    }
  }
  if (envelope != null) {
    message.setHeader(RabbitMQConstants.ROUTING_KEY,envelope.getRoutingKey());
    message.setHeader(RabbitMQConstants.EXCHANGE_NAME,envelope.getExchange());
    message.setHeader(RabbitMQConstants.DELIVERY_TAG,envelope.getDeliveryTag());
  }
  Map<String,Object> headers=properties.getHeaders();
  if (headers != null) {
    for (    Map.Entry<String,Object> entry : headers.entrySet()) {
      if (entry.getValue() instanceof LongString) {
        message.setHeader(entry.getKey(),entry.getValue().toString());
      }
 else {
        message.setHeader(entry.getKey(),entry.getValue());
      }
    }
  }
  if (hasSerializeHeader(properties)) {
    Object messageBody=null;
    try (InputStream b=new ByteArrayInputStream(body);ObjectInputStream o=new ObjectInputStream(b)){
      messageBody=o.readObject();
    }
 catch (    IOException|ClassNotFoundException e) {
      LOG.warn("Could not deserialize the object");
    }
    if (messageBody instanceof Throwable) {
      LOG.debug("Reply was an Exception. Setting the Exception on the Exchange");
      camelExchange.setException((Throwable)messageBody);
    }
 else {
      message.setBody(messageBody);
    }
  }
 else {
    message.setBody(body);
  }
}
