{
  this.configuration=configuration;
  setAcceptGzipEncoding(webServiceMessageSender.isAcceptGzipEncoding());
  ReflectionHelper.doWithFields(HttpsUrlConnectionMessageSender.class,new FieldCallback(){
    @Override public void doWith(    Field field) throws IllegalArgumentException, IllegalAccessException {
      if (Modifier.isStatic(field.getModifiers())) {
        return;
      }
      String fieldName=field.getName();
      if ("logger".equals(fieldName) || "acceptGzipEncoding".equals(fieldName)) {
        return;
      }
      field.setAccessible(true);
      Object value=field.get(webServiceMessageSender);
      field.set(CamelHttpsUrlConnectionMessageSender.this,value);
      LOG.trace("Populated the field {} with the value {}",fieldName,value);
    }
  }
);
}
