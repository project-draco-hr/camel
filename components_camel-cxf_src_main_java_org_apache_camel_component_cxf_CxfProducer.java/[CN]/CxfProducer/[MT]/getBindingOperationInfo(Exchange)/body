{
  CxfEndpoint endpoint=(CxfEndpoint)this.getEndpoint();
  BindingOperationInfo answer=null;
  String lp=ex.getIn().getHeader(CxfConstants.OPERATION_NAME,String.class);
  if (lp == null) {
    LOG.debug("CxfProducer cannot find the {} from message header, trying with defaultOperationName",CxfConstants.OPERATION_NAME);
    lp=endpoint.getDefaultOperationName();
  }
  if (lp == null) {
    LOG.debug("CxfProducer cannot find the {} from message header and there is no DefaultOperationName setting, CxfProducer will pick up the first available operation.",CxfConstants.OPERATION_NAME);
    Collection<BindingOperationInfo> bois=client.getEndpoint().getEndpointInfo().getBinding().getOperations();
    Iterator<BindingOperationInfo> iter=bois.iterator();
    if (iter.hasNext()) {
      answer=iter.next();
    }
  }
 else {
    String ns=ex.getIn().getHeader(CxfConstants.OPERATION_NAMESPACE,String.class);
    if (ns == null) {
      ns=endpoint.getDefaultOperationNamespace();
    }
    if (ns == null) {
      ns=client.getEndpoint().getService().getName().getNamespaceURI();
      LOG.trace("Operation namespace not in header. Set it to: {}",ns);
    }
    QName qname=new QName(ns,lp);
    LOG.trace("Operation qname = {}",qname.toString());
    answer=client.getEndpoint().getEndpointInfo().getBinding().getOperation(qname);
    if (answer == null) {
      throw new IllegalArgumentException("Can't find the BindingOperationInfo with operation name " + qname + ". Please check the message headers of operationName and operationNamespace.");
    }
  }
  return answer;
}
