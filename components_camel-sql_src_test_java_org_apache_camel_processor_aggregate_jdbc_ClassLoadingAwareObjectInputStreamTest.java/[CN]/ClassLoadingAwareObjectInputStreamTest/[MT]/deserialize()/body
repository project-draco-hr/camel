{
  CamelContext context=new DefaultCamelContext();
  final DefaultExchange exchange=new DefaultExchange(context);
  final List<MyObject> objects=new ArrayList<>();
  final MyObject o=new MyObject("leb","hello".getBytes());
  objects.add(o);
  exchange.getIn().setBody(objects);
  final DefaultExchangeHolder deh=DefaultExchangeHolder.marshal(exchange);
  final ByteArrayOutputStream baos=new ByteArrayOutputStream();
  final ObjectOutputStream oos=new ObjectOutputStream(baos);
  oos.writeObject(deh);
  oos.flush();
  final byte[] serialized=baos.toByteArray();
  final ObjectInputStream bis=new ClassLoadingAwareObjectInputStream(context,new ByteArrayInputStream(serialized));
  final DefaultExchangeHolder deserialized=(DefaultExchangeHolder)bis.readObject();
  final DefaultExchange exchange2=new DefaultExchange(context);
  DefaultExchangeHolder.unmarshal(exchange2,deserialized);
  List<MyObject> receivedObjects=exchange2.getIn().getBody(List.class);
  assertEquals(1,receivedObjects.size());
  assertEquals(o,receivedObjects.get(0));
}
