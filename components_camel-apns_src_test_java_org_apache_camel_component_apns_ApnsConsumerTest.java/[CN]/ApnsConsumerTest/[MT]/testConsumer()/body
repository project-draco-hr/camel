{
  byte[] deviceTokenBytes=ApnsUtils.createRandomDeviceTokenBytes();
  String deviceToken=ApnsUtils.encodeHexToken(deviceTokenBytes);
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  mock.message(0).body().isInstanceOf(InactiveDevice.class);
  byte[] feedBackBytes=ApnsUtils.generateFeedbackBytes(deviceTokenBytes);
  server.getToSend().write(feedBackBytes);
  Thread.sleep(1000);
  assertMockEndpointsSatisfied();
  InactiveDevice inactiveDevice=(InactiveDevice)mock.getExchanges().get(0).getIn().getBody();
  assertNotNull(inactiveDevice);
  assertNotNull(inactiveDevice.getDate());
  assertNotNull(inactiveDevice.getDeviceToken());
  assertEquals(deviceToken,inactiveDevice.getDeviceToken());
}
