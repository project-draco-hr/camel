{
  this.camelContext=camelContext;
  this.type=type;
  this.strategy=strategy;
  if (explicitMethod != null) {
    if (!isValidMethod(type,explicitMethod)) {
      throw new IllegalArgumentException("The method " + explicitMethod + " is not valid (for example the method must be public)");
    }
    introspect(getType(),explicitMethod);
  }
 else {
    introspect(getType());
  }
  MethodInfo method=null;
  if (operations.size() == 1) {
    List<MethodInfo> methods=operations.values().iterator().next();
    if (methods.size() == 1) {
      method=methods.get(0);
    }
  }
  defaultMethod=method;
  operations=Collections.unmodifiableMap(operations);
  operationsWithBody=Collections.unmodifiableList(operationsWithBody);
  operationsWithNoBody=Collections.unmodifiableList(operationsWithNoBody);
  operationsWithCustomAnnotation=Collections.unmodifiableList(operationsWithCustomAnnotation);
  operationsWithHandlerAnnotation=Collections.unmodifiableList(operationsWithHandlerAnnotation);
  methodMap=Collections.unmodifiableMap(methodMap);
}
