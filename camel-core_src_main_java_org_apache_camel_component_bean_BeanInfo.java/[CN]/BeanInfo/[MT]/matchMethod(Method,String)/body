{
  if (methodName == null) {
    return true;
  }
  if (methodName.contains("(") && !methodName.endsWith(")")) {
    throw new IllegalArgumentException("Name must have both starting and ending parenthesis, was: " + methodName);
  }
  String name=methodName;
  if (name.contains("(")) {
    name=ObjectHelper.before(name,"(");
  }
  if (!name.equals(method.getName())) {
    return false;
  }
  String types=ObjectHelper.between(methodName,"(",")");
  if (types != null) {
    Iterator it=ObjectHelper.createIterator(types);
    for (int i=0; i < method.getParameterTypes().length; i++) {
      if (it.hasNext()) {
        String qualifyType=(String)it.next();
        if (ObjectHelper.isEmpty(qualifyType)) {
          continue;
        }
        qualifyType=qualifyType.trim();
        if ("*".equals(qualifyType)) {
          continue;
        }
        if (qualifyType.startsWith("'") || qualifyType.startsWith("\"")) {
          continue;
        }
        Class<?> qualifyClass=getCamelContext().getClassResolver().resolveClass(qualifyType);
        if (qualifyClass != null) {
          Class<?> parameterClass=method.getParameterTypes()[i];
          if (!parameterClass.isAssignableFrom(qualifyClass)) {
            return false;
          }
        }
        if (qualifyType.equals(method.getParameterTypes()[i].getSimpleName())) {
          continue;
        }
      }
 else {
        return false;
      }
    }
    if (it.hasNext()) {
      return false;
    }
  }
  return true;
}
