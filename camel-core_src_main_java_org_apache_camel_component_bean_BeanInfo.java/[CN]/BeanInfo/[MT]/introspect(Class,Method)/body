{
  if (LOG.isTraceEnabled()) {
    LOG.trace("Introspecting class: " + clazz + ", method: "+ method);
  }
  String opName=method.getName();
  MethodInfo methodInfo=createMethodInfo(clazz,method);
  MethodInfo existingMethodInfo=overridesExistingMethod(methodInfo);
  if (existingMethodInfo != null) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("This method is already overriden in a subclass, so the method from the sub class is prefered: " + existingMethodInfo);
    }
    return existingMethodInfo;
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Adding operation: " + opName + " for method: "+ methodInfo);
  }
  operations.put(opName,methodInfo);
  if (methodInfo.hasBodyParameter()) {
    operationsWithBody.add(methodInfo);
  }
  if (methodInfo.isHasCustomAnnotation() && !methodInfo.hasBodyParameter()) {
    operationsWithCustomAnnotation.add(methodInfo);
  }
  methodMap.put(method,methodInfo);
  return methodInfo;
}
