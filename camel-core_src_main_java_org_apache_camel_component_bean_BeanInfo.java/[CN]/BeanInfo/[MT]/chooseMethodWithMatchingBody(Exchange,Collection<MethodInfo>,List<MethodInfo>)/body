{
  Message in=exchange.getIn();
  Object body=in.getBody();
  if (body != null) {
    Class bodyType=body.getClass();
    if (LOG.isTraceEnabled()) {
      LOG.trace("Matching for method with a single parameter that matches type: {}",bodyType.getCanonicalName());
    }
    List<MethodInfo> possibles=new ArrayList<MethodInfo>();
    List<MethodInfo> possiblesWithException=new ArrayList<MethodInfo>();
    for (    MethodInfo methodInfo : operationList) {
      boolean out=exchange.getPattern().isOutCapable();
      if (out && methodInfo.isReturnTypeVoid()) {
        continue;
      }
      if (methodInfo.bodyParameterMatches(bodyType)) {
        LOG.trace("Found a possible method: {}",methodInfo);
        if (methodInfo.hasExceptionParameter()) {
          possiblesWithException.add(methodInfo);
        }
 else {
          possibles.add(methodInfo);
        }
      }
    }
    return chooseBestPossibleMethodInfo(exchange,operationList,body,possibles,possiblesWithException,operationsWithCustomAnnotation);
  }
  return null;
}
