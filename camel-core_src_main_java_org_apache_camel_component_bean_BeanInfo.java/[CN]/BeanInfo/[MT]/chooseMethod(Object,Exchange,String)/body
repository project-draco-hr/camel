{
  final List<MethodInfo> localOperationsWithBody=new ArrayList<MethodInfo>(operationsWithBody);
  final List<MethodInfo> localOperationsWithCustomAnnotation=new ArrayList<MethodInfo>(operationsWithCustomAnnotation);
  final List<MethodInfo> localOperationsWithHandlerAnnotation=new ArrayList<MethodInfo>(operationsWithHandlerAnnotation);
  if (name != null) {
    removeNonMatchingMethods(localOperationsWithHandlerAnnotation,name);
    removeNonMatchingMethods(localOperationsWithCustomAnnotation,name);
    removeNonMatchingMethods(localOperationsWithBody,name);
  }
 else {
    removeAllSetterOrGetterMethods(localOperationsWithHandlerAnnotation);
    removeAllSetterOrGetterMethods(localOperationsWithCustomAnnotation);
    removeAllSetterOrGetterMethods(localOperationsWithBody);
  }
  if (localOperationsWithHandlerAnnotation.size() > 1) {
    throw new AmbiguousMethodCallException(exchange,localOperationsWithHandlerAnnotation);
  }
  if (localOperationsWithHandlerAnnotation.size() == 1) {
    return localOperationsWithHandlerAnnotation.get(0);
  }
 else   if (localOperationsWithCustomAnnotation.size() == 1) {
    return localOperationsWithCustomAnnotation.get(0);
  }
 else   if (localOperationsWithBody.size() == 1) {
    return localOperationsWithBody.get(0);
  }
  Collection<MethodInfo> possibleOperations=new ArrayList<MethodInfo>();
  possibleOperations.addAll(localOperationsWithBody);
  possibleOperations.addAll(localOperationsWithCustomAnnotation);
  if (!possibleOperations.isEmpty()) {
    MethodInfo answer=chooseMethodWithMatchingBody(exchange,possibleOperations,localOperationsWithCustomAnnotation);
    if (answer == null) {
      throw new AmbiguousMethodCallException(exchange,possibleOperations);
    }
 else {
      return answer;
    }
  }
  return null;
}
