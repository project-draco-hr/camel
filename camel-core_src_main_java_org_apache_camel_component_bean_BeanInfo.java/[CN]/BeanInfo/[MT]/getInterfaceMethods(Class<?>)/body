{
  final List<Method> answer=new ArrayList<Method>();
  while (clazz != null && !clazz.equals(Object.class)) {
    for (    Class<?> interfaceClazz : clazz.getInterfaces()) {
      for (      Method interfaceMethod : interfaceClazz.getDeclaredMethods()) {
        if (Modifier.isPublic(interfaceMethod.getModifiers())) {
          answer.add(interfaceMethod);
        }
      }
    }
    clazz=clazz.getSuperclass();
  }
  return answer;
}
