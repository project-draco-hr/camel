{
  if (annotation instanceof Property) {
    Property propertyAnnotation=(Property)annotation;
    return ExpressionBuilder.propertyExpression(propertyAnnotation.name());
  }
 else   if (annotation instanceof Header) {
    Header headerAnnotation=(Header)annotation;
    return ExpressionBuilder.headerExpression(headerAnnotation.name());
  }
 else   if (annotation instanceof Body) {
    Body content=(Body)annotation;
    return ExpressionBuilder.bodyExpression(parameterType);
  }
 else {
    LanguageAnnotation languageAnnotation=annotation.annotationType().getAnnotation(LanguageAnnotation.class);
    if (languageAnnotation != null) {
      Class<?> type=languageAnnotation.factory();
      Object object=camelContext.getInjector().newInstance(type);
      if (object instanceof AnnotationExpressionFactory) {
        AnnotationExpressionFactory expressionFactory=(AnnotationExpressionFactory)object;
        return expressionFactory.createExpression(camelContext,annotation,languageAnnotation,parameterType);
      }
 else {
        LOG.error("Ignoring bad annotation: " + languageAnnotation + "on method: "+ method+ " which declares a factory: "+ type.getName()+ " which does not implement "+ AnnotationExpressionFactory.class.getName());
      }
    }
  }
  return null;
}
