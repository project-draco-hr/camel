{
  String testMessage="MSH|^~\\&|ADT|EPIC|JCAPS|CC|20160902123950|RISTECH|ADT^A08|00001|D|2.3|||||||" + '\r' + '\n';
  addTestRoute(false);
  result.expectedMessageCount(1);
  mllpClient.connect();
  mllpClient.sendMessageAndWaitForAcknowledgement(testMessage,10000);
  assertMockEndpointsSatisfied(10,TimeUnit.SECONDS);
  Message message=result.getExchanges().get(0).getIn();
  assertNotNull("Should have header" + MllpConstants.MLLP_LOCAL_ADDRESS,message.getHeader(MllpConstants.MLLP_LOCAL_ADDRESS));
  assertNotNull("Should have header" + MllpConstants.MLLP_REMOTE_ADDRESS,message.getHeader(MllpConstants.MLLP_REMOTE_ADDRESS));
  assertNull("Should NOT have header" + MllpConstants.MLLP_SENDING_APPLICATION,message.getHeader(MllpConstants.MLLP_SENDING_APPLICATION));
  assertNull("Should NOT have header" + MllpConstants.MLLP_SENDING_FACILITY,message.getHeader(MllpConstants.MLLP_SENDING_FACILITY));
  assertNull("Should NOT have header" + MllpConstants.MLLP_RECEIVING_APPLICATION,message.getHeader(MllpConstants.MLLP_RECEIVING_APPLICATION));
  assertNull("Should NOT have header" + MllpConstants.MLLP_TIMESTAMP,message.getHeader(MllpConstants.MLLP_TIMESTAMP));
  assertNull("Should NOT have header" + MllpConstants.MLLP_SECURITY,message.getHeader(MllpConstants.MLLP_SECURITY));
  assertNull("Should NOT have header" + MllpConstants.MLLP_MESSAGE_TYPE,message.getHeader(MllpConstants.MLLP_MESSAGE_TYPE));
  assertNull("Should NOT have header" + MllpConstants.MLLP_EVENT_TYPE,message.getHeader(MllpConstants.MLLP_EVENT_TYPE));
  assertNull("Should NOT have header" + MllpConstants.MLLP_MESSAGE_CONTROL,message.getHeader(MllpConstants.MLLP_MESSAGE_CONTROL));
  assertNull("Should NOT have header" + MllpConstants.MLLP_PROCESSING_ID,message.getHeader(MllpConstants.MLLP_PROCESSING_ID));
  assertNull("Should NOT have header" + MllpConstants.MLLP_VERSION_ID,message.getHeader(MllpConstants.MLLP_VERSION_ID));
}
