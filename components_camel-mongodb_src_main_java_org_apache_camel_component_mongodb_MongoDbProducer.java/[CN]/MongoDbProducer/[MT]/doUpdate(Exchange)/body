{
  MongoCollection<BasicDBObject> dbCol=calculateCollection(exchange);
  List<BasicDBObject> saveObj=exchange.getIn().getMandatoryBody((Class<List<BasicDBObject>>)(Class<?>)List.class);
  if (saveObj.size() != 2) {
    throw new CamelMongoDbException("MongoDB operation = insert, failed because body is not a List of DBObject objects with size = 2");
  }
  BasicDBObject updateCriteria=saveObj.get(0);
  BasicDBObject objNew=saveObj.get(1);
  Boolean multi=exchange.getIn().getHeader(MongoDbConstants.MULTIUPDATE,Boolean.class);
  Boolean upsert=exchange.getIn().getHeader(MongoDbConstants.UPSERT,Boolean.class);
  UpdateResult result;
  if (multi == null && upsert == null) {
    result=dbCol.updateOne(updateCriteria,objNew);
  }
 else   if (multi == null) {
    UpdateOptions options=new UpdateOptions().upsert(true);
    result=dbCol.updateOne(updateCriteria,objNew,options);
  }
 else   if (upsert == null) {
    result=dbCol.updateMany(updateCriteria,objNew);
  }
 else {
    UpdateOptions options=new UpdateOptions().upsert(true);
    result=dbCol.updateOne(updateCriteria,objNew,options);
  }
  copyHeaders(exchange);
  moveBodyToOutIfResultIsReturnedAsHeader(exchange,MongoDbOperation.update);
  processAndTransferResult(result,exchange,MongoDbOperation.update);
}
