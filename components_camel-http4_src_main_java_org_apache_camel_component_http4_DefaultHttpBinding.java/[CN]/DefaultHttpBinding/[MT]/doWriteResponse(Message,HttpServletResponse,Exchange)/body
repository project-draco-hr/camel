{
  if (message.getHeader(Exchange.HTTP_RESPONSE_CODE) != null) {
    int code=message.getHeader(Exchange.HTTP_RESPONSE_CODE,Integer.class);
    response.setStatus(code);
  }
  String contentType=MessageHelper.getContentType(message);
  if (MessageHelper.getContentType(message) != null) {
    response.setContentType(contentType);
  }
  for (  Map.Entry<String,Object> entry : message.getHeaders().entrySet()) {
    String key=entry.getKey();
    Object value=entry.getValue();
    final Iterator it=ObjectHelper.createIterator(value,null);
    while (it.hasNext()) {
      String headerValue=exchange.getContext().getTypeConverter().convertTo(String.class,it.next());
      if (headerValue != null && headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(key,headerValue,exchange)) {
        response.addHeader(key,headerValue);
      }
    }
  }
  if (message.getBody() != null) {
    if (GZIPHelper.isGzip(message)) {
      doWriteGZIPResponse(message,response,exchange);
    }
 else {
      doWriteDirectResponse(message,response,exchange);
    }
  }
}
