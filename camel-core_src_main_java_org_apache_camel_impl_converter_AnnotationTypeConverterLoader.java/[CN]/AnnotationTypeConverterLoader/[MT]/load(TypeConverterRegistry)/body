{
  String[] packageNames;
  LOG.trace("Searching for {} services",META_INF_SERVICES);
  try {
    packageNames=findPackageNames();
    if (packageNames == null || packageNames.length == 0) {
      throw new TypeConverterLoaderException("Cannot find package names to be used for classpath scanning for annotated type converters.");
    }
  }
 catch (  Exception e) {
    throw new TypeConverterLoaderException("Cannot find package names to be used for classpath scanning for annotated type converters.",e);
  }
  if (packageNames.length == 1 && "org.apache.camel.core".equals(packageNames[0])) {
    LOG.debug("No additional package names found in classpath for annotated type converters.");
    return;
  }
  packageNames=filterUnwantedPackage("org.apache.camel.core",packageNames);
  Set<Class<?>> classes=new HashSet<Class<?>>();
  packageNames=filterPackageNamesOnly(resolver,packageNames,classes);
  if (!classes.isEmpty()) {
    LOG.debug("Loaded " + classes.size() + " @Converter classes");
  }
  if (packageNames != null && packageNames.length > 0) {
    LOG.trace("Found converter packages to scan: {}",packageNames);
    Set<Class<?>> scannedClasses=resolver.findAnnotated(Converter.class,packageNames);
    if (scannedClasses.isEmpty()) {
      throw new TypeConverterLoaderException("Cannot find any type converter classes from the following packages: " + Arrays.asList(packageNames));
    }
    LOG.debug("Found " + packageNames.length + " packages with "+ scannedClasses.size()+ " @Converter classes to load");
    classes.addAll(scannedClasses);
  }
  for (  Class<?> type : classes) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Loading converter class: {}",ObjectHelper.name(type));
    }
    loadConverterMethods(registry,type);
  }
  visitedClasses.clear();
  visitedURIs.clear();
}
