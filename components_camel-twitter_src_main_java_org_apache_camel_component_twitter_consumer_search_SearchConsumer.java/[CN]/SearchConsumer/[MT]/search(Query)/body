{
  Integer numberOfPages=1;
  if (ObjectHelper.isNotEmpty(te.getProperties().getLang())) {
    query.setLang(te.getProperties().getLang());
  }
  if (ObjectHelper.isNotEmpty(te.getProperties().getCount())) {
    query.setCount(te.getProperties().getCount());
  }
  if (ObjectHelper.isNotEmpty(te.getProperties().getNumberOfPages())) {
    numberOfPages=te.getProperties().getNumberOfPages();
  }
  if (ObjectHelper.isNotEmpty(te.getProperties().getLatitude()) && ObjectHelper.isNotEmpty(te.getProperties().getLongitude()) && ObjectHelper.isNotEmpty(te.getProperties().getRadius())) {
    GeoLocation location=new GeoLocation(te.getProperties().getLatitude(),te.getProperties().getLongitude());
    query.setGeoCode(location,te.getProperties().getRadius(),Unit.valueOf(te.getProperties().getDistanceMetric()));
    LOG.debug("Searching with additional geolocation parameters.");
  }
  LOG.debug("Searching with {} pages.",numberOfPages);
  Twitter twitter=te.getProperties().getTwitter();
  QueryResult qr=twitter.search(query);
  List<Status> tweets=qr.getTweets();
  for (int i=1; i < numberOfPages; i++) {
    if (!qr.hasNext()) {
      break;
    }
    qr=twitter.search(qr.nextQuery());
    tweets.addAll(qr.getTweets());
  }
  if (te.getProperties().isFilterOld()) {
    for (    Status t : tweets) {
      checkLastId(t.getId());
    }
  }
  return tweets;
}
