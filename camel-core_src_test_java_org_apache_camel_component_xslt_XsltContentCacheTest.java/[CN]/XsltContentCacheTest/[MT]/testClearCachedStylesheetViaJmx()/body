{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedBodiesReceived("<?xml version=\"1.0\" encoding=\"UTF-8\"?><goodbye>world!</goodbye>");
  template.sendBody("direct:b","<hello>world!</hello>");
  mock.assertIsSatisfied();
  template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/xslt?fileExist=Override",NEW_XSL,Exchange.FILE_NAME,"hello.xsl");
  mock.reset();
  mock.expectedBodiesReceived("<?xml version=\"1.0\" encoding=\"UTF-8\"?><goodbye>world!</goodbye>");
  template.sendBody("direct:b","<hello>world!</hello>");
  mock.assertIsSatisfied();
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  Set<ObjectName> objNameSet=mbeanServer.queryNames(new ObjectName("org.apache.camel:type=endpoints,name=\"xslt:*contentCache=true*\",*"),null);
  ObjectName managedObjName=new ArrayList<ObjectName>(objNameSet).get(0);
  mbeanServer.invoke(managedObjName,"clearCachedStylesheet",null,null);
  template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/xslt?fileExist=Override",NEW_XSL,Exchange.FILE_NAME,"hello.xsl");
  mock.reset();
  mock.expectedBodiesReceived("<?xml version=\"1.0\" encoding=\"UTF-8\"?><goodnight>world!</goodnight>");
  template.sendBody("direct:b","<hello>world!</hello>");
  mock.assertIsSatisfied();
}
