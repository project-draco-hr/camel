{
  if (isPlatform("aix")) {
    return;
  }
  getMockEndpoint("mock:result").expectedMessageCount(7);
  template.sendBody("direct:start","<foo>Camel &gt; Donkey</foo>");
  template.sendBody("direct:start","Camel > Donkey");
  template.sendBodyAndHeader("direct:start","<foo>Camel &gt; Donkey</foo>","name","Me & You");
  template.sendBodyAndHeader("direct:start","<foo>Camel &gt; Donkey</foo>","title","<title>Me &amp; You</title>");
  template.sendBodyAndHeader("direct:start","Camel > Donkey","name","Me & You");
  template.sendBodyAndHeader("direct:start",123,"user",true);
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put("user",false);
  headers.put("uid",123);
  headers.put("title","Camel rocks");
  template.sendBodyAndHeaders("direct:start","<animal><name>Donkey</name><age>17</age></animal>",headers);
  assertMockEndpointsSatisfied();
  List<Exchange> exchanges=getMockEndpoint("mock:result").getReceivedExchanges();
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=endpoints,name=\"mock://result\"");
  String out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{0,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(0).getExchangeId() + "\">\n  <body type=\"java.lang.String\">&lt;foo&gt;Camel &amp;gt; Donkey&lt;/foo&gt;</body>\n</message>",out);
  out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{1,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(1).getExchangeId() + "\">\n  <body type=\"java.lang.String\">Camel &gt; Donkey</body>\n</message>",out);
  out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{2,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(2).getExchangeId() + "\">\n  <headers>\n    <header key=\"name\" type=\"java.lang.String\">Me &amp; You</header>\n  </headers>\n"+ "  <body type=\"java.lang.String\">&lt;foo&gt;Camel &amp;gt; Donkey&lt;/foo&gt;</body>\n</message>",out);
  out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{3,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(3).getExchangeId() + "\">\n  <headers>\n"+ "    <header key=\"title\" type=\"java.lang.String\">&lt;title&gt;Me &amp;amp; You&lt;/title&gt;</header>\n  </headers>\n"+ "  <body type=\"java.lang.String\">&lt;foo&gt;Camel &amp;gt; Donkey&lt;/foo&gt;</body>\n</message>",out);
  out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{4,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(4).getExchangeId() + "\">\n  <headers>\n    <header key=\"name\" type=\"java.lang.String\">Me &amp; You</header>\n  </headers>\n"+ "  <body type=\"java.lang.String\">Camel &gt; Donkey</body>\n</message>",out);
  out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{5,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(5).getExchangeId() + "\">\n  <headers>\n    <header key=\"user\" type=\"java.lang.Boolean\">true</header>\n  </headers>\n"+ "  <body type=\"java.lang.Integer\">123</body>\n</message>",out);
  out=(String)mbeanServer.invoke(name,"browseMessageAsXml",new Object[]{6,true},new String[]{"java.lang.Integer","java.lang.Boolean"});
  assertNotNull(out);
  log.info(out);
  assertEquals("<message exchangeId=\"" + exchanges.get(6).getExchangeId() + "\">\n  <headers>\n    <header key=\"title\" type=\"java.lang.String\">Camel rocks</header>\n"+ "    <header key=\"uid\" type=\"java.lang.Integer\">123</header>\n"+ "    <header key=\"user\" type=\"java.lang.Boolean\">false</header>\n  </headers>\n"+ "  <body type=\"java.lang.String\">&lt;animal&gt;&lt;name&gt;Donkey&lt;/name&gt;&lt;age&gt;17&lt;/age&gt;&lt;/animal&gt;</body>\n</message>",out);
}
