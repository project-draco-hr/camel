{
  Swagger swagger=new Swagger();
  config.configure(swagger);
  List<VerbDefinition> verbs=new ArrayList<>(rest.getVerbs());
  Collections.sort(verbs,new VerbOrdering());
  List<Path> paths=new ArrayList<>();
  String basePath=rest.getPath();
  for (  VerbDefinition verb : verbs) {
    String method=verb.asVerb().toLowerCase(Locale.US);
    String opPath=getPath(basePath,verb.getUri());
    Operation op=new Operation();
    Path path=swagger.getPath(opPath);
    if (path == null) {
      path=new Path();
      paths.add(path);
    }
    path=path.set(method,op);
    if (verb.getConsumes() != null) {
      op.consumes(verb.getConsumes());
    }
    if (verb.getProduces() != null) {
      op.produces(verb.getProduces());
    }
    if (verb.getDescriptionText() != null) {
      op.summary(verb.getDescriptionText());
    }
    for (    RestOperationParamDefinition param : verb.getParams()) {
      Parameter parameter=null;
      if (param.getType().equals(RestParamType.body)) {
        parameter=new BodyParameter();
      }
 else       if (param.getType().equals(RestParamType.form)) {
        parameter=new FormParameter();
      }
 else       if (param.getType().equals(RestParamType.header)) {
        parameter=new HeaderParameter();
      }
 else       if (param.getType().equals(RestParamType.path)) {
        parameter=new PathParameter();
      }
 else       if (param.getType().equals(RestParamType.query)) {
        parameter=new QueryParameter();
      }
      if (parameter != null) {
        parameter.setName(param.getName());
        parameter.setAccess(param.getAccess());
        parameter.setDescription(param.getDescription());
        parameter.setRequired(param.getRequired());
        op.addParameter(parameter);
      }
    }
    swagger.path(opPath,path);
  }
  return swagger;
}
