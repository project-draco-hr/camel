{
  if (definition instanceof HystrixDefinition) {
    HystrixDefinition cb=(HystrixDefinition)definition;
    String id=cb.idOrCreate(routeContext.getCamelContext().getNodeIdFactory());
    Processor processor=cb.createChildProcessor(routeContext,true);
    Processor fallback=null;
    if (cb.getFallback() != null) {
      fallback=cb.getFallback().createProcessor(routeContext);
    }
    HystrixCommand.Setter setter=HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(id));
    HystrixCommandProperties.Setter command=HystrixCommandProperties.Setter();
    setter.andCommandPropertiesDefaults(command);
    HystrixThreadPoolProperties.Setter threadPool=HystrixThreadPoolProperties.Setter();
    setter.andThreadPoolPropertiesDefaults(threadPool);
    if (cb.getHystrixConfiguration() != null) {
      HystrixConfigurationDefinition config=cb.getHystrixConfiguration();
      if (config.getCircuitBreakerEnabled() != null) {
        command.withCircuitBreakerEnabled(config.getCircuitBreakerEnabled());
      }
      if (config.getCircuitBreakerErrorThresholdPercentage() != null) {
        command.withCircuitBreakerErrorThresholdPercentage(config.getCircuitBreakerErrorThresholdPercentage());
      }
      if (config.getCircuitBreakerForceClosed() != null) {
        command.withCircuitBreakerForceClosed(config.getCircuitBreakerForceClosed());
      }
      if (config.getCircuitBreakerForceOpen() != null) {
        command.withCircuitBreakerForceOpen(config.getCircuitBreakerForceOpen());
      }
      if (config.getCircuitBreakerRequestVolumeThreshold() != null) {
        command.withCircuitBreakerRequestVolumeThreshold(config.getCircuitBreakerRequestVolumeThreshold());
      }
      if (config.getCircuitBreakerSleepWindowInMilliseconds() != null) {
        command.withCircuitBreakerSleepWindowInMilliseconds(config.getCircuitBreakerSleepWindowInMilliseconds());
      }
      if (config.getExecutionIsolationSemaphoreMaxConcurrentRequests() != null) {
        command.withExecutionIsolationSemaphoreMaxConcurrentRequests(config.getExecutionIsolationSemaphoreMaxConcurrentRequests());
      }
      if (config.getExecutionIsolationStrategy() != null) {
        command.withExecutionIsolationStrategy(HystrixCommandProperties.ExecutionIsolationStrategy.valueOf(config.getExecutionIsolationStrategy()));
      }
      if (config.getExecutionIsolationThreadInterruptOnTimeout() != null) {
        command.withExecutionIsolationThreadInterruptOnTimeout(config.getExecutionIsolationThreadInterruptOnTimeout());
      }
      if (config.getExecutionTimeoutInMilliseconds() != null) {
        command.withExecutionTimeoutInMilliseconds(config.getExecutionTimeoutInMilliseconds());
      }
      if (config.getExecutionTimeoutEnabled() != null) {
        command.withExecutionTimeoutEnabled(config.getExecutionTimeoutEnabled());
      }
      if (config.getFallbackIsolationSemaphoreMaxConcurrentRequests() != null) {
        command.withFallbackIsolationSemaphoreMaxConcurrentRequests(config.getFallbackIsolationSemaphoreMaxConcurrentRequests());
      }
      if (config.getFallbackEnabled() != null) {
        command.withFallbackEnabled(config.getFallbackEnabled());
      }
      if (config.getMetricsHealthSnapshotIntervalInMilliseconds() != null) {
        command.withMetricsHealthSnapshotIntervalInMilliseconds(config.getMetricsHealthSnapshotIntervalInMilliseconds());
      }
      if (config.getMetricsRollingPercentileBucketSize() != null) {
        command.withMetricsRollingPercentileBucketSize(config.getMetricsRollingPercentileBucketSize());
      }
      if (config.getMetricsRollingPercentileEnabled() != null) {
        command.withMetricsRollingPercentileEnabled(config.getMetricsRollingPercentileEnabled());
      }
      if (config.getMetricsRollingPercentileWindowInMilliseconds() != null) {
        command.withMetricsRollingPercentileWindowInMilliseconds(config.getMetricsRollingPercentileWindowInMilliseconds());
      }
      if (config.getMetricsRollingPercentileWindowBuckets() != null) {
        command.withMetricsRollingPercentileWindowBuckets(config.getMetricsRollingPercentileWindowBuckets());
      }
      if (config.getMetricsRollingStatisticalWindowInMilliseconds() != null) {
        command.withMetricsRollingStatisticalWindowInMilliseconds(config.getMetricsRollingStatisticalWindowInMilliseconds());
      }
      if (config.getMetricsRollingStatisticalWindowBuckets() != null) {
        command.withMetricsRollingStatisticalWindowBuckets(config.getMetricsRollingStatisticalWindowBuckets());
      }
      if (config.getRequestCacheEnabled() != null) {
        command.withRequestCacheEnabled(config.getRequestCacheEnabled());
      }
      if (config.getRequestLogEnabled() != null) {
        command.withRequestLogEnabled(config.getRequestLogEnabled());
      }
      if (config.getCorePoolSize() != null) {
        threadPool.withCoreSize(config.getCorePoolSize());
      }
      if (config.getKeepAliveTime() != null) {
        threadPool.withKeepAliveTimeMinutes(config.getKeepAliveTime());
      }
      if (config.getMaxQueueSize() != null) {
        threadPool.withMaxQueueSize(config.getMaxQueueSize());
      }
      if (config.getQueueSizeRejectionThreshold() != null) {
        threadPool.withQueueSizeRejectionThreshold(config.getQueueSizeRejectionThreshold());
      }
      if (config.getThreadPoolRollingNumberStatisticalWindowInMilliseconds() != null) {
        threadPool.withMetricsRollingStatisticalWindowInMilliseconds(config.getThreadPoolRollingNumberStatisticalWindowInMilliseconds());
      }
      if (config.getThreadPoolRollingNumberStatisticalWindowBuckets() != null) {
        threadPool.withMetricsRollingStatisticalWindowBuckets(config.getThreadPoolRollingNumberStatisticalWindowBuckets());
      }
    }
    return new HystrixProcessor(id,setter,processor,fallback);
  }
 else {
    return null;
  }
}
