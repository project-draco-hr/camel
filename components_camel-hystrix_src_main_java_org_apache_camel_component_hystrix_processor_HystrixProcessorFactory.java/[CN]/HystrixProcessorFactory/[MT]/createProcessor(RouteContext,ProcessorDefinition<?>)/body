{
  if (definition instanceof HystrixDefinition) {
    HystrixDefinition cb=(HystrixDefinition)definition;
    String id=cb.idOrCreate(routeContext.getCamelContext().getNodeIdFactory());
    Processor processor=cb.createChildProcessor(routeContext,true);
    Processor fallback=null;
    if (cb.getFallback() != null) {
      fallback=cb.getFallback().createProcessor(routeContext);
    }
    HystrixCommand.Setter setter=HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(id));
    HystrixCommandProperties.Setter command=HystrixCommandProperties.Setter();
    setter.andCommandPropertiesDefaults(command);
    HystrixThreadPoolProperties.Setter threadPool=HystrixThreadPoolProperties.Setter();
    setter.andThreadPoolPropertiesDefaults(threadPool);
    if (cb.getHystrixConfigurationRef() != null) {
      HystrixConfigurationDefinition config=CamelContextHelper.mandatoryLookup(routeContext.getCamelContext(),cb.getHystrixConfigurationRef(),HystrixConfigurationDefinition.class);
      configureHystrix(command,threadPool,config);
    }
    if (cb.getHystrixConfiguration() != null) {
      HystrixConfigurationDefinition config=cb.getHystrixConfiguration();
      configureHystrix(command,threadPool,config);
    }
    Expression cacheKey=null;
    if (cb.getCacheKey() != null) {
      cacheKey=cb.getCacheKey().createExpression(routeContext);
    }
    return new HystrixProcessor(id,setter,processor,fallback,cacheKey);
  }
 else {
    return null;
  }
}
