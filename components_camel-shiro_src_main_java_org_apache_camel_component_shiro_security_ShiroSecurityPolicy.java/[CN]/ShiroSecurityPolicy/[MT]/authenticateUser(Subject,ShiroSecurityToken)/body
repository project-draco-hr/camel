{
  boolean authenticated=currentUser.isAuthenticated();
  boolean sameUser=securityToken.getUsername().equals(currentUser.getPrincipal());
  LOG.debug("Authenticated: {}, same Username: {}",authenticated,sameUser);
  if (!authenticated || !sameUser) {
    UsernamePasswordToken token=new UsernamePasswordToken(securityToken.getUsername(),securityToken.getPassword());
    if (alwaysReauthenticate) {
      token.setRememberMe(false);
    }
 else {
      token.setRememberMe(true);
    }
    try {
      currentUser.login(token);
      LOG.debug("Current User {} successfully authenticated",currentUser.getPrincipal());
    }
 catch (    UnknownAccountException uae) {
      throw new UnknownAccountException("Authentication Failed. There is no user with username of " + token.getPrincipal(),uae.getCause());
    }
catch (    IncorrectCredentialsException ice) {
      throw new IncorrectCredentialsException("Authentication Failed. Password for account " + token.getPrincipal() + " was incorrect!",ice.getCause());
    }
catch (    LockedAccountException lae) {
      throw new LockedAccountException("Authentication Failed. The account for username " + token.getPrincipal() + " is locked."+ "Please contact your administrator to unlock it.",lae.getCause());
    }
catch (    AuthenticationException ae) {
      throw new AuthenticationException("Authentication Failed.",ae.getCause());
    }
  }
}
