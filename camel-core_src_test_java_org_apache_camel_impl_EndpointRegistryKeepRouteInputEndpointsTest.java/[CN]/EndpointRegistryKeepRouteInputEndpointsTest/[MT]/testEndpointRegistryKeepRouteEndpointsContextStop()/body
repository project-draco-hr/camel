{
  Endpoint seda=context.hasEndpoint("seda://start?multipleConsumers=true");
  assertNotNull(seda);
  assertTrue("Should be started",((ServiceSupport)seda).isStarted());
  assertTrue(context.hasEndpoint("seda://start?multipleConsumers=true") != null);
  assertTrue(context.hasEndpoint("log://foo") != null);
  assertTrue(context.hasEndpoint("log://bar") != null);
  assertTrue(context.hasEndpoint("mock://result") != null);
  assertTrue(context.hasEndpoint("seda://stop") != null);
  assertTrue(context.hasEndpoint("mock://stop") != null);
  context.stopRoute("bar");
  context.removeRoute("bar");
  assertTrue(context.hasEndpoint("seda://start?multipleConsumers=true") != null);
  assertTrue(context.hasEndpoint("log://foo") != null);
  assertFalse(context.hasEndpoint("log://bar") != null);
  assertTrue(context.hasEndpoint("mock://result") != null);
  assertTrue(context.hasEndpoint("seda://stop") != null);
  assertTrue(context.hasEndpoint("mock://stop") != null);
  context.stopRoute("baz");
  context.removeRoute("baz");
  assertTrue(context.hasEndpoint("seda://start?multipleConsumers=true") != null);
  assertTrue(context.hasEndpoint("log://foo") != null);
  assertFalse(context.hasEndpoint("log://bar") != null);
  assertTrue(context.hasEndpoint("mock://result") != null);
  assertFalse(context.hasEndpoint("seda://stop") != null);
  assertFalse(context.hasEndpoint("mock://stop") != null);
  context.stop();
  assertFalse("Should not be started",((ServiceSupport)seda).isStarted());
}
