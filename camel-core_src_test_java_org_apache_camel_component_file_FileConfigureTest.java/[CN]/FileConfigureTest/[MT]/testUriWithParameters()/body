{
  FileEndpoint endpoint=resolveMandatoryEndpoint("file:///C:/camel/temp?delay=10&useFixedDelay=true&initialDelay=10&consumer.bridgeErrorHandler=true" + "&autoCreate=false&startingDirectoryMustExist=true&directoryMustExist=true&readLock=changed",FileEndpoint.class);
  assertNotNull("Could not find file endpoint",endpoint);
  assertEquals("Get a wrong option of StartingDirectoryMustExist",true,endpoint.isStartingDirectoryMustExist());
  endpoint=resolveMandatoryEndpoint("file:///C:/camel/temp?delay=10&useFixedDelay=true&initialDelay=10&startingDirectoryMustExist=true" + "&consumer.bridgeErrorHandler=true&autoCreate=false&directoryMustExist=true&readLock=changed",FileEndpoint.class);
  assertNotNull("Could not find file endpoint",endpoint);
  assertEquals("Get a wrong option of StartingDirectoryMustExist",true,endpoint.isStartingDirectoryMustExist());
  endpoint=resolveMandatoryEndpoint("file:///C:/camel/temp?delay=10&startingDirectoryMustExist=true&useFixedDelay=true&initialDelay=10" + "&consumer.bridgeErrorHandler=true&autoCreate=false&directoryMustExist=true&readLock=changed",FileEndpoint.class);
  assertNotNull("Could not find file endpoint",endpoint);
  assertEquals("Get a wrong option of StartingDirectoryMustExist",true,endpoint.isStartingDirectoryMustExist());
  endpoint=resolveMandatoryEndpoint("file:///C:/camel/temp?delay=10&useFixedDelay=true&initialDelay=10",FileEndpoint.class);
  assertNotNull("Could not find file endpoint",endpoint);
  assertEquals("Get a wrong option of StartingDirectoryMustExist",false,endpoint.isStartingDirectoryMustExist());
}
