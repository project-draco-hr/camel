{
  int size=1000;
  ExecutorService executor=Executors.newFixedThreadPool(20);
  Map<Integer,Future<String>> responses=new ConcurrentHashMap<Integer,Future<String>>();
  for (int i=0; i < size; i++) {
    final int index=i;
    Future<String> out=executor.submit(new Callable<String>(){
      public String call() throws Exception {
        String reply=template.requestBody("netty:tcp://localhost:" + port + "?textline=true&sync=true",index,String.class);
        log.info("Sent {} received {}",index,reply);
        assertEquals("Bye " + index,reply);
        return reply;
      }
    }
);
    responses.put(index,out);
  }
  Set<Object> unique=new HashSet<Object>();
  for (  Future<String> future : responses.values()) {
    String reply=future.get(120,TimeUnit.SECONDS);
    assertNotNull("Should get a reply",reply);
    unique.add(reply);
  }
  assertEquals("Should be " + size + " unique responses",size,unique.size());
  executor.shutdownNow();
}
