{
  try {
    TabularData answer=new TabularDataSupport(CamelOpenMBeanTypes.listInflightExchangesTabularType());
    Collection<InflightRepository.InflightExchange> exchanges=inflightRepository.browse(limit,sortByLongestDuration);
    for (    InflightRepository.InflightExchange entry : exchanges) {
      CompositeType ct=CamelOpenMBeanTypes.listInflightExchangesCompositeType();
      String exchangeId=entry.getExchange().getExchangeId();
      String fromRouteId=entry.getExchange().getFromRouteId();
      String routeId=entry.getRouteId();
      String nodeId=entry.getNodeId();
      String elapsed="" + entry.getElapsed();
      String duration="" + entry.getDuration();
      CompositeData data=new CompositeDataSupport(ct,new String[]{"exchangeId","fromRouteId","routeId","nodeId","elapsed","duration"},new Object[]{exchangeId,fromRouteId,routeId,nodeId,elapsed,duration});
      answer.put(data);
    }
    return answer;
  }
 catch (  Exception e) {
    throw ObjectHelper.wrapRuntimeCamelException(e);
  }
}
