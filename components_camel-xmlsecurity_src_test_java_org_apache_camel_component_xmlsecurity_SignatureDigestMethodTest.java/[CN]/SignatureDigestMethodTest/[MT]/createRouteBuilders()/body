{
  return new RouteBuilder[]{new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha1").to("xmlsecurity:sign://sha1?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2000/09/xmldsig#sha1").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha224").to("xmlsecurity:sign://sha224?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2001/04/xmldsig-more#sha224").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha256").to("xmlsecurity:sign://sha256?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2001/04/xmlenc#sha256").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha384").to("xmlsecurity:sign://sha384?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2001/04/xmldsig-more#sha384").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha512").to("xmlsecurity:sign://sha512?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2001/04/xmlenc#sha512").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:ripemd160").to("xmlsecurity:sign://ripemd160?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2001/04/xmlenc#ripemd160").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:whirlpool").to("xmlsecurity:sign://whirlpool?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2007/05/xmldsig-more#whirlpool").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha3_224").to("xmlsecurity:sign://sha3_224?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2007/05/xmldsig-more#sha3-224").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha3_256").to("xmlsecurity:sign://sha3_256?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2007/05/xmldsig-more#sha3-256").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha3_384").to("xmlsecurity:sign://sha3_384?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2007/05/xmldsig-more#sha3-384").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
,new RouteBuilder(){
    public void configure() throws Exception {
      from("direct:sha3_512").to("xmlsecurity:sign://sha3_512?keyAccessor=#accessor" + "&digestAlgorithm=http://www.w3.org/2007/05/xmldsig-more#sha3-512").to("xmlsecurity:verify://signaturedigestalgorithm?keySelector=#selector").to("mock:result");
    }
  }
};
}
