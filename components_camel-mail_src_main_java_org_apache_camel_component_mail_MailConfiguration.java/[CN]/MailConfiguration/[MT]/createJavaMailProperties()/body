{
  Properties properties=(Properties)System.getProperties().clone();
  properties.put("mail." + protocol + ".connectiontimeout",connectionTimeout);
  properties.put("mail." + protocol + ".timeout",connectionTimeout);
  properties.put("mail." + protocol + ".host",host);
  properties.put("mail." + protocol + ".port","" + port);
  if (username != null) {
    properties.put("mail." + protocol + ".user",username);
    properties.put("mail.user",username);
    properties.put("mail." + protocol + ".auth","true");
  }
 else {
    properties.put("mail." + protocol + ".auth","false");
  }
  properties.put("mail.transport.protocol",protocol);
  properties.put("mail.store.protocol",protocol);
  properties.put("mail.host",host);
  if (debugMode) {
    properties.put("javax.net.debug","all");
  }
  if (sslContextParameters != null && isSecureProtocol()) {
    SSLContext sslContext;
    try {
      sslContext=sslContextParameters.createSSLContext();
    }
 catch (    Exception e) {
      throw new RuntimeCamelException("Error initializing SSLContext.",e);
    }
    properties.put("mail." + protocol + ".socketFactory",sslContext.getSocketFactory());
  }
 else   if (dummyTrustManager && isSecureProtocol()) {
    properties.put("mail." + protocol + ".socketFactory.class","org.apache.camel.component.mail.security.DummySSLSocketFactory");
    properties.put("mail." + protocol + ".socketFactory.fallback","false");
    properties.put("mail." + protocol + ".socketFactory.port","" + port);
  }
  return properties;
}
