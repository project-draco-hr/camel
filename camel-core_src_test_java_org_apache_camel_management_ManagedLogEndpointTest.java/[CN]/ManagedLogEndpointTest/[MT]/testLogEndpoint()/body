{
  getMockEndpoint("mock:a").expectedMessageCount(10);
  for (int i=0; i < 10; i++) {
    template.sendBody("direct:start","" + i);
    Thread.sleep(100);
  }
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=processors,name=\"log-foo\"");
  mbeanServer.isRegistered(name);
  Long total=(Long)mbeanServer.getAttribute(name,"ExchangesTotal");
  assertEquals(10,total.intValue());
  Integer received=(Integer)mbeanServer.getAttribute(name,"ReceivedCounter");
  assertEquals(10,received.intValue());
  String last=(String)mbeanServer.getAttribute(name,"LastLogMessage");
  assertNotNull(last);
  assertTrue(last.startsWith("Received: 10 messages so far."));
  Double rate=(Double)mbeanServer.getAttribute(name,"Rate");
  assertNotNull(rate);
  assertTrue(rate > 0);
  Double average=(Double)mbeanServer.getAttribute(name,"Average");
  assertNotNull(average);
  assertTrue(average > 0);
  mbeanServer.invoke(name,"resetThroughputLogger",null,null);
  total=(Long)mbeanServer.getAttribute(name,"ExchangesTotal");
  assertEquals(10,total.intValue());
  last=(String)mbeanServer.getAttribute(name,"LastLogMessage");
  assertNull(last);
  received=(Integer)mbeanServer.getAttribute(name,"ReceivedCounter");
  assertEquals(0,received.intValue());
  rate=(Double)mbeanServer.getAttribute(name,"Rate");
  assertEquals(0.0d,rate);
  average=(Double)mbeanServer.getAttribute(name,"Average");
  assertEquals(0.0d,average);
}
