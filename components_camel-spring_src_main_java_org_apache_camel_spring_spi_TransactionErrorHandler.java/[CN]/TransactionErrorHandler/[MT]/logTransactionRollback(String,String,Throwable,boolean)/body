{
  if (rollbackLoggingLevel == LoggingLevel.OFF) {
    return;
  }
 else   if (rollbackLoggingLevel == LoggingLevel.ERROR && log.isErrorEnabled()) {
    if (rollbackOnly) {
      log.error("Transaction rollback ({}) redelivered({}) for {} due exchange was marked for rollbackOnly",new Object[]{transactionKey,redelivered,ids});
    }
 else {
      log.error("Transaction rollback ({}) redelivered({}) for {} caught: {}",new Object[]{transactionKey,redelivered,ids,e.getMessage()});
    }
  }
 else   if (rollbackLoggingLevel == LoggingLevel.WARN && log.isWarnEnabled()) {
    if (rollbackOnly) {
      log.warn("Transaction rollback ({}) redelivered({}) for {} due exchange was marked for rollbackOnly",new Object[]{transactionKey,redelivered,ids});
    }
 else {
      log.warn("Transaction rollback ({}) redelivered({}) for {} caught: {}",new Object[]{transactionKey,redelivered,ids,e.getMessage()});
    }
  }
 else   if (rollbackLoggingLevel == LoggingLevel.INFO && log.isInfoEnabled()) {
    if (rollbackOnly) {
      log.info("Transaction rollback ({}) redelivered({}) for {} due exchange was marked for rollbackOnly",new Object[]{transactionKey,redelivered,ids});
    }
 else {
      log.info("Transaction rollback ({}) redelivered({}) for {} caught: {}",new Object[]{transactionKey,redelivered,ids,e.getMessage()});
    }
  }
 else   if (rollbackLoggingLevel == LoggingLevel.DEBUG && log.isDebugEnabled()) {
    if (rollbackOnly) {
      log.debug("Transaction rollback ({}) redelivered({}) for {} due exchange was marked for rollbackOnly",new Object[]{transactionKey,redelivered,ids});
    }
 else {
      log.debug("Transaction rollback ({}) redelivered({}) for {} caught: {}",new Object[]{transactionKey,redelivered,ids,e.getMessage()});
    }
  }
 else   if (rollbackLoggingLevel == LoggingLevel.TRACE && log.isTraceEnabled()) {
    if (rollbackOnly) {
      log.trace("Transaction rollback ({}) redelivered({}) for {} due exchange was marked for rollbackOnly",new Object[]{transactionKey,redelivered,ids});
    }
 else {
      log.trace("Transaction rollback ({}) redelivered({}) for {} caught: {}",new Object[]{transactionKey,redelivered,ids,e.getMessage()});
    }
  }
}
