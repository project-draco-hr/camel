{
  getMockEndpoint("mock:end").expectedMessageCount(2);
  MockEndpoint route=getMockEndpoint("mock:route");
  route.whenExchangeReceived(1,new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.setException(new IllegalArgumentException("Forced"));
    }
  }
);
  route.whenExchangeReceived(2,new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("Bye World");
    }
  }
);
  route.whenExchangeReceived(3,new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.setException(new IllegalArgumentException("Forced"));
    }
  }
);
  route.whenExchangeReceived(4,new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("Bye World");
    }
  }
);
  route.expectedMessageCount(4);
  template.sendBody("direct:start","Hello World");
  template.sendBody("direct:start","Bye World");
  assertMockEndpointsSatisfied();
}
