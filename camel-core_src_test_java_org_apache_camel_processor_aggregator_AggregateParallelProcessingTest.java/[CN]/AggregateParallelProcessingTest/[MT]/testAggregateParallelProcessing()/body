{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").aggregate(header("id"),new BodyInAggregatingStrategy()).eagerCheckCompletion().completionPredicate(body().isEqualTo("END")).parallelProcessing().to("direct:cool");
      from("direct:cool").to("mock:cool").choice().when(body().contains("Camel")).to("mock:result").when(body().contains("Donkey")).delay(2000).to("mock:result");
    }
  }
);
  context.start();
  getMockEndpoint("mock:cool").expectedBodiesReceivedInAnyOrder("B+Camel+END","A+Donkey+END");
  getMockEndpoint("mock:result").expectedBodiesReceived("B+Camel+END","A+Donkey+END");
  template.sendBodyAndHeader("direct:start","A","id",1);
  template.sendBodyAndHeader("direct:start","Donkey","id",1);
  template.sendBodyAndHeader("direct:start","END","id",1);
  template.sendBodyAndHeader("direct:start","B","id",2);
  template.sendBodyAndHeader("direct:start","Camel","id",2);
  template.sendBodyAndHeader("direct:start","END","id",2);
  assertMockEndpointsSatisfied();
}
