{
  camelContext.addRouteCollection(routes);
  for (  LifecycleStrategy strategy : camelContext.getLifecycleStrategies()) {
    strategy.onRoutesAdd(routes);
  }
  for (  Route route : routes) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Starting route services: " + route);
    }
    List<Service> services=route.getServices();
    route.onStartingServices(services);
    List<Service> list=new ArrayList<Service>();
    for (    Service service : services) {
      doGetChildServices(list,service);
    }
    List<Service> childServices=new ArrayList<Service>();
    for (    Service service : list) {
      if (service instanceof Consumer) {
        inputs.put(route,(Consumer)service);
      }
 else {
        childServices.add(service);
      }
    }
    startChildService(route,childServices);
    ServiceHelper.startService(route);
    EventHelper.notifyRouteStarted(camelContext,route);
  }
  if (startInputs) {
    for (    Map.Entry<Route,Consumer> entry : inputs.entrySet()) {
      Route route=entry.getKey();
      Consumer consumer=entry.getValue();
      startChildService(route,consumer);
    }
  }
}
