{
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=new ObjectName("org.apache.camel:context=localhost/camel-1,type=tracer,name=BacklogTracer");
  assertNotNull(on);
  mbeanServer.isRegistered(on);
  Boolean enabled=(Boolean)mbeanServer.getAttribute(on,"Enabled");
  assertEquals("Should not be enabled",Boolean.FALSE,enabled);
  Integer size=(Integer)mbeanServer.getAttribute(on,"BacklogSize");
  assertEquals("Should be 1000",1000,size.intValue());
  mbeanServer.setAttribute(on,new Attribute("TraceFilter","${header.foo} != null"));
  mbeanServer.setAttribute(on,new Attribute("Enabled",Boolean.TRUE));
  getMockEndpoint("mock:foo").expectedMessageCount(2);
  getMockEndpoint("mock:bar").expectedMessageCount(2);
  template.sendBody("direct:start","Hello World");
  template.sendBodyAndHeader("direct:start","Bye World","foo",123);
  assertMockEndpointsSatisfied();
  List<Exchange> exchanges=getMockEndpoint("mock:foo").getReceivedExchanges();
  List<BacklogTracerEventMessage> events=(List<BacklogTracerEventMessage>)mbeanServer.invoke(on,"dumpAllTracedMessages",null,null);
  assertNotNull(events);
  assertEquals(3,events.size());
  BacklogTracerEventMessage event=events.get(0);
  assertEquals(null,event.getToNode());
  assertEquals("    <message exchangeId=\"" + exchanges.get(1).getExchangeId() + "\">\n"+ "      <headers>\n"+ "        <header key=\"foo\" type=\"java.lang.Integer\">123</header>\n"+ "      </headers>\n"+ "      <body type=\"java.lang.String\">Bye World</body>\n"+ "    </message>",event.getMessageAsXml());
  BacklogTracerEventMessage event1=events.get(1);
  assertEquals("foo",event1.getToNode());
  assertEquals("    <message exchangeId=\"" + exchanges.get(1).getExchangeId() + "\">\n"+ "      <headers>\n"+ "        <header key=\"foo\" type=\"java.lang.Integer\">123</header>\n"+ "      </headers>\n"+ "      <body type=\"java.lang.String\">Bye World</body>\n"+ "    </message>",event1.getMessageAsXml());
  BacklogTracerEventMessage event2=events.get(2);
  assertEquals("bar",event2.getToNode());
  assertEquals("    <message exchangeId=\"" + exchanges.get(1).getExchangeId() + "\">\n"+ "      <headers>\n"+ "        <header key=\"foo\" type=\"java.lang.Integer\">123</header>\n"+ "      </headers>\n"+ "      <body type=\"java.lang.String\">Bye World</body>\n"+ "    </message>",event2.getMessageAsXml());
}
