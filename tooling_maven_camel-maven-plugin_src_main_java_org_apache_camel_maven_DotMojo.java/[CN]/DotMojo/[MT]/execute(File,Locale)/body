{
  try {
    runCamelEmbedded(outputDir);
  }
 catch (  DependencyResolutionRequiredException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
  outputDir.mkdirs();
  List<File> files=new ArrayList<File>();
  appendFiles(files,outputDirectory);
  if (graphvizOutputTypes == null) {
    if (graphvizOutputType == null) {
      graphvizOutputTypes=DEFAULT_GRAPHVIZ_OUTPUT_TYPES;
    }
 else {
      graphvizOutputTypes=new String[]{graphvizOutputType};
    }
  }
  try {
    Set<String> contextNames=new HashSet<String>();
    for (    File file : files) {
      String contextName=file.getParentFile().getName();
      contextNames.add(contextName);
    }
    boolean multipleCamelContexts=contextNames.size() > 1;
    for (int i=0, size=files.size(); i < size; i++) {
      File file=files.get(i);
      String contextName=null;
      if (multipleCamelContexts) {
        contextName=file.getParentFile().getName();
      }
      getLog().info("Generating contextName: " + contextName + " file: "+ file+ "");
      generate(i,file,contextName);
    }
    if (multipleCamelContexts) {
      StringWriter buffer=new StringWriter();
      PrintWriter out=new PrintWriter(buffer);
      out.println("<h1>Camel Contexts</h1>");
      out.println();
      out.println("<ul>");
      for (      String contextName : contextNames) {
        out.print("  <li><a href='");
        out.print(contextName);
        out.print("/routes.html'>");
        out.print(contextName);
        out.println("</a></li>");
      }
      out.println("</ul>");
      indexHtmlContent=buffer.toString();
    }
  }
 catch (  CommandLineException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
catch (  IOException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
}
