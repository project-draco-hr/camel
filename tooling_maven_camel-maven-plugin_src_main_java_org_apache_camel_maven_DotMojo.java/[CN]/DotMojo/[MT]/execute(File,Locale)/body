{
  try {
    runCamelEmbedded(outputDir);
  }
 catch (  DependencyResolutionRequiredException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
  outputDir.mkdirs();
  List<File> files=new ArrayList<File>();
  appendFiles(files,outputDirectory);
  if (graphvizOutputTypes == null) {
    if (graphvizOutputType == null) {
      graphvizOutputTypes=DEFAULT_GRAPHVIZ_OUTPUT_TYPES;
    }
 else {
      graphvizOutputTypes=new String[]{graphvizOutputType};
    }
  }
  try {
    Set<String> contextNames=new HashSet<String>();
    for (    File file : files) {
      String contextName=file.getParentFile().getName();
      contextNames.add(contextName);
    }
    boolean multipleCamelContexts=contextNames.size() > 1;
    for (int i=0, size=files.size(); i < size; i++) {
      File file=files.get(i);
      String contextName=null;
      if (multipleCamelContexts) {
        contextName=file.getParentFile().getName();
      }
      StringWriter buffer=new StringWriter();
      PrintWriter out=new PrintWriter(buffer);
      printHtmlHeader(out,contextName);
      printHtmlFileHeader(out,file);
      for (int j=0; j < graphvizOutputTypes.length; j++) {
        String format=graphvizOutputTypes[j];
        String generated=convertFile(file,format);
        if (format.equals("cmapx")) {
          addFileToBuffer(out,new File(generated));
        }
      }
      printHtmlFileFooter(out,file);
      printHtmlFooter(out);
      String content=buffer.toString();
      String name=file.getName();
      if (name.equalsIgnoreCase("routes.dot") || i == 0) {
        indexHtmlContent=content;
      }
      int idx=name.lastIndexOf(".");
      if (idx >= 0) {
        name=name.substring(0,idx);
        name+=".html";
      }
      writeIndexHtmlFile(file.getParentFile(),name,content);
    }
    if (multipleCamelContexts) {
      StringWriter buffer=new StringWriter();
      PrintWriter out=new PrintWriter(buffer);
      out.println("<h1>Camel Contexts</h1>");
      out.println();
      out.println("<ul>");
      for (      String contextName : contextNames) {
        out.print("  <li><a href='");
        out.print(contextName);
        out.print("/routes.html'>");
        out.print(contextName);
        out.println("</a></li>");
      }
      out.println("</ul>");
      indexHtmlContent=buffer.toString();
    }
  }
 catch (  CommandLineException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
catch (  IOException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
}
