{
  try {
    runCamelEmbedded(outputDir);
  }
 catch (  DependencyResolutionRequiredException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
  outputDir.mkdirs();
  List<File> files=new ArrayList<File>();
  appendFiles(files,outputDirectory);
  if (graphvizOutputTypes == null) {
    if (graphvizOutputType == null) {
      graphvizOutputTypes=DEFAULT_GRAPHVIZ_OUTPUT_TYPES;
    }
 else {
      graphvizOutputTypes=new String[]{graphvizOutputType};
    }
  }
  try {
    for (int i=0; i < files.size(); i++) {
      File file=(File)((List)files).get(i);
      StringWriter buffer=new StringWriter();
      PrintWriter out=new PrintWriter(buffer);
      printHtmlHeader(out);
      printHtmlFileHeader(out,file);
      for (int j=0; j < graphvizOutputTypes.length; j++) {
        String format=graphvizOutputTypes[j];
        String generated=convertFile(file,format);
        if (format.equals("cmapx")) {
          addFileToBuffer(out,new File(generated));
        }
      }
      printHtmlFileFooter(out,file);
      printHtmlFooter(out);
      String content=buffer.toString();
      String name=file.getName();
      if (name.equalsIgnoreCase("routes.dot") || i == 0) {
        indexHtmlContent=content;
      }
      int idx=name.lastIndexOf(".");
      if (idx >= 0) {
        name=name.substring(0,idx);
        name+=".html";
      }
      writeIndexHtmlFile(name,content);
    }
  }
 catch (  CommandLineException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
catch (  IOException e) {
    throw new MojoExecutionException("Failed: " + e,e);
  }
}
