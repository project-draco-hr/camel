{
  if (isPlatform("aix")) {
    return;
  }
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
  assertEquals(1,set.size());
  ObjectName on=set.iterator().next();
  boolean registered=mbeanServer.isRegistered(on);
  assertEquals("Should be registered",true,registered);
  String uri=(String)mbeanServer.getAttribute(on,"EndpointUri");
  assertEquals("direct://start",uri);
  String state=(String)mbeanServer.getAttribute(on,"State");
  assertEquals("Should be started",ServiceStatus.Started.name(),state);
  String uptime=(String)mbeanServer.getAttribute(on,"Uptime");
  assertNotNull(uptime);
  log.info("Uptime: {}",uptime);
  mbeanServer.invoke(on,"stop",null,null);
  registered=mbeanServer.isRegistered(on);
  assertEquals("Should be registered",true,registered);
  state=(String)mbeanServer.getAttribute(on,"State");
  assertEquals("Should be stopped",ServiceStatus.Stopped.name(),state);
  uptime=(String)mbeanServer.getAttribute(on,"Uptime");
  assertEquals("",uptime);
}
