{
  CamelContext context=this.getCamelContext(camelContextName);
  if (context == null) {
    return null;
  }
  List<Map<String,String>> answer=new ArrayList<Map<String,String>>();
  Map<String,Properties> components=context.findComponents();
  for (  Map.Entry<String,Properties> entry : components.entrySet()) {
    String name=entry.getKey();
    String description=null;
    String status=context.hasComponent(name) != null ? "in use" : "on classpath";
    String type=null;
    String groupId=null;
    String artifactId=null;
    String version=null;
    String json=context.getComponentParameterJsonSchema(name);
    List<Map<String,String>> rows=JsonSchemaHelper.parseJsonSchema("component",json,false);
    for (    Map<String,String> row : rows) {
      if (row.containsKey("description")) {
        description=row.get("description");
      }
 else       if (row.containsKey("javaType")) {
        type=row.get("javaType");
      }
 else       if (row.containsKey("groupId")) {
        groupId=row.get("groupId");
      }
 else       if (row.containsKey("artifactId")) {
        artifactId=row.get("artifactId");
      }
 else       if (row.containsKey("version")) {
        version=row.get("version");
      }
    }
    Map<String,String> row=new HashMap<>();
    row.put("name",name);
    row.put("status",status);
    if (description != null) {
      row.put("description",description);
    }
    if (type != null) {
      row.put("type",type);
    }
    if (groupId != null) {
      row.put("groupId",groupId);
    }
    if (artifactId != null) {
      row.put("artifactId",artifactId);
    }
    if (version != null) {
      row.put("version",version);
    }
    answer.add(row);
  }
  return answer;
}
