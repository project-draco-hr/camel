{
  if (strategyRef != null) {
    aggregationStrategy=routeContext.lookup(strategyRef,AggregationStrategy.class);
  }
  if (aggregationStrategy == null) {
    aggregationStrategy=new UseLatestAggregationStrategy();
  }
  executorService=ExecutorServiceHelper.getConfiguredExecutorService(routeContext,"Multicast",this);
  if (isParallelProcessing() && executorService == null) {
    executorService=routeContext.getCamelContext().getExecutorServiceStrategy().newDefaultThreadPool(this,"Multicast");
  }
  if (getTimeout() > 0 && !isParallelProcessing()) {
    throw new IllegalArgumentException("Timeout is used but ParallelProcessing has not been enabled.");
  }
  return new MulticastProcessor(routeContext.getCamelContext(),list,aggregationStrategy,isParallelProcessing(),executorService,isStreaming(),isStopOnException(),getTimeout());
}
