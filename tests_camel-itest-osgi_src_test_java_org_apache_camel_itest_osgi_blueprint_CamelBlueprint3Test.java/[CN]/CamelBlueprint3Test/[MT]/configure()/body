{
  Option[] options=combine(Helper.getDefaultOptions(Helper.setLogLevel("WARN")),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-6.xml")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle6").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-7.xml")).add(TestInterceptStrategy.class).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle7").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-8.xml")).add("org/apache/camel/component/properties/cheese.properties",OSGiBlueprintTestSupport.class.getResource("cheese.properties")).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle8").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),bundle(newBundle().add("OSGI-INF/blueprint/test.xml",OSGiBlueprintTestSupport.class.getResource("blueprint-9.xml")).add(TestRouteBuilder.class).set(Constants.BUNDLE_SYMBOLICNAME,"CamelBlueprintTestBundle9").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()).noStart(),scanFeatures(getKarafFeatureUrl(),"spring","jetty"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-blueprint","camel-test","camel-ftp","camel-jackson","camel-jms"),workingDirectory("target/paxrunner/"),felix(),equinox());
  return options;
}
