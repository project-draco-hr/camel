{
  Message inMessage=exchange.getIn();
  for (  Map.Entry<String,Object> entry : request.getAttributes().entrySet()) {
    if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue())) {
      inMessage.setHeader(entry.getKey(),entry.getValue());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Populate exchange from Restlet request header: " + entry.getKey() + " value: "+ entry.getValue());
      }
    }
  }
  String query=request.getResourceRef().getQuery();
  if (null != query) {
    inMessage.setHeader(RestletConstants.QUERY_STRING,query);
  }
  if (!request.isEntityAvailable()) {
    return;
  }
  Form form=new Form(request.getEntity());
  if (form != null) {
    for (    Map.Entry<String,String> entry : form.getValuesMap().entrySet()) {
      if (entry.getValue() == null) {
        inMessage.setBody(entry.getKey());
        if (LOG.isDebugEnabled()) {
          LOG.debug("Populate exchange from Restlet request body: " + entry.getValue());
        }
      }
 else {
        if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue())) {
          inMessage.setHeader(entry.getKey(),entry.getValue());
          if (LOG.isDebugEnabled()) {
            LOG.debug("Populate exchange from Restlet request user header: " + entry.getKey() + " value: "+ entry.getValue());
          }
        }
      }
    }
  }
}
