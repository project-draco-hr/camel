{
  request.setReferrerRef("camel-restlet");
  final Method method=request.getMethod();
  MediaType mediaType=exchange.getIn().getHeader(Exchange.CONTENT_TYPE,MediaType.class);
  if (mediaType == null) {
    mediaType=MediaType.APPLICATION_WWW_FORM;
  }
  Form form=null;
  if ((Method.PUT == method || Method.POST == method) && mediaType == MediaType.APPLICATION_WWW_FORM) {
    form=new Form();
    String body=exchange.getIn().getBody(String.class);
    if (body != null) {
      form.add(body,null);
    }
  }
  String login=exchange.getIn().getHeader(RestletConstants.RESTLET_LOGIN,String.class);
  String password=exchange.getIn().getHeader(RestletConstants.RESTLET_PASSWORD,String.class);
  if (login != null && password != null) {
    ChallengeResponse authentication=new ChallengeResponse(ChallengeScheme.HTTP_BASIC,login,password);
    request.setChallengeResponse(authentication);
    LOG.debug("Basic HTTP Authentication has been applied");
  }
  for (  Map.Entry<String,Object> entry : exchange.getIn().getHeaders().entrySet()) {
    String key=entry.getKey();
    Object value=entry.getValue();
    if (!headerFilterStrategy.applyFilterToCamelHeaders(key,value,exchange)) {
      if (form != null) {
        if (key.startsWith("org.restlet.")) {
          request.getAttributes().put(key,value);
        }
 else {
          if (value instanceof Collection) {
            for (            Object v : (Collection<?>)value) {
              form.add(key,v.toString());
            }
          }
 else {
            form.add(key,value.toString());
          }
        }
      }
 else {
        request.getAttributes().put(key,value);
      }
      LOG.debug("Populate Restlet request from exchange header: {} value: {}",key,value);
    }
  }
  if (form != null) {
    request.setEntity(form.getWebRepresentation());
    LOG.debug("Populate Restlet {} request from exchange body as form using media type {}",method,mediaType);
  }
 else {
    if (request.getMethod() == Method.PUT || request.getMethod() == Method.POST) {
      Representation body=createRepresentationFromBody(exchange,mediaType);
      request.setEntity(body);
      LOG.debug("Populate Restlet {} request from exchange body: {} using media type {}",method,body,mediaType);
    }
 else {
      LOG.debug("Populate Restlet {} request from exchange using media type {}",method,mediaType);
      request.setEntity(new EmptyRepresentation());
    }
  }
  String accept=exchange.getIn().getHeader("Accept",String.class);
  if (accept != null) {
    MediaType acceptedMediaType=exchange.getContext().getTypeConverter().tryConvertTo(MediaType.class,exchange,accept);
    if (acceptedMediaType != null) {
      request.getClientInfo().getAcceptedMediaTypes().add(new Preference<MediaType>(acceptedMediaType));
    }
  }
  MediaType acceptedMediaType=exchange.getIn().getHeader(Exchange.ACCEPT_CONTENT_TYPE,MediaType.class);
  if (acceptedMediaType != null) {
    request.getClientInfo().getAcceptedMediaTypes().add(new Preference<MediaType>(acceptedMediaType));
  }
}
