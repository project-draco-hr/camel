{
  request.setReferrerRef("camel-restlet");
  String body=exchange.getIn().getBody(String.class);
  Form form=new Form();
  form.add("camel.body",body);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Populate Restlet request from exchange body: " + body);
  }
  String login=(String)exchange.getIn().removeHeader(RestletConstants.LOGIN);
  String password=(String)exchange.getIn().removeHeader(RestletConstants.PASSWORD);
  if (login != null && password != null) {
    ChallengeResponse authentication=new ChallengeResponse(ChallengeScheme.HTTP_BASIC,login,password);
    request.setChallengeResponse(authentication);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Basic HTTP Authentication has been applied");
    }
  }
  for (  Map.Entry<String,Object> entry : exchange.getIn().getHeaders().entrySet()) {
    form.add(entry.getKey(),entry.getValue().toString());
    if (LOG.isDebugEnabled()) {
      LOG.debug("Populate Restlet request from exchange header: " + entry.getKey() + " value: "+ entry.getValue());
    }
  }
  for (  Map.Entry<String,Object> entry : exchange.getProperties().entrySet()) {
    form.add(entry.getKey(),entry.getValue().toString());
    if (LOG.isDebugEnabled()) {
      LOG.debug("Populate Restlet request from exchange header: " + entry.getKey() + " value: "+ entry.getValue());
    }
  }
  request.setEntity(form.getWebRepresentation());
}
