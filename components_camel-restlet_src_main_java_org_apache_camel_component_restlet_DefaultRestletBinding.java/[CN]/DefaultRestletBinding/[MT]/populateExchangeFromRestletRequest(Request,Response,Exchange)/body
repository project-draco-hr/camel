{
  Message inMessage=exchange.getIn();
  inMessage.setHeader(RestletConstants.RESTLET_REQUEST,request);
  inMessage.setHeader(RestletConstants.RESTLET_RESPONSE,response);
  for (  Map.Entry<String,Object> entry : request.getAttributes().entrySet()) {
    if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {
      String key=entry.getKey();
      Object value=entry.getValue();
      if (HeaderConstants.ATTRIBUTE_HEADERS.equalsIgnoreCase(key)) {
        Series<Header> series=(Series<Header>)value;
        for (        Header header : series) {
          if (!header.getName().equalsIgnoreCase("Content-length"))           inMessage.setHeader(header.getName(),header.getValue());
        }
      }
 else {
        inMessage.setHeader(key,value);
      }
      LOG.debug("Populate exchange from Restlet request header: {} value: {}",key,value);
    }
  }
  String query=request.getResourceRef().getQuery();
  if (query != null) {
    inMessage.setHeader(Exchange.HTTP_QUERY,query);
  }
  inMessage.setHeader(Exchange.HTTP_URI,request.getResourceRef().getIdentifier(true));
  inMessage.setHeader(Exchange.HTTP_METHOD,request.getMethod().toString());
  if (!request.isEntityAvailable()) {
    return;
  }
  if (request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM,true)) {
    Form form=new Form(request.getEntity());
    for (    String paramName : form.getValuesMap().keySet()) {
      String[] values=form.getValuesArray(paramName);
      Object value=null;
      if (values != null && values.length > 0) {
        if (values.length == 1) {
          value=values[0];
        }
 else {
          value=values;
        }
      }
      if (value == null) {
        inMessage.setBody(paramName);
        LOG.debug("Populate exchange from Restlet request body: {}",paramName);
      }
 else {
        if (!headerFilterStrategy.applyFilterToExternalHeaders(paramName,value,exchange)) {
          inMessage.setHeader(paramName,value);
          LOG.debug("Populate exchange from Restlet request user header: {} value: {}",paramName,value);
        }
      }
    }
  }
 else {
    InputStream is=request.getEntity().getStream();
    Object body=RestletHelper.readResponseBodyFromInputStream(is,exchange);
    inMessage.setBody(body);
  }
}
