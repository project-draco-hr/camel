{
  Message inMessage=exchange.getIn();
  inMessage.setHeader(RestletConstants.RESTLET_REQUEST,request);
  inMessage.setHeader(RestletConstants.RESTLET_RESPONSE,response);
  for (  Map.Entry<String,Object> entry : request.getAttributes().entrySet()) {
    if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {
      String key=entry.getKey();
      Object value=entry.getValue();
      inMessage.setHeader(key,value);
      LOG.debug("Populate exchange from Restlet request header: {} value: {}",key,value);
    }
  }
  Series<Header> series=(Series<Header>)request.getAttributes().get(HeaderConstants.ATTRIBUTE_HEADERS);
  if (series != null) {
    String type=series.getFirstValue(Exchange.CONTENT_TYPE);
    if (type != null) {
      inMessage.setHeader(Exchange.CONTENT_TYPE,type);
    }
  }
  String query=request.getResourceRef().getQuery();
  if (query != null) {
    inMessage.setHeader(Exchange.HTTP_QUERY,query);
  }
  inMessage.setHeader(Exchange.HTTP_URI,request.getResourceRef().getIdentifier(true));
  inMessage.setHeader(Exchange.HTTP_METHOD,request.getMethod().toString());
  if (!request.isEntityAvailable()) {
    return;
  }
  if (request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM)) {
    Form form=new Form(request.getEntity());
    for (    Map.Entry<String,String> entry : form.getValuesMap().entrySet()) {
      String key=entry.getKey();
      String value=entry.getValue();
      if (value == null) {
        inMessage.setBody(key);
        LOG.debug("Populate exchange from Restlet request body: {}",key);
      }
 else {
        if (!headerFilterStrategy.applyFilterToExternalHeaders(key,value,exchange)) {
          inMessage.setHeader(key,value);
          LOG.debug("Populate exchange from Restlet request user header: {} value: {}",key,value);
        }
      }
    }
  }
 else {
    inMessage.setBody(request.getEntity().getStream());
  }
}
