{
  try {
    MessageProducer messageProducer=null;
    Object obj=exchange.getIn().getHeader(JmsConstants.JMS_REPLY_TO);
    if (obj != null) {
      Destination replyTo;
      if (isDestination(obj)) {
        replyTo=(Destination)obj;
      }
 else       if (obj instanceof String) {
        replyTo=getEndpoint().getDestinationCreationStrategy().createDestination(getSession(),(String)obj,isTopic());
      }
 else {
        throw new Exception("The value of JMSReplyTo must be a valid Destination or String.  Value provided: " + obj);
      }
      String destinationName=getDestinationName(replyTo);
      try {
        lock.readLock().lock();
        if (producerCache.containsKey(destinationName)) {
          messageProducer=producerCache.get(destinationName);
        }
      }
  finally {
        lock.readLock().unlock();
      }
      if (messageProducer == null) {
        try {
          lock.writeLock().lock();
          messageProducer=getSession().createProducer(replyTo);
          producerCache.put(destinationName,messageProducer);
        }
  finally {
          lock.writeLock().unlock();
        }
      }
    }
    MessageHandlerAsyncCallback callback=new MessageHandlerAsyncCallback(exchange,messageProducer);
    if (exchange.isFailed()) {
      return;
    }
 else {
      if (isTransacted() || isSynchronous()) {
        log.debug("Synchronous processing: Message[{}], Destination[{}] ",exchange.getIn().getBody(),getEndpoint().getEndpointUri());
        try {
          getProcessor().process(exchange);
        }
 catch (        Exception e) {
          exchange.setException(e);
        }
 finally {
          callback.done(true);
        }
      }
 else {
        log.debug("Asynchronous processing: Message[{}], Destination[{}] ",exchange.getIn().getBody(),getEndpoint().getEndpointUri());
        getProcessor().process(exchange,callback);
      }
    }
  }
 catch (  Exception e) {
    exchange.setException(e);
  }
  if (log.isDebugEnabled()) {
    log.debug("SjmsMessageConsumer invoked for Exchange id:{} ",exchange.getExchangeId());
  }
}
