{
  String payload;
  Collection<String> tokens;
  if (isTokensConfiguredUsingUri()) {
    if (hasTokensHeader(exchange)) {
      throw new IllegalArgumentException("Tokens already configured on endpoint " + ApnsConstants.HEADER_TOKENS);
    }
    tokens=new ArrayList<String>(tokenList);
  }
 else {
    String tokensHeader=getHeaderTokens(exchange);
    tokens=extractTokensFromString(tokensHeader);
  }
  if (messageType == MessageType.STRING) {
    String message=exchange.getIn().getBody(String.class);
    payload=APNS.newPayload().alertBody(message).build();
  }
 else {
    String message=exchange.getIn().getBody(String.class);
    payload=message;
  }
  Date expiry=exchange.getIn().getHeader(ApnsConstants.HEADER_EXPIRY,Date.class);
  if (expiry != null) {
    getEndpoint().getApnsService().push(tokens,payload,expiry);
  }
 else {
    getEndpoint().getApnsService().push(tokens,payload);
  }
}
