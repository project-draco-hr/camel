{
  getLog().info("Copying all Camel component json descriptors");
  Set<File> files=new LinkedHashSet<File>();
  if (componentsDir != null && componentsDir.isDirectory()) {
    File[] components=componentsDir.listFiles();
    if (components != null) {
      for (      File dir : components) {
        if (dir.isDirectory()) {
          File target=new File(dir,"target/classes");
          findFilesRecursive(target,files,new JsonAndDirFileFilter());
        }
      }
    }
  }
  if (coreDir != null && coreDir.isDirectory()) {
    File target=new File(coreDir,"target/classes");
    findFilesRecursive(target,files,new JsonAndDirFileFilter());
  }
  getLog().info("Found " + files.size() + " component json files");
  outDir.mkdirs();
  for (  File file : files) {
    File to=new File(outDir,file.getName());
    try {
      copyFile(file,to);
    }
 catch (    IOException e) {
      throw new MojoFailureException("Cannot copy file from " + file + " -> "+ to,e);
    }
  }
  File all=new File(outDir,"../components.properties");
  try {
    FileOutputStream fos=new FileOutputStream(all,false);
    String[] names=outDir.list();
    List<String> components=new ArrayList<String>();
    for (    String name : names) {
      if (name.endsWith(".json")) {
        String componentName=name.substring(0,name.length() - 5);
        components.add(componentName);
      }
    }
    Collections.sort(components);
    for (    String name : components) {
      fos.write(name.getBytes());
      fos.write("\n".getBytes());
    }
    fos.close();
    getLog().info("Camel components catalog includes " + files.size() + " components");
  }
 catch (  IOException e) {
    throw new MojoFailureException("Error writing to file " + all);
  }
}
