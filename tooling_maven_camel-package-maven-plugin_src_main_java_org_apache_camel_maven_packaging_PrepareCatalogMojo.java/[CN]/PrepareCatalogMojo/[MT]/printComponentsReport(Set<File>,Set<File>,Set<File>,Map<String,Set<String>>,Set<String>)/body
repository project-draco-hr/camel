{
  getLog().info("================================================================================");
  getLog().info("");
  getLog().info("Camel component catalog report");
  getLog().info("");
  getLog().info("\tComponents found: " + json.size());
  for (  File file : json) {
    getLog().info("\t\t" + asComponentName(file));
  }
  if (!duplicate.isEmpty()) {
    getLog().info("");
    getLog().warn("\tDuplicate components detected: " + duplicate.size());
    for (    File file : duplicate) {
      getLog().warn("\t\t" + asComponentName(file));
    }
  }
  if (!usedComponentLabels.isEmpty()) {
    getLog().info("");
    getLog().info("\tUsed component labels: " + usedComponentLabels.size());
    for (    Map.Entry<String,Set<String>> entry : usedComponentLabels.entrySet()) {
      getLog().info("\t\t" + entry.getKey() + ":");
      for (      String name : entry.getValue()) {
        getLog().info("\t\t\t" + name);
      }
    }
  }
  if (!usedOptionsLabels.isEmpty()) {
    getLog().info("");
    getLog().info("\tUsed component/endpoint options labels: " + usedOptionsLabels.size());
    for (    String name : usedOptionsLabels) {
      getLog().info("\t\t\t" + name);
    }
  }
  if (!missing.isEmpty()) {
    getLog().info("");
    getLog().warn("\tMissing components detected: " + missing.size());
    for (    File name : missing) {
      getLog().warn("\t\t" + name.getName());
    }
  }
  getLog().info("");
  getLog().info("================================================================================");
}
