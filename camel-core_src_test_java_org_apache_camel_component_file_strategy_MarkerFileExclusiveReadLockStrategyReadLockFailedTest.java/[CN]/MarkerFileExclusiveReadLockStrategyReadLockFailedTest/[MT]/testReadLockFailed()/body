{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  mock.expectedFileExists("target/readlock/out/file1.dat");
  writeFiles();
  assertMockEndpointsSatisfied();
  String content=context.getTypeConverter().convertTo(String.class,new File("target/readlock/out/file1.dat").getAbsoluteFile());
  String[] lines=content.split(LS);
  for (int i=0; i < 20; i++) {
    assertEquals("Line " + i,lines[i]);
  }
  Thread.sleep(500);
  assertFileDoesNotExists("target/readlock/in/file1.dat.camelLock");
  assertFileExists("target/readlock/in/file2.dat.camelLock");
  assertFileDoesNotExists("target/readlock/in/file1.dat");
  assertFileExists("target/readlock/in/file2.dat");
}
