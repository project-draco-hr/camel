{
  final Set<String> keys=new LinkedHashSet<String>();
  hawtDBFile.execute(new Work<Buffer>(){
    public Buffer execute(    Transaction tx){
      if (!isRunAllowed()) {
        return null;
      }
      SortedIndex<Buffer,Buffer> index=hawtDBFile.getRepositoryIndex(tx,repositoryName,false);
      if (index == null) {
        return null;
      }
      Iterator<Map.Entry<Buffer,Buffer>> it=index.iterator();
      while (it.hasNext() && isRunAllowed()) {
        Map.Entry<Buffer,Buffer> entry=it.next();
        Buffer keyBuffer=entry.getKey();
        String key;
        try {
          key=codec.unmarshallKey(keyBuffer);
        }
 catch (        IOException e) {
          throw new RuntimeException("Error unmarshalling key: " + keyBuffer,e);
        }
        if (key != null) {
          if (LOG.isTraceEnabled()) {
            LOG.trace("getKey [" + key + "]");
          }
          keys.add(key);
        }
      }
      return null;
    }
    @Override public String toString(){
      return "getKeys";
    }
  }
);
  return Collections.unmodifiableSet(keys);
}
