{
  consumeObject.expectedMessageCount(8);
  consumeObject.expectedBodiesReceived(1234,new EventPayloadString("foo"),new EventPayloadString("bar"),"test",new EventPayloadInteger(1),new EventPayloadInteger(2),123L,987L);
  consumeString.expectedMessageCount(1);
  consumeString.expectedBodiesReceived("test");
  consumeStringPayload.expectedMessageCount(2);
  consumeStringPayload.expectedBodiesReceived(new EventPayloadString("foo"),new EventPayloadString("bar"));
  consumeIntegerPayload.expectedMessageCount(2);
  consumeIntegerPayload.expectedBodiesReceived(new EventPayloadInteger(1),new EventPayloadInteger(2));
  consumeFooQualifier.expectedMessageCount(1);
  consumeFooQualifier.expectedBodiesReceived(123L);
  consumeBarQualifier.expectedMessageCount(1);
  consumeBarQualifier.expectedBodiesReceived(987L);
  objectEvent.select(Integer.class).fire(1234);
  objectEvent.select(EventPayloadString.class).fire(new EventPayloadString("foo"));
  stringPayloadEvent.select(new BarQualifier.Literal()).fire(new EventPayloadString("bar"));
  objectEvent.select(String.class).fire("test");
  integerPayloadEvent.fire(new EventPayloadInteger(1));
  integerPayloadEvent.fire(new EventPayloadInteger(2));
  objectEvent.select(Long.class,new FooQualifier.Literal()).fire(123L);
  objectEvent.select(Long.class,new BarQualifier.Literal()).fire(987L);
  assertIsSatisfied(2L,TimeUnit.SECONDS,consumeObject,consumeString,consumeFooQualifier,consumeBarQualifier);
}
