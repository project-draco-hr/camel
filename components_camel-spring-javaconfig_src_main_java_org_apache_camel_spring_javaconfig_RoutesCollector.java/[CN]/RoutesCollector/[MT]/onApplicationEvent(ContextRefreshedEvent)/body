{
  ApplicationContext applicationContext=event.getApplicationContext();
  if (this.applicationContext.equals(applicationContext)) {
    CamelContext camelContext=event.getApplicationContext().getBean(CamelContext.class);
    if (camelContext.getStatus().isStopped()) {
      LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());
      for (      RoutesBuilder routesBuilder : configuration.routes()) {
        boolean abs=Modifier.isAbstract(routesBuilder.getClass().getModifiers());
        if (!abs) {
          try {
            LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);
            camelContext.addRoutes(routesBuilder);
          }
 catch (          Exception e) {
            throw new CamelSpringJavaconfigInitializationException(e);
          }
        }
      }
      try {
        boolean skip="true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext"));
        if (skip) {
          LOG.info("Skipping starting CamelContext(s) as system property skipStartingCamelContext is set to be true.");
        }
 else {
          camelContext.start();
        }
      }
 catch (      Exception e) {
        throw new CamelSpringJavaconfigInitializationException(e);
      }
    }
  }
 else {
    LOG.debug("Ignore ContextRefreshedEvent: {}",event);
  }
}
