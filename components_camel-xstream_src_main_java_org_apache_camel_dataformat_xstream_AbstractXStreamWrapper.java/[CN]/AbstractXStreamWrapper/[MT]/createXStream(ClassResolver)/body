{
  xstream=new XStream();
  try {
    if (this.implicitCollections != null) {
      for (      Entry<String,String[]> entry : this.implicitCollections.entrySet()) {
        for (        String name : entry.getValue()) {
          xstream.addImplicitCollection(resolver.resolveMandatoryClass(entry.getKey()),name);
        }
      }
    }
    if (this.aliases != null) {
      for (      Entry<String,String> entry : this.aliases.entrySet()) {
        xstream.alias(entry.getKey(),resolver.resolveMandatoryClass(entry.getValue()));
      }
    }
    if (this.converters != null) {
      for (      String name : this.converters) {
        Class<Converter> converterClass=resolver.resolveMandatoryClass(name,Converter.class);
        Converter converter;
        Constructor con=null;
        try {
          con=converterClass.getDeclaredConstructor(new Class[]{XStream.class});
        }
 catch (        Exception e) {
        }
        if (con != null) {
          converter=(Converter)con.newInstance(xstream);
        }
 else {
          converter=converterClass.newInstance();
          try {
            Method method=converterClass.getMethod("setXStream",new Class[]{XStream.class});
            if (method != null) {
              ObjectHelper.invokeMethod(method,converter,xstream);
            }
          }
 catch (          Throwable e) {
          }
        }
        xstream.registerConverter(converter);
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to build XStream instance",e);
  }
  return xstream;
}
