{
  if (holder != null && isRunAllowed()) {
    try {
      Exchange exchange=holder.getExchange();
      boolean timeout=holder.isTimeout();
      if (timeout) {
        if (log.isWarnEnabled()) {
          log.warn("Timeout occurred after {} millis waiting for reply message with correlationID [{}] on destination {}." + " Setting ExchangeTimedOutException on {} and continue routing.",holder.getRequestTimeout(),holder.getCorrelationId(),replyTo,ExchangeHelper.logIds(exchange));
        }
        String msg="reply message with correlationID: " + holder.getCorrelationId() + " not received on destination: "+ replyTo;
        exchange.setException(new ExchangeTimedOutException(exchange,holder.getRequestTimeout(),msg));
      }
 else {
        messageConverter.populateRabbitExchange(exchange,null,holder.getProperties(),holder.getMessage(),true);
        if (holder.getOriginalCorrelationId() != null) {
          if (exchange.getOut() != null) {
            exchange.getOut().setHeader(RabbitMQConstants.CORRELATIONID,holder.getOriginalCorrelationId());
          }
 else {
            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID,holder.getOriginalCorrelationId());
          }
        }
      }
    }
  finally {
      AsyncCallback callback=holder.getCallback();
      callback.done(false);
    }
  }
}
