{
  StringBuilder sb=new StringBuilder();
  int pivot=0;
  int size=uri.length();
  while (pivot < size) {
    int idx=uri.indexOf(prefixToken,pivot);
    if (idx < 0) {
      sb.append(createConstantPart(uri,pivot,size));
      break;
    }
 else {
      if (pivot < idx) {
        sb.append(createConstantPart(uri,pivot,idx));
      }
      pivot=idx + prefixToken.length();
      int endIdx=uri.indexOf(suffixToken,pivot);
      if (endIdx < 0) {
        throw new IllegalArgumentException("Expecting " + suffixToken + " but found end of string from text: "+ uri);
      }
      String key=uri.substring(pivot,endIdx);
      String augmentedKey=key;
      if (propertyPrefix != null) {
        log.debug("Augmenting property key [{}] with prefix: {}",key,propertyPrefix);
        augmentedKey=propertyPrefix + augmentedKey;
      }
      if (propertySuffix != null) {
        log.debug("Augmenting property key [{}] with suffix: {}",key,propertySuffix);
        augmentedKey=augmentedKey + propertySuffix;
      }
      String part=createPlaceholderPart(augmentedKey,properties,replaced);
      if (part == null && fallbackToUnaugmentedProperty && (propertyPrefix != null || propertySuffix != null)) {
        log.debug("Property wth key [{}] not found, attempting with unaugmented key: {}",augmentedKey,key);
        part=createPlaceholderPart(key,properties,replaced);
      }
      if (part == null) {
        StringBuilder esb=new StringBuilder();
        esb.append("Property with key [").append(augmentedKey).append("] ");
        if (fallbackToUnaugmentedProperty && (propertyPrefix != null || propertySuffix != null)) {
          esb.append("(and original key [").append(key).append("]) ");
        }
        esb.append("not found in properties from text: ").append(uri);
        throw new IllegalArgumentException(esb.toString());
      }
      sb.append(part);
      pivot=endIdx + suffixToken.length();
    }
  }
  return sb.toString();
}
