{
  super("xmljson");
  if (options.containsKey(ENCODING)) {
    encoding=options.get(ENCODING);
  }
  if (options.containsKey(FORCE_TOP_LEVEL_OBJECT)) {
    forceTopLevelObject=Boolean.parseBoolean(options.get(FORCE_TOP_LEVEL_OBJECT));
  }
  if (options.containsKey(NAMESPACE_LENIENT)) {
    namespaceLenient=Boolean.parseBoolean(options.get(NAMESPACE_LENIENT));
  }
  if (options.containsKey(ROOT_NAME)) {
    rootName=options.get(ROOT_NAME);
  }
  if (options.containsKey(ELEMENT_NAME)) {
    elementName=options.get(ELEMENT_NAME);
  }
  if (options.containsKey(ARRAY_NAME)) {
    arrayName=options.get(ARRAY_NAME);
  }
  if (options.containsKey(EXPANDABLE_PROPERTIES)) {
    expandableProperties=Arrays.asList(options.get(EXPANDABLE_PROPERTIES).split(" "));
  }
  if (options.containsKey(SKIP_WHITESPACE)) {
    skipWhitespace=Boolean.parseBoolean(options.get(SKIP_WHITESPACE));
  }
  if (options.containsKey(TRIM_SPACES)) {
    trimSpaces=Boolean.parseBoolean(options.get(TRIM_SPACES));
  }
  if (options.containsKey(SKIP_NAMESPACES)) {
    skipNamespaces=Boolean.parseBoolean(options.get(SKIP_NAMESPACES));
  }
  if (options.containsKey(REMOVE_NAMESPACE_PREFIXES)) {
    removeNamespacePrefixes=Boolean.parseBoolean(options.get(REMOVE_NAMESPACE_PREFIXES));
  }
  if (options.containsKey(TYPE_HINTS)) {
    typeHints=options.get(TYPE_HINTS);
  }
}
