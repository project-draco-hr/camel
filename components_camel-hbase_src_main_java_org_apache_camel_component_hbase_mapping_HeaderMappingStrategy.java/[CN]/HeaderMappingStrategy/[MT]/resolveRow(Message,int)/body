{
  HBaseRow hRow=new HBaseRow();
  HBaseCell hCell=new HBaseCell();
  if (message != null) {
    Object id=message.getHeader(HBaseAttribute.HBASE_ROW_ID.asHeader(index));
    String rowClassName=message.getHeader(HBaseAttribute.HBASE_ROW_TYPE.asHeader(index),String.class);
    Class<?> rowClass=rowClassName == null || rowClassName.isEmpty() ? String.class : message.getExchange().getContext().getClassResolver().resolveClass(rowClassName);
    String columnFamily=(String)message.getHeader(HBaseAttribute.HBASE_FAMILY.asHeader(index));
    String columnName=(String)message.getHeader(HBaseAttribute.HBASE_QUALIFIER.asHeader(index));
    Object value=message.getHeader(HBaseAttribute.HBASE_VALUE.asHeader(index));
    String valueClassName=message.getHeader(HBaseAttribute.HBASE_VALUE_TYPE.asHeader(index),String.class);
    Class<?> valueClass=valueClassName == null || valueClassName.isEmpty() ? String.class : message.getExchange().getContext().getClassResolver().resolveClass(valueClassName);
    if (id == null && columnFamily == null && columnName == null) {
      return null;
    }
    hRow.setId(id);
    hRow.setRowType(rowClass);
    if (columnFamily != null && columnName != null) {
      hCell.setQualifier(columnName);
      hCell.setFamily(columnFamily);
      hCell.setValue(value);
      hCell.setValueType((valueClass != null) ? valueClass : String.class);
      hRow.getCells().add(hCell);
    }
  }
  return hRow;
}
