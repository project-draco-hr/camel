{
  ApiMethod result;
  final Set<String> argNames=new HashSet<String>();
  argNames.addAll(propertiesHelper.getEndpointPropertyNames(endpoint.getConfiguration()));
  interceptArgumentNames(argNames);
  final String[] argNamesArray=argNames.toArray(new String[argNames.size()]);
  List<ApiMethod> filteredMethods=ApiMethodHelper.filterMethods(endpoint.getCandidates(),ApiMethodHelper.MatchType.SUPER_SET,argNamesArray);
  if (filteredMethods.isEmpty()) {
    throw new IllegalArgumentException(String.format("Missing properties for %s/%s, need one or more from %s",endpoint.getApiName().getName(),endpoint.getMethodName(),methodHelper.getMissingProperties(endpoint.getMethodName(),argNames)));
  }
 else   if (filteredMethods.size() == 1) {
    result=filteredMethods.get(0);
  }
 else {
    result=ApiMethodHelper.getHighestPriorityMethod(filteredMethods);
    log.warn("Using highest priority operation {} from operations {}",method,filteredMethods);
  }
  return result;
}
