{
  final ContentProvider content=request.getContent();
  if (content instanceof InputStreamContentProvider) {
    final List<ByteBuffer> buffers=new ArrayList<>();
    for (    ByteBuffer buffer : content) {
      buffers.add(buffer);
    }
    request.content(new ByteBufferContentProvider(buffers.toArray(new ByteBuffer[buffers.size()])));
    buffers.clear();
  }
  request.send(new BufferingResponseListener(httpClient.getMaxContentLength()){
    @Override public void onComplete(    Result result){
      Response response=result.getResponse();
      if (result.isFailed()) {
        Throwable failure=result.getFailure();
        if (failure instanceof SalesforceException) {
          callback.onResponse(null,(SalesforceException)failure);
        }
 else {
          final String msg=String.format("Unexpected error {%s:%s} executing {%s:%s}",response.getStatus(),response.getReason(),request.getMethod(),request.getURI());
          callback.onResponse(null,new SalesforceException(msg,response.getStatus(),failure));
        }
      }
 else {
        final int status=response.getStatus();
        SalesforceHttpRequest request=(SalesforceHttpRequest)((SalesforceHttpRequest)result.getRequest()).getConversation().getAttribute(SalesforceSecurityHandler.AUTHENTICATION_REQUEST_ATTRIBUTE);
        if (status == HttpStatus.BAD_REQUEST_400 && request != null) {
          ContentResponse contentResponse=new HttpContentResponse(response,getContent(),getMediaType(),getEncoding());
          try {
            session.parseLoginResponse(contentResponse,getContentAsString());
            final String msg=String.format("Unexpected Error {%s:%s} executing {%s:%s}",status,response.getReason(),request.getMethod(),request.getURI());
            callback.onResponse(null,new SalesforceException(msg,null));
          }
 catch (          SalesforceException e) {
            final String msg=String.format("Error {%s:%s} executing {%s:%s}",status,response.getReason(),request.getMethod(),request.getURI());
            callback.onResponse(null,new SalesforceException(msg,response.getStatus(),e));
          }
        }
 else         if (status < HttpStatus.OK_200 || status >= HttpStatus.MULTIPLE_CHOICES_300) {
          request=(SalesforceHttpRequest)result.getRequest();
          final String msg=String.format("Error {%s:%s} executing {%s:%s}",status,response.getReason(),request.getMethod(),request.getURI());
          final SalesforceException cause=createRestException(response,getContentAsInputStream());
          callback.onResponse(null,new SalesforceException(msg,response.getStatus(),cause));
        }
 else {
          callback.onResponse(getContentAsInputStream(),null);
        }
      }
    }
    @Override public InputStream getContentAsInputStream(){
      if (getContent().length == 0) {
        return null;
      }
      return super.getContentAsInputStream();
    }
  }
);
}
