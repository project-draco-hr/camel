{
  request.setEventListener(new HttpEventListenerWrapper(request.getEventListener(),true){
    public String reason;
    @Override public void onConnectionFailed(    Throwable ex){
      super.onConnectionFailed(ex);
      callback.onResponse(null,new SalesforceException("Connection error: " + ex.getMessage(),ex));
    }
    @Override public void onException(    Throwable ex){
      super.onException(ex);
      callback.onResponse(null,new SalesforceException("Unexpected exception: " + ex.getMessage(),ex));
    }
    @Override public void onExpire(){
      super.onExpire();
      callback.onResponse(null,new SalesforceException("Request expired",null));
    }
    @Override public void onResponseComplete() throws IOException {
      super.onResponseComplete();
      final int responseStatus=request.getResponseStatus();
      if (responseStatus < HttpStatus.OK_200 || responseStatus >= HttpStatus.MULTIPLE_CHOICES_300) {
        final String msg=String.format("Error {%s:%s} executing {%s:%s}",responseStatus,reason,request.getMethod(),request.getRequestURI());
        final SalesforceException exception=new SalesforceException(msg,responseStatus,createRestException(request,reason));
        callback.onResponse(null,exception);
      }
 else {
        final byte[] bytes=request.getResponseContentBytes();
        callback.onResponse(bytes != null ? new ByteArrayInputStream(bytes) : null,null);
      }
    }
    @Override public void onResponseStatus(    Buffer version,    int status,    Buffer reason) throws IOException {
      super.onResponseStatus(version,status,reason);
      this.reason=reason.toString(StringUtil.__ISO_8859_1);
    }
  }
);
  try {
    final boolean isHttps=HttpSchemes.HTTPS.equals(String.valueOf(request.getScheme()));
    request.setEventListener(new SalesforceSecurityListener(httpClient.getDestination(request.getAddress(),isHttps),request,session,accessToken));
  }
 catch (  IOException e) {
    callback.onResponse(null,new SalesforceException(String.format("Error registering security listener: %s",e.getMessage()),e));
  }
  try {
    httpClient.send(request);
  }
 catch (  IOException e) {
    String msg="Unexpected Error: " + e.getMessage();
    callback.onResponse(null,new SalesforceException(msg,e));
  }
}
