{
  Map<String,Object> camelHeaders=camelExchange.getIn().getHeaders();
  extractInvocationContextFromCamel(camelExchange,camelHeaders,requestContext,Client.REQUEST_CONTEXT);
  propagateHeadersFromCamelToCxf(camelExchange,camelHeaders,cxfExchange,requestContext);
  String overrideAddress=camelExchange.getIn().getHeader(Exchange.DESTINATION_OVERRIDE_URL,String.class);
  if (overrideAddress != null) {
    LOG.trace("Client address is overridden by header '{}' to value '{}'",Exchange.DESTINATION_OVERRIDE_URL,overrideAddress);
    requestContext.put(Message.ENDPOINT_ADDRESS,overrideAddress);
  }
  Set<Attachment> attachments=null;
  boolean isXop=Boolean.valueOf(camelExchange.getProperty(Message.MTOM_ENABLED,String.class));
  DataFormat dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class);
  if (!DataFormat.CXF_MESSAGE.equals(dataFormat)) {
    for (    Map.Entry<String,org.apache.camel.Attachment> entry : camelExchange.getIn().getAttachmentObjects().entrySet()) {
      if (attachments == null) {
        attachments=new HashSet<Attachment>();
      }
      AttachmentImpl attachment=new AttachmentImpl(entry.getKey());
      org.apache.camel.Attachment camelAttachment=entry.getValue();
      attachment.setDataHandler(camelAttachment.getDataHandler());
      for (      String name : camelAttachment.getHeaderNames()) {
        attachment.setHeader(name,camelAttachment.getHeader(name));
      }
      attachment.setXOP(isXop);
      attachments.add(attachment);
    }
  }
  if (attachments != null) {
    requestContext.put(CxfConstants.CAMEL_CXF_ATTACHMENTS,attachments);
  }
}
