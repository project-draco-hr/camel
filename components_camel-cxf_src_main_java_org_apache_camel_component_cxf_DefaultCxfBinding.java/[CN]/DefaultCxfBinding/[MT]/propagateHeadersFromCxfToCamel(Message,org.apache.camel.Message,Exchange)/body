{
  Map<String,List<String>> cxfHeaders=(Map)cxfMessage.get(Message.PROTOCOL_HEADERS);
  Map<String,Object> camelHeaders=camelMessage.getHeaders();
  if (cxfHeaders != null) {
    for (    Map.Entry<String,List<String>> entry : cxfHeaders.entrySet()) {
      if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {
        camelHeaders.put(entry.getKey(),entry.getValue().get(0));
        if (LOG.isTraceEnabled()) {
          LOG.trace("Populate header from CXF header=" + entry.getKey() + " value="+ entry.getValue());
        }
      }
    }
  }
  String key=Header.HEADER_LIST;
  Object value=cxfMessage.get(key);
  if (value != null) {
    if (!headerFilterStrategy.applyFilterToExternalHeaders(key,value,exchange)) {
      camelHeaders.put(key,value);
      if (LOG.isTraceEnabled()) {
        LOG.trace("Populate header from CXF header=" + key + " value="+ value);
      }
    }
 else {
      ((List<?>)value).clear();
    }
  }
  SecurityContext securityContext=cxfMessage.get(SecurityContext.class);
  if (securityContext != null) {
    Subject subject=new Subject();
    subject.getPrincipals().add(securityContext.getUserPrincipal());
    camelHeaders.put(Exchange.AUTHENTICATION,subject);
  }
}
