{
  while (true) {
    List<? extends TypeMirror> list=classElement.getInterfaces();
    if (list != null) {
      for (      TypeMirror type : list) {
        if (type.getKind().compareTo(TypeKind.DECLARED) == 0) {
          String name=type.toString();
          if (interfaceClassName.equals(name)) {
            return true;
          }
        }
      }
    }
    TypeElement baseTypeElement=null;
    TypeMirror superclass=classElement.getSuperclass();
    if (superclass != null) {
      String superClassName=canonicalClassName(superclass.toString());
      baseTypeElement=findTypeElement(processingEnv,roundEnv,superClassName);
    }
    if (baseTypeElement != null) {
      classElement=baseTypeElement;
    }
 else {
      break;
    }
  }
  return false;
}
