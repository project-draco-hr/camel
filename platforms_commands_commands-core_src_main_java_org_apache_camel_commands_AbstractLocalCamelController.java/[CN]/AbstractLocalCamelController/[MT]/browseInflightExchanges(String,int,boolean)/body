{
  CamelContext context=this.getLocalCamelContext(camelContextName);
  if (context == null) {
    return null;
  }
  List<Map<String,Object>> answer=new ArrayList<Map<String,Object>>();
  ManagementAgent agent=context.getManagementStrategy().getManagementAgent();
  if (agent != null) {
    MBeanServer mBeanServer=agent.getMBeanServer();
    ObjectName on=null;
    Set<ObjectName> set=mBeanServer.queryNames(new ObjectName(agent.getMBeanObjectDomainName() + ":type=services,name=DefaultInflightRepository,*"),null);
    if (set.size() == 1) {
      on=set.iterator().next();
    }
    if (mBeanServer.isRegistered(on)) {
      TabularData list=(TabularData)mBeanServer.invoke(on,"browse",new Object[]{limit,sortByLongestDuration},new String[]{"int","boolean"});
      Collection<CompositeData> values=(Collection<CompositeData>)list.values();
      for (      CompositeData data : values) {
        Map<String,Object> row=new LinkedHashMap<String,Object>();
        Object exchangeId=data.get("exchangeId");
        if (exchangeId != null) {
          row.put("exchangeId",exchangeId);
        }
        Object routeId=data.get("routeId");
        if (routeId != null) {
          row.put("routeId",routeId);
        }
        Object nodeId=data.get("nodeId");
        if (nodeId != null) {
          row.put("nodeId",nodeId);
        }
        Object duration=data.get("duration");
        if (duration != null) {
          row.put("duration",duration);
        }
        Object elapsed=data.get("elapsed");
        if (elapsed != null) {
          row.put("elapsed",elapsed);
        }
        answer.add(row);
      }
    }
  }
  return answer;
}
