{
  String verb=getEndpoint().getVerb();
  String path=getEndpoint().getPath();
  Operation operation=getSwaggerOperation(verb,path);
  if (operation == null) {
    exchange.setException(new IllegalArgumentException("Swagger schema does not contain operation for " + verb + ":"+ path));
    callback.done(true);
    return true;
  }
  try {
    Map<String,Object> query=new LinkedHashMap<>();
    for (    Parameter param : operation.getParameters()) {
      if ("query".equals(param.getIn())) {
        String name=param.getName();
        if (name != null) {
          String value=exchange.getIn().getHeader(name,String.class);
          if (value != null) {
            query.put(name,value);
          }
 else           if (param.getRequired()) {
            exchange.setException(new NoSuchHeaderException(exchange,name,String.class));
            callback.done(true);
            return true;
          }
        }
      }
    }
    String options=null;
    if (!query.isEmpty()) {
      options=URISupport.createQueryString(query);
    }
    Producer producer=createHttpProducer(exchange,operation,verb,path,options);
    if (producer != null) {
      AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer);
      return async.process(exchange,callback);
    }
  }
 catch (  Throwable e) {
    exchange.setException(e);
  }
  callback.done(true);
  return true;
}
