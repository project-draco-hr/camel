{
  KeyValueAnnotation key1=KeyValueAnnotation.create("camel.client.endpoint.url",url);
  KeyValueAnnotation key2=KeyValueAnnotation.create("camel.client.exchange.id",exchange.getExchangeId());
  KeyValueAnnotation key3=KeyValueAnnotation.create("camel.client.exchange.pattern",exchange.getPattern().name());
  KeyValueAnnotation key4=null;
  if (eventNotifier.isIncludeMessageBody() || eventNotifier.isIncludeMessageBodyStreams()) {
    boolean streams=eventNotifier.isIncludeMessageBodyStreams();
    StreamCache cache=prepareBodyForLogging(exchange,streams);
    String body=MessageHelper.extractBodyForLogging(exchange.hasOut() ? exchange.getOut() : exchange.getIn(),"",streams,streams);
    key4=KeyValueAnnotation.create("camel.client.exchange.message.response.body",body);
    if (cache != null) {
      cache.reset();
    }
  }
  KeyValueAnnotation key5=null;
  String responseCode=exchange.hasOut() ? exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE,String.class) : exchange.getIn().getHeader(Exchange.HTTP_RESPONSE_CODE,String.class);
  if (responseCode != null) {
    key5=KeyValueAnnotation.create("camel.client.exchange.message.response.code",responseCode);
  }
  List<KeyValueAnnotation> list=new ArrayList<>();
  list.add(key1);
  list.add(key2);
  list.add(key3);
  if (key4 != null) {
    list.add(key4);
  }
  if (key5 != null) {
    list.add(key5);
  }
  return list;
}
