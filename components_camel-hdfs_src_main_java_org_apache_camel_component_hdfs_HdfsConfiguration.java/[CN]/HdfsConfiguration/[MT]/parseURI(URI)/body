{
  String protocol=uri.getScheme();
  if (!protocol.equalsIgnoreCase("hdfs")) {
    throw new IllegalArgumentException("Unrecognized Cache protocol: " + protocol + " for uri: "+ uri);
  }
  hostName=uri.getHost();
  if (hostName == null) {
    hostName="localhost";
  }
  port=uri.getPort() == -1 ? HdfsConstants.DEFAULT_PORT : uri.getPort();
  path=uri.getPath();
  Map<String,Object> hdfsSettings=URISupport.parseParameters(uri);
  overwrite=getBoolean(hdfsSettings,"overwrite",overwrite);
  append=getBoolean(hdfsSettings,"append",append);
  bufferSize=getInteger(hdfsSettings,"bufferSize",bufferSize);
  replication=getShort(hdfsSettings,"replication",replication);
  blockSize=getLong(hdfsSettings,"blockSize",blockSize);
  compressionType=getCompressionType(hdfsSettings,"compressionType",compressionType);
  compressionCodec=getCompressionCodec(hdfsSettings,"compressionCodec",compressionCodec);
  fileType=getFileType(hdfsSettings,"fileType",fileType);
  fileSystemType=getFileSystemType(hdfsSettings,"fileSystemType",fileSystemType);
  keyType=getWritableType(hdfsSettings,"keyType",keyType);
  valueType=getWritableType(hdfsSettings,"valueType",valueType);
  openedSuffix=getString(hdfsSettings,"openedSuffix",openedSuffix);
  readSuffix=getString(hdfsSettings,"readSuffix",readSuffix);
  initialDelay=getLong(hdfsSettings,"initialDelay",initialDelay);
  delay=getLong(hdfsSettings,"delay",delay);
  pattern=getString(hdfsSettings,"pattern",pattern);
  chunkSize=getInteger(hdfsSettings,"chunkSize",chunkSize);
  splitStrategies=getSplitStrategies(hdfsSettings);
}
