{
  Set<Map.Entry<String,CamelContext>> entries=camelContextMap.getCamelContextMap().entrySet();
  for (  Map.Entry<String,CamelContext> entry : entries) {
    LOG.info("CamelContext " + entry.getKey() + " has endpoints: "+ entry.getValue().getEndpointMap().keySet());
  }
  CamelContext contextA=assertCamelContext("contextA");
  assertHasEndpoints(contextA,"seda://A.a","mock://A.b");
  MockEndpoint mockEndpoint=routesA.b;
  mockEndpoint.expectedBodiesReceived(Constants.EXPECTED_BODIES_A);
  routesA.sendMessages();
  mockEndpoint.assertIsSatisfied();
  CamelContext contextB=assertCamelContext("contextB");
  assertHasEndpoints(contextB,"seda://B.a","mock://B.b");
  MockEndpoint mockEndpointB=routesB.b;
  mockEndpointB.expectedBodiesReceived(Constants.EXPECTED_BODIES_B);
  routesB.sendMessages();
  mockEndpointB.assertIsSatisfied();
  CamelContext contextC=assertCamelContext("contextC");
  assertHasEndpoints(contextC,"seda://C.a","mock://C.b");
  MockEndpoint mockEndpointC=routesC.b;
  mockEndpointC.expectedBodiesReceived(Constants.EXPECTED_BODIES_C);
  routesC.sendMessages();
  mockEndpointC.assertIsSatisfied();
  CamelContext contextD=assertCamelContext("contextD");
  assertHasEndpoints(contextD,"seda://D.a","mock://D.b");
  MockEndpoint mockEndpointD=routesD.b;
  mockEndpointD.expectedBodiesReceived(Constants.EXPECTED_BODIES_D);
  routesD.sendMessages();
  mockEndpointD.assertIsSatisfied();
  CamelContext contextE=assertCamelContext("contextE");
  assertHasEndpoints(contextE,"seda://E.a","mock://E.b","seda://E.c","mock://E.d");
  MockEndpoint mockEb=CamelContextHelper.getMandatoryEndpoint(contextE,"mock://E.b",MockEndpoint.class);
  MockEndpoint mockEd=CamelContextHelper.getMandatoryEndpoint(contextE,"mock://E.d",MockEndpoint.class);
  mockEb.expectedBodiesReceived(Constants.EXPECTED_BODIES_Ea);
  mockEd.expectedBodiesReceived(Constants.EXPECTED_BODIES_Ec);
  for (  Object body : Constants.EXPECTED_BODIES_Ea) {
    producerE.sendBody("seda:E.a",body);
  }
  for (  Object body : Constants.EXPECTED_BODIES_Ec) {
    producerE.sendBody("seda:E.c",body);
  }
  mockEb.assertIsSatisfied();
  mockEd.assertIsSatisfied();
}
