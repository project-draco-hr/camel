{
  Message answer=null;
  Object body=null;
  try {
    if (out && exchange.getOut().getBody() != null) {
      body=exchange.getOut().getBody();
    }
 else {
      body=exchange.getIn().getBody();
    }
    JmsMessageType messageType=JmsMessageExchangeHelper.discoverType(exchange);
switch (messageType) {
case Bytes:
      BytesMessage bytesMessage=session.createBytesMessage();
    bytesMessage.writeBytes((byte[])body);
  answer=bytesMessage;
break;
case Map:
MapMessage mapMessage=session.createMapMessage();
Map<String,Object> objMap=(Map<String,Object>)body;
Set<String> keys=objMap.keySet();
for (String key : keys) {
Object value=objMap.get(key);
mapMessage.setObject(key,value);
}
answer=mapMessage;
break;
case Object:
ObjectMessage objectMessage=session.createObjectMessage();
objectMessage.setObject((Serializable)body);
answer=objectMessage;
break;
case Text:
TextMessage textMessage=session.createTextMessage();
textMessage.setText((String)body);
answer=textMessage;
break;
default :
answer=session.createMessage();
break;
}
}
 catch (Exception e) {
LOGGER.error("TODO Auto-generated catch block",e);
throw e;
}
answer=JmsMessageExchangeHelper.setJmsMessageHeaders(exchange,answer);
return answer;
}
