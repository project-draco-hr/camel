{
  log.trace("Parsing property key: {} with value: {}",key,value);
  String answer=null;
  if (key != null && propertiesComponent.getOverrideProperties() != null) {
    answer=(String)propertiesComponent.getOverrideProperties().get(key);
  }
  if (answer == null && key != null) {
    for (    AbstractPropertyPlaceholder placeholder : placeholders) {
      boolean isDefault=false;
      if (placeholders.size() > 1) {
        if (placeholder instanceof PropertyPlaceholder) {
          isDefault=((PropertyPlaceholder)placeholder).getDefaultProperties().containsKey(key);
        }
        log.trace("Blueprint property key: {} is part of default properties: {}",key,isDefault);
      }
      String candidate=(String)ObjectHelper.invokeMethod(method,placeholder,key);
      if (candidate != null) {
        if (answer == null || !isDefault) {
          log.trace("Blueprint parsed candidate property key: {} as value: {}",key,answer);
          answer=candidate;
        }
      }
    }
    log.debug("Blueprint parsed property key: {} as value: {}",key,answer);
  }
  if (delegate != null) {
    String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties);
    if (delegateAnswer != null) {
      answer=delegateAnswer;
    }
  }
  log.trace("Returning parsed property key: {} as value: {}",key,answer);
  return answer;
}
