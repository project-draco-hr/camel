{
  Object component=container.getComponentInstance(id);
  if (component instanceof AbstractPropertyPlaceholder) {
    AbstractPropertyPlaceholder placeholder=(AbstractPropertyPlaceholder)component;
    placeholders.add(placeholder);
    log.debug("Adding Blueprint PropertyPlaceholder: {}",id);
    if (method == null) {
      try {
        method=AbstractPropertyPlaceholder.class.getDeclaredMethod("retrieveValue",String.class);
        method.setAccessible(true);
      }
 catch (      NoSuchMethodException e) {
        throw new IllegalStateException("Cannot add blueprint property placeholder: " + id + " as the method retrieveValue is not accessible",e);
      }
    }
  }
}
