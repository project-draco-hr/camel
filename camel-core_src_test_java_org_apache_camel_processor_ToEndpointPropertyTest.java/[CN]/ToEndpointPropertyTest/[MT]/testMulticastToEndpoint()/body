{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").multicast().to("direct:a","direct:b").end().process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          String to=exchange.getProperty(Exchange.TO_ENDPOINT,String.class);
          assertEquals("direct://b",to);
        }
      }
).to("mock:result");
      from("direct:a").transform(constant("A"));
      from("direct:b").transform(constant("B"));
    }
  }
);
  context.start();
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMessageCount(1);
  result.message(0).property(Exchange.FAILURE_ENDPOINT).isNull();
  result.message(0).property(Exchange.TO_ENDPOINT).isEqualTo("mock://result");
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
}
