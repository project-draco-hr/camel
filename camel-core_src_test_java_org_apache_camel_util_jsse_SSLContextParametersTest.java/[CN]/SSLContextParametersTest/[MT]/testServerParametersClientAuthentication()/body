{
  SSLContext controlContext=SSLContext.getInstance("TLS");
  controlContext.init(null,null,null);
  SSLEngine controlEngine=controlContext.createSSLEngine();
  SSLServerSocket controlServerSocket=(SSLServerSocket)controlContext.getServerSocketFactory().createServerSocket();
  SSLContextParameters scp=new SSLContextParameters();
  SSLContextServerParameters scsp=new SSLContextServerParameters();
  scp.setServerParameters(scsp);
  SSLContext context=scp.createSSLContext();
  SSLEngine engine=context.createSSLEngine();
  SSLServerSocket serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(controlServerSocket.getWantClientAuth(),serverSocket.getWantClientAuth());
  assertEquals(controlServerSocket.getNeedClientAuth(),serverSocket.getNeedClientAuth());
  assertEquals(controlEngine.getWantClientAuth(),engine.getWantClientAuth());
  assertEquals(controlEngine.getNeedClientAuth(),engine.getNeedClientAuth());
  scsp.setClientAuthentication(ClientAuthentication.NONE.name());
  context=scp.createSSLContext();
  engine=context.createSSLEngine();
  serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(false,serverSocket.getWantClientAuth());
  assertEquals(false,serverSocket.getNeedClientAuth());
  assertEquals(false,engine.getWantClientAuth());
  assertEquals(false,engine.getNeedClientAuth());
  scsp.setClientAuthentication(ClientAuthentication.WANT.name());
  context=scp.createSSLContext();
  engine=context.createSSLEngine();
  serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(true,serverSocket.getWantClientAuth());
  assertEquals(false,serverSocket.getNeedClientAuth());
  assertEquals(true,engine.getWantClientAuth());
  assertEquals(false,engine.getNeedClientAuth());
  scsp.setClientAuthentication(ClientAuthentication.REQUIRE.name());
  context=scp.createSSLContext();
  engine=context.createSSLEngine();
  serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(false,serverSocket.getWantClientAuth());
  assertEquals(true,serverSocket.getNeedClientAuth());
  assertEquals(false,engine.getWantClientAuth());
  assertEquals(true,engine.getNeedClientAuth());
}
