{
  SSLContext controlContext=SSLContext.getInstance("TLS");
  controlContext.init(null,null,null);
  SSLEngine controlEngine=controlContext.createSSLEngine();
  SSLSocket controlSocket=(SSLSocket)controlContext.getSocketFactory().createSocket();
  SSLServerSocket controlServerSocket=(SSLServerSocket)controlContext.getServerSocketFactory().createServerSocket();
  SSLContextParameters scp=new SSLContextParameters();
  SSLContext context=scp.createSSLContext();
  SSLEngine engine=context.createSSLEngine();
  SSLSocket socket=(SSLSocket)context.getSocketFactory().createSocket();
  SSLServerSocket serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertTrue(Arrays.equals(controlEngine.getEnabledCipherSuites(),engine.getEnabledCipherSuites()));
  assertTrue(Arrays.equals(controlSocket.getEnabledCipherSuites(),socket.getEnabledCipherSuites()));
  assertTrue(Arrays.equals(this.getDefaultCipherSuiteIncludes(controlServerSocket.getSupportedCipherSuites()),serverSocket.getEnabledCipherSuites()));
  CipherSuitesParameters csp=new CipherSuitesParameters();
  scp.setCipherSuites(csp);
  context=scp.createSSLContext();
  engine=context.createSSLEngine();
  socket=(SSLSocket)context.getSocketFactory().createSocket();
  serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(0,engine.getEnabledCipherSuites().length);
  assertEquals(0,socket.getEnabledCipherSuites().length);
  assertEquals(0,serverSocket.getEnabledCipherSuites().length);
  csp.getCipherSuite().add(controlEngine.getEnabledCipherSuites()[0]);
  context=scp.createSSLContext();
  engine=context.createSSLEngine();
  socket=(SSLSocket)context.getSocketFactory().createSocket();
  serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(1,engine.getEnabledCipherSuites().length);
  assertEquals(controlEngine.getEnabledCipherSuites()[0],engine.getEnabledCipherSuites()[0]);
  assertEquals(1,socket.getEnabledCipherSuites().length);
  assertEquals(controlEngine.getEnabledCipherSuites()[0],socket.getEnabledCipherSuites()[0]);
  assertEquals(1,serverSocket.getEnabledCipherSuites().length);
  assertEquals(controlEngine.getEnabledCipherSuites()[0],serverSocket.getEnabledCipherSuites()[0]);
  FilterParameters filter=new FilterParameters();
  filter.getInclude().add(".*");
  scp.setCipherSuitesFilter(filter);
  context=scp.createSSLContext();
  engine=context.createSSLEngine();
  socket=(SSLSocket)context.getSocketFactory().createSocket();
  serverSocket=(SSLServerSocket)context.getServerSocketFactory().createServerSocket();
  assertEquals(1,engine.getEnabledCipherSuites().length);
  assertEquals(controlEngine.getEnabledCipherSuites()[0],engine.getEnabledCipherSuites()[0]);
  assertEquals(1,socket.getEnabledCipherSuites().length);
  assertEquals(controlEngine.getEnabledCipherSuites()[0],socket.getEnabledCipherSuites()[0]);
  assertEquals(1,socket.getEnabledCipherSuites().length);
  assertEquals(controlEngine.getEnabledCipherSuites()[0],serverSocket.getEnabledCipherSuites()[0]);
}
