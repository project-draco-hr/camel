{
  Object e=graph;
  if (partialClass != null && getPartNamespace() != null) {
    e=new JAXBElement<Object>(getPartNamespace(),partialClass,graph);
  }
  if (introspector.isElement(e)) {
    if (asXmlStreamWriter(exchange)) {
      XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);
      if (needFiltering(exchange)) {
        writer=new FilteringXmlStreamWriter(writer);
      }
      if (xmlStreamWriterWrapper != null) {
        writer=xmlStreamWriterWrapper.wrapWriter(writer);
      }
      marshaller.marshal(e,writer);
    }
 else {
      marshaller.marshal(e,stream);
    }
  }
 else   if (!mustBeJAXBElement) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Attempt to marshalling non JAXBElement with type {} as InputStream",ObjectHelper.classCanonicalName(graph));
    }
    InputStream is=exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,graph);
    IOHelper.copyAndCloseInput(is,stream);
  }
 else {
    throw new InvalidPayloadException(exchange,JAXBElement.class);
  }
}
