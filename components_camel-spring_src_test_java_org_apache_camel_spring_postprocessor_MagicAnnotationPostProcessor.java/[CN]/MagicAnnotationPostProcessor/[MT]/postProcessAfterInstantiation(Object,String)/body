{
  ReflectionUtils.doWithFields(bean.getClass(),new ReflectionUtils.FieldCallback(){
    public void doWith(    Field field) throws IllegalArgumentException, IllegalAccessException {
      MagicAnnotation annotation=field.getAnnotation(MagicAnnotation.class);
      if (annotation != null && field.getType() == String.class) {
        log.info("Found MagicAnnotation on field " + field + " of class "+ bean.getClass());
        ReflectionUtils.makeAccessible(field);
        field.set(bean,annotation.value());
      }
    }
  }
);
  return true;
}
