{
  String scope="http://scope1.example.org,http://scope2.example.org";
  StringBuffer buffer=new StringBuffer("gauth://authorize").append("?").append("scope=" + encode(scope,"UTF-8")).append("&").append("callback=" + encode("http://callback.example.org","UTF-8")).append("&").append("consumerKey=customConsumerKey").append("&").append("consumerSecret=customConsumerSecret").append("&").append("authorizeBindingRef=#customAuthorizeBinding").append("&").append("upgradeBindingRef=#customUpgradeBinding").append("&").append("keyLoaderRef=#gAuthKeyLoader").append("&").append("serviceRef=#gAuthService");
  GAuthEndpoint endpoint=component.createEndpoint(buffer.toString());
  assertEquals(AUTHORIZE,endpoint.getName());
  assertArrayEquals(new String[]{"http://scope1.example.org","http://scope2.example.org"},endpoint.getScopeArray());
  assertEquals(scope,endpoint.getScope());
  assertEquals("http://callback.example.org",endpoint.getCallback());
  assertEquals("customConsumerKey",endpoint.getConsumerKey());
  assertEquals("customConsumerSecret",endpoint.getConsumerSecret());
  assertFalse(endpoint.getAuthorizeBinding().getClass().equals(GAuthAuthorizeBinding.class));
  assertFalse(endpoint.getUpgradeBinding().getClass().equals(GAuthUpgradeBinding.class));
  assertTrue(endpoint.getAuthorizeBinding() instanceof GAuthAuthorizeBinding);
  assertTrue(endpoint.getUpgradeBinding() instanceof GAuthUpgradeBinding);
  assertTrue(endpoint.getKeyLoader() instanceof GAuthPk8Loader);
  assertTrue(endpoint.getService() instanceof GAuthServiceMock);
}
