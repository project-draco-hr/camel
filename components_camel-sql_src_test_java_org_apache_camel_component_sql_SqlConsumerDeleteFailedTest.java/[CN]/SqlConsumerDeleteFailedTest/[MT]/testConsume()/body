{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(2);
  assertMockEndpointsSatisfied();
  List<Exchange> exchanges=mock.getReceivedExchanges();
  assertEquals(2,exchanges.size());
  assertEquals(1,exchanges.get(0).getIn().getBody(Map.class).get("ID"));
  assertEquals("Camel",exchanges.get(0).getIn().getBody(Map.class).get("PROJECT"));
  assertEquals(3,exchanges.get(1).getIn().getBody(Map.class).get("ID"));
  assertEquals("Linux",exchanges.get(1).getIn().getBody(Map.class).get("PROJECT"));
  Thread.sleep(1000);
  assertEquals("Should have deleted 2 rows",1,jdbcTemplate.queryForInt("select count(*) from projects"));
  assertEquals("Should be AMQ project that is BAD","AMQ",jdbcTemplate.queryForObject("select PROJECT from projects where license = 'BAD'",String.class));
}
