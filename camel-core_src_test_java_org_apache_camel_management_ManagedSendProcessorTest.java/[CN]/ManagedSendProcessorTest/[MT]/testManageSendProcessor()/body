{
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMessageCount(1);
  MockEndpoint foo=getMockEndpoint("mock:foo");
  foo.expectedMessageCount(0);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=processors,name=\"mysend\"");
  String routeId=(String)mbeanServer.getAttribute(on,"RouteId");
  assertEquals("route1",routeId);
  String camelId=(String)mbeanServer.getAttribute(on,"CamelId");
  assertEquals("camel-1",camelId);
  String state=(String)mbeanServer.getAttribute(on,"State");
  assertEquals(ServiceStatus.Started.name(),state);
  String destination=(String)mbeanServer.getAttribute(on,"Destination");
  assertEquals("mock://result",destination);
  String pattern=(String)mbeanServer.getAttribute(on,"MessageExchangePattern");
  assertNull(pattern);
  mbeanServer.invoke(on,"changeDestination",new Object[]{"direct:foo"},new String[]{"java.lang.String"});
  result.reset();
  result.expectedMessageCount(0);
  foo.reset();
  foo.expectedMessageCount(1);
  template.sendBody("direct:start","Bye World");
  assertMockEndpointsSatisfied();
}
