{
  JobParameters jobParameters=prepareJobParameters(exchange.getIn().getHeaders());
  String messageJobName=jobParameters.getString(SpringBatchComponent.DYNAMIC_JOBNAME);
  Job job2run=this.job;
  if (messageJobName != null) {
    Job dynamicJob=CamelContextHelper.mandatoryLookup(getEndpoint().getCamelContext(),messageJobName,Job.class);
    job2run=dynamicJob;
    if (job2run == null) {
      exchange.setException(new CamelExchangeException("Found header " + SpringBatchComponent.DYNAMIC_JOBNAME + " with value "+ messageJobName+ " but could not find a Job in camel context",exchange));
      return;
    }
  }
  if (job2run == null) {
    exchange.setException(new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchComponent.DYNAMIC_JOBNAME + " could not be found",exchange));
    return;
  }
  JobExecution jobExecution=jobLauncher.run(job2run,jobParameters);
  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());
  exchange.getOut().setBody(jobExecution);
}
