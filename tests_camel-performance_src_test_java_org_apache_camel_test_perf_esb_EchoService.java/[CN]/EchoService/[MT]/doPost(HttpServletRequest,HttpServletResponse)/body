{
  ByteBuffer bb;
  List<ByteBuffer> bbList=null;
  try {
    int bufKBytes=DEFAULT_BUFFER_SIZE;
    int delaySecs=0;
    String soapAction=request.getHeader("SOAPAction");
    if (soapAction != null) {
      if (soapAction.startsWith("\"")) {
        soapAction=soapAction.replaceAll("\"","");
      }
      int dotPos=soapAction.indexOf(".");
      int secondDotPos=(dotPos == -1 ? -1 : soapAction.indexOf(".",dotPos + 1));
      if (secondDotPos > 0) {
        bufKBytes=Integer.parseInt(soapAction.substring(dotPos + 1,secondDotPos));
        delaySecs=Integer.parseInt(soapAction.substring(secondDotPos + 1));
      }
 else       if (dotPos > 0) {
        bufKBytes=Integer.parseInt(soapAction.substring(dotPos + 1));
      }
    }
    bb=ByteBuffer.allocate(bufKBytes * 1024);
    ReadableByteChannel rbc=Channels.newChannel(request.getInputStream());
    int len, tot=0;
    while ((len=rbc.read(bb)) > 0) {
      tot+=len;
      if (tot >= bb.capacity()) {
        if (bbList == null) {
          bbList=new ArrayList<ByteBuffer>();
        }
        bb.flip();
        bbList.add(bb);
        bufKBytes=bufKBytes * 2;
        bb=ByteBuffer.allocate(bufKBytes * 1024);
      }
    }
    bb.flip();
    String sleep=request.getHeader("sleep");
    if (sleep != null) {
      String port=request.getHeader("port");
      if (port != null) {
        if (request.getLocalPort() == Integer.parseInt(port)) {
          Long sleepVal=Long.parseLong(sleep);
          System.out.println("Echo Service on port : " + port + " sleeping for : "+ sleepVal);
          Thread.sleep(sleepVal);
        }
      }
 else {
        Long sleepVal=Long.parseLong(sleep);
        System.out.println("Echo Service on port : " + request.getLocalPort() + " sleeping for : "+ sleepVal);
        Thread.sleep(sleepVal);
      }
    }
    if (bbList != null) {
      bbList.add(bb);
    }
    if (delaySecs > 0 && request.getLocalPort() == 9000) {
      Thread.sleep(delaySecs * 1000);
    }
 else     if (delayMillis > 0) {
      Thread.sleep(delayMillis);
    }
    response.setContentType(request.getContentType());
    response.setHeader("port",Integer.toString(request.getLocalPort()));
    OutputStream out=response.getOutputStream();
    WritableByteChannel wbc=Channels.newChannel(out);
    if (bbList == null) {
      do {
        len=wbc.write(bb);
      }
 while (len > 0);
    }
 else {
      for (      ByteBuffer b : bbList) {
        do {
          len=wbc.write(b);
        }
 while (len > 0);
      }
    }
    out.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
