{
  if (systemReady) {
    Map<String,Object> headers=new HashMap<>();
    headers.put(HBaseConstants.OPERATION,HBaseConstants.PUT);
    headers.put(HBaseAttribute.HBASE_ROW_ID.asHeader(),"1");
    headers.put(HBaseAttribute.HBASE_FAMILY.asHeader(),"info");
    headers.put(HBaseAttribute.HBASE_QUALIFIER.asHeader(),"id");
    headers.put(HBaseAttribute.HBASE_VALUE.asHeader(),"3");
    template.sendBodyAndHeaders("direct:start",null,headers);
    Configuration configuration=hbaseUtil.getHBaseAdmin().getConfiguration();
    Connection conn=ConnectionFactory.createConnection(configuration);
    Table bar=conn.getTable(TableName.valueOf(PERSON_TABLE));
    Get get=new Get("1".getBytes());
    get.addColumn("info".getBytes(),"id".getBytes());
    Result result=bar.get(get);
    assertArrayEquals("3".getBytes(),result.value());
    IOHelper.close(bar);
    Exchange resp=template.request("direct:scan",new Processor(){
      public void process(      Exchange exchange) throws Exception {
        exchange.getIn().setHeader(HBaseAttribute.HBASE_FAMILY.asHeader(),"info");
        exchange.getIn().setHeader(HBaseAttribute.HBASE_QUALIFIER.asHeader(),"id");
      }
    }
);
    assertEquals("1",resp.getOut().getHeader(HBaseAttribute.HBASE_ROW_ID.asHeader()));
    assertEquals("info",resp.getOut().getHeader(HBaseAttribute.HBASE_FAMILY.asHeader()));
    assertEquals("id",resp.getOut().getHeader(HBaseAttribute.HBASE_QUALIFIER.asHeader()));
    assertEquals("3",resp.getOut().getHeader(HBaseAttribute.HBASE_VALUE.asHeader()));
  }
}
