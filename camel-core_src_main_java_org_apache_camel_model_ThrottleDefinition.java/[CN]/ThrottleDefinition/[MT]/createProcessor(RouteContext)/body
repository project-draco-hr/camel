{
  Processor childProcessor=this.createChildProcessor(routeContext,true);
  boolean shutdownThreadPool=ProcessorDefinitionHelper.willCreateNewThreadPool(routeContext,this,isAsyncDelayed());
  ScheduledExecutorService threadPool=ProcessorDefinitionHelper.getConfiguredScheduledExecutorService(routeContext,"Throttle",this,isAsyncDelayed());
  long period=getTimePeriodMillis() != null ? getTimePeriodMillis() : 1000L;
  Expression maxRequestsExpression=createMaxRequestsPerPeriodExpression(routeContext);
  if (maxRequestsExpression == null) {
    throw new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this);
  }
  Throttler answer=new Throttler(routeContext.getCamelContext(),childProcessor,maxRequestsExpression,period,threadPool,shutdownThreadPool,isRejectExecution());
  if (getAsyncDelayed() != null) {
    answer.setAsyncDelayed(getAsyncDelayed());
  }
  if (getCallerRunsWhenRejected() == null) {
    answer.setCallerRunsWhenRejected(true);
  }
 else {
    answer.setCallerRunsWhenRejected(getCallerRunsWhenRejected());
  }
  return answer;
}
