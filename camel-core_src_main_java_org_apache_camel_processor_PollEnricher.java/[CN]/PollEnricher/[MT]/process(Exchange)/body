{
  preCheckPoll(exchange);
  Exchange resourceExchange;
  if (timeout < 0) {
    LOG.debug("Consumer receive: {}",consumer);
    resourceExchange=consumer.receive();
  }
 else   if (timeout == 0) {
    LOG.debug("Consumer receiveNoWait: {}",consumer);
    resourceExchange=consumer.receiveNoWait();
  }
 else {
    LOG.debug("Consumer receive with timeout: {} ms. {}",timeout,consumer);
    resourceExchange=consumer.receive(timeout);
  }
  if (resourceExchange == null) {
    LOG.debug("Consumer received no exchange");
  }
 else {
    LOG.debug("Consumer received: {}",resourceExchange);
  }
  if (resourceExchange != null && resourceExchange.isFailed()) {
    copyResultsPreservePattern(exchange,resourceExchange);
  }
 else {
    prepareResult(exchange);
    try {
      ExchangeHelper.prepareAggregation(exchange,resourceExchange);
      Exchange aggregatedExchange=aggregationStrategy.aggregate(exchange,resourceExchange);
      if (aggregatedExchange != null) {
        copyResultsPreservePattern(exchange,aggregatedExchange);
        if (resourceExchange != null) {
          resourceExchange.handoverCompletions(exchange);
        }
      }
    }
 catch (    Throwable e) {
      throw new CamelExchangeException("Error occurred during aggregation",exchange,e);
    }
  }
  if (exchange.hasOut()) {
    exchange.getOut().setHeader(Exchange.TO_ENDPOINT,consumer.getEndpoint().getEndpointUri());
  }
 else {
    exchange.getIn().setHeader(Exchange.TO_ENDPOINT,consumer.getEndpoint().getEndpointUri());
  }
}
