{
  Object bean=null;
  try {
    bean=context.getRegistry().lookup(name);
    getLog().debug("Found component: {} in registry: {}",name,bean);
  }
 catch (  Exception e) {
    getLog().debug("Ignored error looking up bean: " + name,e);
  }
  if (bean != null) {
    if (bean instanceof Component) {
      return (Component)bean;
    }
 else {
      Component component=CamelContextHelper.convertTo(context,Component.class,bean);
      if (component != null) {
        return component;
      }
    }
  }
  Class<?> type;
  try {
    type=findComponent(name,context);
    if (type == null) {
      return null;
    }
  }
 catch (  NoFactoryAvailableException e) {
    return null;
  }
catch (  Exception e) {
    throw new IllegalArgumentException("Invalid URI, no Component registered for scheme: " + name,e);
  }
  if (getLog().isDebugEnabled()) {
    getLog().debug("Found component: {} via type: {} via: {}{}",new Object[]{name,type.getName(),factoryFinder.getResourcePath(),name});
  }
  if (Component.class.isAssignableFrom(type)) {
    return (Component)context.getInjector().newInstance(type);
  }
 else {
    throw new IllegalArgumentException("Type is not a Component implementation. Found: " + type.getName());
  }
}
