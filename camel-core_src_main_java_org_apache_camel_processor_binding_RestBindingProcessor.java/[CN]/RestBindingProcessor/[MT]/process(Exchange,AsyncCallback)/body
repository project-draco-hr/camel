{
  if (bindingMode == null || "off".equals(bindingMode)) {
    callback.done(true);
    return true;
  }
  if (jsonUnmarshal == null && xmlUnmarshal == null) {
    callback.done(true);
    return true;
  }
  if (exchange.getIn().getBody() == null) {
    callback.done(true);
    return true;
  }
  boolean isXml=false;
  boolean isJson=false;
  String contentType=ExchangeHelper.getContentType(exchange);
  if (contentType != null) {
    isXml=contentType.toLowerCase(Locale.US).contains("xml");
    isJson=contentType.toLowerCase(Locale.US).contains("json");
  }
  if (!isXml && !isJson) {
    isXml=consumes != null && consumes.toLowerCase(Locale.US).contains("xml");
    isJson=consumes != null && consumes.toLowerCase(Locale.US).contains("json");
  }
  if (!isXml && !isJson) {
    String body=MessageHelper.extractBodyAsString(exchange.getIn());
    if (body != null) {
      isXml=body.startsWith("<") || body.contains("xml");
      isJson=!isXml;
    }
  }
  isXml&=bindingMode.equals("auto") || bindingMode.contains("xml");
  isJson&=bindingMode.equals("auto") || bindingMode.contains("json");
  if (isXml && xmlUnmarshal != null) {
    exchange.addOnCompletion(new RestBindingMarshalOnCompletion(jsonMmarshal,xmlMmarshal));
    return xmlUnmarshal.process(exchange,callback);
  }
 else   if (isJson && jsonUnmarshal != null) {
    exchange.addOnCompletion(new RestBindingMarshalOnCompletion(jsonMmarshal,xmlMmarshal));
    return jsonUnmarshal.process(exchange,callback);
  }
  if (bindingMode.equals("auto")) {
    callback.done(true);
    return true;
  }
 else {
    if (bindingMode.contains("xml")) {
      exchange.setException(new BindingException("Cannot bind to xml as message body is not xml compatible",exchange));
    }
 else {
      exchange.setException(new BindingException("Cannot bind to json as message body is not json compatible",exchange));
    }
    callback.done(true);
    return true;
  }
}
