{
  getMockEndpoint("mock:handled").expectedMessageCount(1);
  MockEndpoint traced=getMockEndpoint("mock:traced");
  traced.expectedMessageCount(4);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  DefaultTraceEventMessage em1=traced.getReceivedExchanges().get(0).getIn().getBody(DefaultTraceEventMessage.class);
  DefaultTraceEventMessage em2=traced.getReceivedExchanges().get(1).getIn().getBody(DefaultTraceEventMessage.class);
  DefaultTraceEventMessage em3=traced.getReceivedExchanges().get(2).getIn().getBody(DefaultTraceEventMessage.class);
  DefaultTraceEventMessage em4=traced.getReceivedExchanges().get(3).getIn().getBody(DefaultTraceEventMessage.class);
  assertNotNull(em1);
  assertNotNull(em2);
  assertNotNull(em3);
  assertNotNull(em4);
  assertNull(em1.getCausedByException());
  assertNull(em2.getCausedByException());
  assertEquals("java.lang.IllegalArgumentException: Forced",em3.getCausedByException());
  assertEquals("java.lang.IllegalArgumentException: Forced",em4.getCausedByException());
}
