{
  context.getManagementStrategy().getManagementAgent().setRegisterAlways(true);
  ConsumerCache cache=new ConsumerCache(this,context);
  context.addService(cache);
  template.sendBody("direct:start","Hello World");
  Exchange out=cache.getConsumer(context.getEndpoint("seda:queue")).receive(3000);
  assertNotNull("Should got an exchange",out);
  assertEquals("Hello World",out.getIn().getBody());
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=services,*"),null);
  assertEquals(8,set.size());
  List<ObjectName> list=new ArrayList<ObjectName>(set);
  ObjectName on=null;
  for (  ObjectName name : list) {
    if (name.getCanonicalName().contains("ConsumerCache")) {
      on=name;
      break;
    }
  }
  assertNotNull("Should have found ConsumerCache",on);
  Integer max=(Integer)mbeanServer.getAttribute(on,"MaximumCacheSize");
  assertEquals(1000,max.intValue());
  Integer current=(Integer)mbeanServer.getAttribute(on,"Size");
  assertEquals(1,current.intValue());
  String source=(String)mbeanServer.getAttribute(on,"Source");
  assertNotNull(source);
  assertTrue(source.contains("testManageConsumerCache"));
  mbeanServer.invoke(on,"purge",null,null);
  current=(Integer)mbeanServer.getAttribute(on,"Size");
  assertEquals(0,current.intValue());
}
