{
  for (  Map.Entry<String,Object> entry : exchange.getIn().getHeaders().entrySet()) {
    String headerName=entry.getKey();
    Object headerValue=entry.getValue();
    if (headerValue != null) {
      if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToCamelHeaders(headerName,headerValue,exchange)) {
        if (headerName.equalsIgnoreCase("subject")) {
          mimeMessage.setSubject(asString(exchange,headerValue),determineCharSet(configuration,exchange));
          continue;
        }
        if (headerName.equalsIgnoreCase("from")) {
          mimeMessage.setFrom(asEncodedInternetAddress(asString(exchange,headerValue),determineCharSet(configuration,exchange)));
          continue;
        }
        if (headerName.equalsIgnoreCase("sender")) {
          mimeMessage.setSender(asEncodedInternetAddress(asString(exchange,headerValue),determineCharSet(configuration,exchange)));
          continue;
        }
        if (isRecipientHeader(headerName)) {
          continue;
        }
        if (headerName.equalsIgnoreCase(configuration.getAlternativeBodyHeader())) {
          continue;
        }
        if (ObjectConverter.isCollection(headerValue)) {
          Iterator<?> iter=ObjectHelper.createIterator(headerValue);
          while (iter.hasNext()) {
            Object value=iter.next();
            mimeMessage.addHeader(headerName,asString(exchange,value));
          }
        }
 else {
          mimeMessage.setHeader(headerName,asString(exchange,headerValue));
        }
      }
    }
  }
}
