{
  if (hasRecipientHeaders(exchange)) {
    setRecipientFromCamelMessage(mimeMessage,endpoint.getConfiguration(),exchange);
  }
 else {
    setRecipientFromEndpointConfiguration(mimeMessage,endpoint,exchange);
  }
  String replyTo=exchange.getIn().getHeader("Reply-To",String.class);
  if (replyTo == null) {
    replyTo=endpoint.getConfiguration().getReplyTo();
  }
  if (replyTo != null) {
    List<InternetAddress> replyToAddresses=new ArrayList<InternetAddress>();
    for (    String reply : splitRecipients(replyTo)) {
      replyToAddresses.add(asEncodedInternetAddress(reply.trim(),determineCharSet(endpoint.getConfiguration(),exchange)));
    }
    mimeMessage.setReplyTo(replyToAddresses.toArray(new InternetAddress[replyToAddresses.size()]));
  }
  if (mimeMessage.getAllRecipients() == null) {
    throw new IllegalArgumentException("The mail message does not have any recipients set.");
  }
  String subject=endpoint.getConfiguration().getSubject();
  if (subject != null) {
    mimeMessage.setSubject(subject,IOHelper.getCharsetName(exchange,false));
  }
  appendHeadersFromCamelMessage(mimeMessage,endpoint.getConfiguration(),exchange);
  if (empty(mimeMessage.getFrom())) {
    String from=endpoint.getConfiguration().getFrom();
    mimeMessage.setFrom(asEncodedInternetAddress(from,determineCharSet(endpoint.getConfiguration(),exchange)));
  }
  if (hasAlternativeBody(endpoint.getConfiguration(),exchange)) {
    createMultipartAlternativeMessage(mimeMessage,endpoint.getConfiguration(),exchange);
  }
 else {
    if (exchange.getIn().hasAttachments()) {
      appendAttachmentsFromCamel(mimeMessage,endpoint.getConfiguration(),exchange);
    }
 else {
      populateContentOnMimeMessage(mimeMessage,endpoint.getConfiguration(),exchange);
    }
  }
}
