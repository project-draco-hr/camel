{
  InputStream in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class);
  File file=createFileName(exchange);
  buildDirectory(file);
  if (LOG.isDebugEnabled()) {
    LOG.debug("About to write to: " + file + " from exchange: "+ exchange);
  }
  FileChannel fc=null;
  try {
    if (getEndpoint().isAppend()) {
      fc=new RandomAccessFile(file,"rw").getChannel();
      fc.position(fc.size());
    }
 else {
      fc=new FileOutputStream(file).getChannel();
    }
    int size=getEndpoint().getBufferSize();
    byte[] buffer=new byte[size];
    ByteBuffer byteBuffer=ByteBuffer.wrap(buffer);
    while (true) {
      int count=in.read(buffer);
      if (count <= 0) {
        break;
      }
 else       if (count < size) {
        byteBuffer=ByteBuffer.wrap(buffer,0,count);
        fc.write(byteBuffer);
        break;
      }
 else {
        fc.write(byteBuffer);
      }
    }
  }
  finally {
    if (in != null) {
      try {
        in.close();
      }
 catch (      IOException e) {
        LOG.warn("Failed to close input: " + e,e);
      }
    }
    if (fc != null) {
      try {
        fc.close();
      }
 catch (      IOException e) {
        LOG.warn("Failed to close output: " + e,e);
      }
    }
  }
}
