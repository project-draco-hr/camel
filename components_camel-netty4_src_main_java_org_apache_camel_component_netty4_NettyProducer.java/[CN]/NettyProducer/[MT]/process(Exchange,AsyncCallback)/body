{
  if (!isRunAllowed()) {
    if (exchange.getException() == null) {
      exchange.setException(new RejectedExecutionException());
    }
    callback.done(true);
    return true;
  }
  Object body;
  try {
    body=getRequestBody(exchange);
    if (body == null) {
      noReplyLogger.log("No payload to send for exchange: " + exchange);
      callback.done(true);
      return true;
    }
  }
 catch (  Exception e) {
    exchange.setException(e);
    callback.done(true);
    return true;
  }
  if (getConfiguration().getCharsetName() != null) {
    exchange.setProperty(Exchange.CHARSET_NAME,IOHelper.normalizeCharset(getConfiguration().getCharsetName()));
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Pool[active={}, idle={}]",pool.getNumActive(),pool.getNumIdle());
  }
  ChannelFuture channelFuture=null;
  Channel channel=null;
  try {
    if (getConfiguration().isReuseChannel()) {
      channel=exchange.getProperty(NettyConstants.NETTY_CHANNEL,Channel.class);
    }
    if (channel == null) {
      channelFuture=pool.borrowObject();
      if (channelFuture != null) {
        LOG.trace("Got channel request from pool {}",channelFuture);
      }
    }
 else {
      channelFuture=channel.newSucceededFuture();
    }
  }
 catch (  Exception e) {
    exchange.setException(e);
    callback.done(true);
    return true;
  }
  if (channelFuture == null) {
    exchange.setException(new CamelExchangeException("Cannot get channel from pool",exchange));
    callback.done(true);
    return true;
  }
  channelFuture.addListener(new ChannelConnectedListener(exchange,callback,body));
  return false;
}
