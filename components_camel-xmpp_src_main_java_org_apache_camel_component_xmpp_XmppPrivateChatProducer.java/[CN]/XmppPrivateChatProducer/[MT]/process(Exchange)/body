{
  try {
    if (connection == null) {
      connection=endpoint.createConnection();
    }
    if (!connection.isConnected()) {
      this.reconnect();
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not connect to XMPP server.",e);
  }
  String participant=endpoint.getParticipant();
  String thread=endpoint.getChatId();
  if (participant == null) {
    participant=getParticipant();
  }
 else {
    thread="Chat:" + participant + ":"+ endpoint.getUser();
  }
  ChatManager chatManager=ChatManager.getInstanceFor(connection);
  Chat chat=getOrCreateChat(chatManager,participant,thread);
  Message message=null;
  try {
    message=new Message();
    message.setTo(participant);
    message.setThread(thread);
    message.setType(Message.Type.normal);
    endpoint.getBinding().populateXmppMessage(message,exchange);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Sending XMPP message to {} from {} : {}",new Object[]{participant,endpoint.getUser(),message.getBody()});
    }
    chat.sendMessage(message);
  }
 catch (  Exception e) {
    throw new RuntimeExchangeException("Could not send XMPP message to " + participant + " from "+ endpoint.getUser()+ " : "+ message+ " to: "+ XmppEndpoint.getConnectionMessage(connection),exchange,e);
  }
}
