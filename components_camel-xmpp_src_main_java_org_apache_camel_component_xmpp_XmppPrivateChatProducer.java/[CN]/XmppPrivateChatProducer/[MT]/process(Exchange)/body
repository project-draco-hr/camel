{
  String threadId=exchange.getExchangeId();
  try {
    if (connection == null) {
      connection=endpoint.createConnection();
    }
    if (!connection.isConnected()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Reconnecting to: " + XmppEndpoint.getConnectionMessage(connection));
      }
      connection.connect();
    }
  }
 catch (  XMPPException e) {
    throw new RuntimeExchangeException("Cannot connect to: " + XmppEndpoint.getConnectionMessage(connection),exchange,e);
  }
  ChatManager chatManager=connection.getChatManager();
  Chat chat=chatManager.getThreadChat(threadId);
  if (chat == null) {
    chat=chatManager.createChat(getParticipant(),threadId,new MessageListener(){
      public void processMessage(      Chat chat,      Message message){
      }
    }
);
  }
  Message message=null;
  try {
    message=new Message();
    message.setTo(participant);
    message.setThread(threadId);
    message.setType(Message.Type.normal);
    endpoint.getBinding().populateXmppMessage(message,exchange);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Sending XMPP message: " + message.getBody());
    }
    chat.sendMessage(message);
  }
 catch (  XMPPException e) {
    throw new RuntimeExchangeException("Cannot send XMPP message: " + message + " to: "+ XmppEndpoint.getConnectionMessage(connection),exchange,e);
  }
}
