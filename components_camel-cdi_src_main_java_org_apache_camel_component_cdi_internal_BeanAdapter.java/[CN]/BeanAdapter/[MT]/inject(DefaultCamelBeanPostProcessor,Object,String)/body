{
  CamelPostProcessorHelper postProcessorHelper=postProcessor.getPostProcessorHelper();
  for (  Method method : consumeMethods) {
    postProcessorHelper.consumerInjection(method,reference,beanName);
  }
  for (  Method method : produceMethods) {
    Produce annotation=method.getAnnotation(Produce.class);
    if (annotation != null && postProcessorHelper.matchContext(annotation.context())) {
      postProcessor.setterInjection(method,reference,beanName,annotation.uri(),annotation.ref(),annotation.property());
    }
  }
  for (  Method method : endpointMethods) {
    EndpointInject annotation=method.getAnnotation(EndpointInject.class);
    if (annotation != null && postProcessorHelper.matchContext(annotation.context())) {
      postProcessor.setterInjection(method,reference,beanName,annotation.uri(),annotation.ref(),annotation.property());
    }
  }
  for (  Field field : produceFields) {
    Produce annotation=field.getAnnotation(Produce.class);
    if (annotation != null && postProcessorHelper.matchContext(annotation.context())) {
      postProcessor.injectField(field,annotation.uri(),annotation.ref(),annotation.property(),reference,beanName);
    }
  }
  for (  Field field : endpointFields) {
    EndpointInject annotation=field.getAnnotation(EndpointInject.class);
    if (annotation != null && postProcessorHelper.matchContext(annotation.context())) {
      postProcessor.injectField(field,annotation.uri(),annotation.ref(),annotation.property(),reference,beanName);
    }
  }
}
