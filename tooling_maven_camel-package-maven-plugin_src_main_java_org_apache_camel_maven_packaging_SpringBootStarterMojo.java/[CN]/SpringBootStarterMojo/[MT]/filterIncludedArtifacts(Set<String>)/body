{
  Set<String> included=new TreeSet<>();
  ArtifactFilter artifactFilter=new ScopeArtifactFilter(null);
  DependencyNode node=treeBuilder.buildDependencyTree(project,localRepository,artifactFactory,artifactMetadataSource,artifactFilter,artifactCollector);
  CollectingDependencyNodeVisitor visitor=new CollectingDependencyNodeVisitor();
  node.accept(visitor);
  List<DependencyNode> nodes=visitor.getNodes();
  for (  DependencyNode dependencyNode : nodes) {
    Artifact artifact=dependencyNode.getArtifact();
    getLog().debug("Found dependency node: " + artifact.getGroupId() + ":"+ artifact.getArtifactId()+ ":"+ artifact.getVersion()+ " - scope="+ artifact.getScope());
    if (!Artifact.SCOPE_TEST.equals(artifact.getScope()) && !Artifact.SCOPE_PROVIDED.equals(artifact.getScope())) {
      String canonicalName=artifact.getGroupId() + ":" + artifact.getArtifactId();
      if (artifacts.contains(canonicalName)) {
        getLog().debug(canonicalName + " marked for exclusion");
        included.add(canonicalName);
      }
    }
  }
  return included;
}
