{
  context.addRoutes(new RouteBuilder(){
    public void configure(){
      onException(CacheException.class).handled(true).to("log:LOGGER").to("mock:CacheProducerTest.cacheException");
      from("direct:a").setHeader(CacheConstants.CACHE_OPERATION,constant(CacheConstants.CACHE_OPERATION_ADD)).setHeader(CacheConstants.CACHE_KEY,constant("Ralph_Waldo_Emerson")).setBody(constant("Test body")).to("cache://TestCache1").setHeader(CacheConstants.CACHE_OPERATION,constant(CacheConstants.CACHE_OPERATION_URL_CHECK)).setHeader(CacheConstants.CACHE_KEY,constant("Ralph_Waldo_Emerson")).to("cache://TestCache1").choice().when(header(CacheConstants.CACHE_ELEMENT_WAS_FOUND).isNotNull()).to("mock:CacheProducerTest.result").end();
    }
  }
);
  resultEndpoint.expectedMessageCount(1);
  cacheExceptionEndpoint.expectedMessageCount(0);
  resultEndpoint.expectedBodiesReceived("Test body");
  context.start();
  LOG.debug("------------Beginning CacheProducer Check An Element Exists Test---------------");
  sendOriginalFile();
  resultEndpoint.assertIsSatisfied();
  cacheExceptionEndpoint.assertIsSatisfied();
}
