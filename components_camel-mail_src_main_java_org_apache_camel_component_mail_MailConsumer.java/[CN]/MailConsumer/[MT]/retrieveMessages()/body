{
  Map<String,Message> answer=new LinkedHashMap<String,Message>();
  Message[] messages;
  final SortTerm[] sortTerm=getEndpoint().getSortTerm();
  final SearchTerm searchTerm=computeSearchTerm();
  if (sortTerm != null && serverCanSort) {
    final IMAPFolder imapFolder=(IMAPFolder)folder;
    if (searchTerm != null) {
      messages=imapFolder.getSortedMessages(sortTerm,searchTerm);
    }
 else {
      messages=imapFolder.getSortedMessages(sortTerm);
    }
  }
 else {
    if (searchTerm != null) {
      messages=folder.search(searchTerm,retrieveAllMessages());
    }
 else {
      messages=retrieveAllMessages();
    }
    if (sortTerm != null) {
      MailSorter.sortMessages(messages,sortTerm);
    }
  }
  for (  Message message : messages) {
    String key=getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(),message);
    if (isValidMessage(key,message)) {
      answer.put(key,message);
    }
  }
  return answer;
}
