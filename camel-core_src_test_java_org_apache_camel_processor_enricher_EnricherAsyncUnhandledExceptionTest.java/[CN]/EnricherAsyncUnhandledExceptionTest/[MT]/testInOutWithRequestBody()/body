{
  MockEndpoint mock=getMockEndpoint("mock:pickedUp");
  mock.expectedMessageCount(1);
  try {
    Future<Object> obj=template.asyncRequestBody("direct:in","Hello World");
    obj.get(5000,TimeUnit.MILLISECONDS);
  }
 catch (  Exception e) {
    assertTrue(e instanceof ExecutionException);
    assertTrue(e.getCause() instanceof CamelExecutionException);
    assertTrue(e.getCause().getCause() instanceof CamelExchangeException);
    assertTrue(e.getCause().getCause().getCause() instanceof RuntimeException);
    assertTrue(e.getCause().getCause().getCause().getMessage().equals("Bang! Unhandled exception"));
    mock.assertIsSatisfied();
    return;
  }
  fail("Expected an RuntimeException");
}
