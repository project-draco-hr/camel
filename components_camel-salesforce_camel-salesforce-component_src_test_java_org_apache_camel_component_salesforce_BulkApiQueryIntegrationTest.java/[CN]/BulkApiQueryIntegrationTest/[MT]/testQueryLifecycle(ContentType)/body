{
  log.info("Testing Query lifecycle with {} content",contentType);
  JobInfo jobInfo=new JobInfo();
  jobInfo.setOperation(OperationEnum.QUERY);
  jobInfo.setContentType(contentType);
  jobInfo.setObject(Merchandise__c.class.getSimpleName());
  jobInfo=createJob(jobInfo);
  BatchInfo batchInfo=template().requestBody("direct:createBatchQuery",jobInfo,BatchInfo.class);
  assertNotNull("Null batch query",batchInfo);
  assertNotNull("Null batch query id",batchInfo.getId());
  InputStream requestStream=template().requestBody("direct:getRequest",batchInfo,InputStream.class);
  assertNotNull("Null batch request",requestStream);
  log.info("Waiting for query batch to finish...");
  while (!batchProcessed(batchInfo)) {
    Thread.sleep(5000);
    batchInfo=getBatchInfo(batchInfo);
  }
  log.info("Query finished with state " + batchInfo.getState());
  assertEquals("Query did not succeed",BatchStateEnum.COMPLETED,batchInfo.getState());
  @SuppressWarnings("unchecked") List<String> resultIds=template().requestBody("direct:getQueryResultIds",batchInfo,List.class);
  assertNotNull("Null query result ids",resultIds);
  assertFalse("Empty result ids",resultIds.isEmpty());
  for (  String resultId : resultIds) {
    InputStream results=template().requestBodyAndHeader("direct:getQueryResult",batchInfo,SalesforceEndpointConfig.RESULT_ID,resultId,InputStream.class);
    assertNotNull("Null query result",results);
  }
  template().requestBody("direct:closeJob",jobInfo,JobInfo.class);
}
