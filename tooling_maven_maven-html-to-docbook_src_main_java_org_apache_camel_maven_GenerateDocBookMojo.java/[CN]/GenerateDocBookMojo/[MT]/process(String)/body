{
  Tidy tidy=new Tidy();
  ByteArrayOutputStream out=null;
  BufferedOutputStream output=null;
  BufferedOutputStream wikiOutput=null;
  StreamSource streamSource=null;
  tidy.setXmlOut(true);
  try {
    out=new ByteArrayOutputStream();
    URL u=new URL(baseURL + resource);
    Document doc=tidy.parseDOM(new BufferedInputStream(u.openStream()),out);
    out.close();
    NodeList nodeList=doc.getElementsByTagName("div");
    for (int i=0; i < nodeList.getLength(); ++i) {
      Node node=nodeList.item(i);
      NamedNodeMap nm=node.getAttributes();
      Node attr=nm.getNamedItem("class");
      if (attr != null && attr.getNodeValue().equalsIgnoreCase("wiki-content maincontent")) {
        downloadImages(node);
        Element element=(Element)node;
        element.setAttribute("chapterId",chapterId);
        element.setAttribute("baseURL",baseURL);
        element.setAttribute("imageLocation","../images/");
        DOMSource source=new DOMSource(node);
        output=new BufferedOutputStream(new FileOutputStream(outputPath + File.separator + removeExtension(resource)+ ".xml"));
        StreamResult result=new StreamResult(output);
        TransformerFactory tFactory=TransformerFactory.newInstance();
        if (xslFile != null && !xslFile.trim().equals("")) {
          streamSource=new StreamSource(xslFile);
        }
 else {
          InputStream xslStream=getClass().getResourceAsStream("/docbook.xsl");
          streamSource=new StreamSource(xslStream);
        }
        Transformer transformer=tFactory.newTransformer(streamSource);
        transformer.transform(source,result);
        wikiOutput=new BufferedOutputStream(new FileOutputStream(wikiOutputPath + File.separator + removeExtension(resource)+ ".html"));
        result=new StreamResult(wikiOutput);
        transformer=tFactory.newTransformer();
        transformer.transform(source,result);
        break;
      }
    }
  }
 catch (  Exception e) {
    log.debug("Exception processing wiki content",e);
  }
 finally {
    try {
      if (output != null)       output.close();
    }
 catch (    IOException e) {
      log.debug("Exception closing output stream",e);
    }
  }
}
