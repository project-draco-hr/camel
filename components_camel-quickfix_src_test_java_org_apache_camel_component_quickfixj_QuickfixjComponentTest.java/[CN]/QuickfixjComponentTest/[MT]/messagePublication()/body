{
  setUpComponent();
  SessionSettings settings=new SessionSettings();
  settings.setString(Acceptor.SETTING_SOCKET_ACCEPT_PROTOCOL,ProtocolFactory.getTypeString(ProtocolFactory.VM_PIPE));
  settings.setString(Initiator.SETTING_SOCKET_CONNECT_PROTOCOL,ProtocolFactory.getTypeString(ProtocolFactory.VM_PIPE));
  settings.setBool(Session.SETTING_USE_DATA_DICTIONARY,false);
  SessionID acceptorSessionID=new SessionID(FixVersions.BEGINSTRING_FIX44,"ACCEPTOR","INITIATOR");
  settings.setString(acceptorSessionID,SessionFactory.SETTING_CONNECTION_TYPE,SessionFactory.ACCEPTOR_CONNECTION_TYPE);
  settings.setLong(acceptorSessionID,Acceptor.SETTING_SOCKET_ACCEPT_PORT,1234);
  setSessionID(settings,acceptorSessionID);
  SessionID initiatorSessionID=new SessionID(FixVersions.BEGINSTRING_FIX44,"INITIATOR","ACCEPTOR");
  settings.setString(initiatorSessionID,SessionFactory.SETTING_CONNECTION_TYPE,SessionFactory.INITIATOR_CONNECTION_TYPE);
  settings.setLong(initiatorSessionID,Initiator.SETTING_SOCKET_CONNECT_PORT,1234);
  settings.setLong(initiatorSessionID,Initiator.SETTING_RECONNECT_INTERVAL,1);
  setSessionID(settings,initiatorSessionID);
  writeSettings(settings,true);
  Endpoint endpoint=component.createEndpoint(getEndpointUri(settingsFile.getName(),null));
  final CountDownLatch logonLatch=new CountDownLatch(2);
  final CountDownLatch messageLatch=new CountDownLatch(2);
  Consumer consumer=endpoint.createConsumer(new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      QuickfixjEventCategory eventCategory=(QuickfixjEventCategory)exchange.getIn().getHeader(QuickfixjEndpoint.EVENT_CATEGORY_KEY);
      if (eventCategory == QuickfixjEventCategory.SessionLogon) {
        logonLatch.countDown();
      }
 else       if (eventCategory == QuickfixjEventCategory.AppMessageReceived) {
        messageLatch.countDown();
      }
    }
  }
);
  ServiceHelper.startService(consumer);
  camelContext.start();
  assertTrue("Session not created",logonLatch.await(5000,TimeUnit.MILLISECONDS));
  Endpoint producerEndpoint=component.createEndpoint(getEndpointUri(settingsFile.getName(),acceptorSessionID));
  Producer producer=producerEndpoint.createProducer();
  Email email=new Email(new EmailThreadID("ID"),new EmailType(EmailType.NEW),new Subject("Test"));
  Exchange exchange=producer.createExchange(ExchangePattern.InOnly);
  exchange.getIn().setBody(email);
  producer.process(exchange);
  Producer producer2=endpoint.createProducer();
  email.getHeader().setString(SenderCompID.FIELD,acceptorSessionID.getSenderCompID());
  email.getHeader().setString(TargetCompID.FIELD,acceptorSessionID.getTargetCompID());
  producer2.process(exchange);
  assertTrue("Messages not received",messageLatch.await(5000,TimeUnit.MILLISECONDS));
}
