{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(2).redeliveryDelay(0).logStackTrace(false).handled(false));
      from("direct:start").idempotentConsumer(header("messageId"),MemoryIdempotentRepository.memoryIdempotentRepository(200)).process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          String id=exchange.getIn().getHeader("messageId",String.class);
          if (id.equals("2")) {
            throw new IllegalArgumentException("Damm I cannot handle id 2");
          }
        }
      }
).to("mock:result");
    }
  }
);
  context.start();
  getMockEndpoint("mock:error").expectedMessageCount(2);
  resultEndpoint.expectedBodiesReceived("one","three");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("3","three");
  assertMockEndpointsSatisfied();
}
