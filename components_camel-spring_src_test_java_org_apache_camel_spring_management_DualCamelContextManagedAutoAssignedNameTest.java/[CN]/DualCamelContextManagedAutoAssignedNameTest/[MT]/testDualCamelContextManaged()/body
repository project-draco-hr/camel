{
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
  assertEquals(2,set.size());
  Iterator<ObjectName> it=set.iterator();
  ObjectName on1=it.next();
  ObjectName on2=it.next();
  assertTrue("Route 1 is missing",on1.getCanonicalName().contains("route1") || on2.getCanonicalName().contains("route1"));
  assertTrue("Route 2 is missing",on1.getCanonicalName().contains("route2") || on2.getCanonicalName().contains("route2"));
  set=mbeanServer.queryNames(new ObjectName("*:type=endpoints,*"),null);
  assertTrue("Size should be 7 or higher, was: " + set.size(),set.size() >= 7);
  for (  ObjectName on : set) {
    String name=on.getCanonicalName();
    if (name.contains("mock://mock1")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-1",id);
    }
 else     if (name.contains("mock://mock2")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-2",id);
    }
 else     if (name.contains("file://target/route1")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-1",id);
    }
 else     if (name.contains("file://target/route2")) {
      String id=(String)mbeanServer.getAttribute(on,"CamelId");
      assertEquals("camel-2",id);
    }
  }
}
