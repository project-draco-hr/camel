{
  final Endpoint endpoint=getMockEndpoint("mock:foo");
  MockScheduledPollConsumer consumer=new MockScheduledPollConsumer(endpoint,null);
  consumer.setBackoffMultiplier(4);
  consumer.setBackoffIdleThreshold(2);
  consumer.setPollStrategy(new PollingConsumerPollStrategy(){
    public boolean begin(    Consumer consumer,    Endpoint endpoint){
      return true;
    }
    public void commit(    Consumer consumer,    Endpoint endpoint,    int polledMessages){
      commits++;
    }
    public boolean rollback(    Consumer consumer,    Endpoint endpoint,    int retryCounter,    Exception e) throws Exception {
      return false;
    }
  }
);
  consumer.start();
  consumer.run();
  consumer.run();
  assertEquals(2,commits);
  consumer.run();
  consumer.run();
  consumer.run();
  consumer.run();
  assertEquals(2,commits);
  consumer.run();
  consumer.run();
  assertEquals(4,commits);
  consumer.run();
  consumer.run();
  consumer.run();
  consumer.run();
  assertEquals(4,commits);
  consumer.run();
  assertEquals(5,commits);
  consumer.stop();
}
