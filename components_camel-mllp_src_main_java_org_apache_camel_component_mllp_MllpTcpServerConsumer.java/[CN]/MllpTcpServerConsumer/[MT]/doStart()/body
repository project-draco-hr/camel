{
  log.debug("doStart() - creating acceptor thread");
  ServerSocket serverSocket=new ServerSocket();
  if (null != endpoint.receiveBufferSize) {
    serverSocket.setReceiveBufferSize(endpoint.receiveBufferSize);
  }
  serverSocket.setReuseAddress(endpoint.reuseAddress);
  serverSocket.setSoTimeout(endpoint.acceptTimeout);
  InetSocketAddress socketAddress;
  if (null == endpoint.getHostname()) {
    socketAddress=new InetSocketAddress(endpoint.getPort());
  }
 else {
    socketAddress=new InetSocketAddress(endpoint.getHostname(),endpoint.getPort());
  }
  long startTicks=System.currentTimeMillis();
  do {
    try {
      serverSocket.bind(socketAddress,endpoint.backlog);
    }
 catch (    BindException bindException) {
      if (System.currentTimeMillis() > startTicks + endpoint.getBindTimeout()) {
        log.error("Failed to bind to address {} within timeout {}",socketAddress,endpoint.getBindTimeout());
        throw bindException;
      }
 else {
        log.warn("Failed to bind to address {} - retrying in {} milliseconds",socketAddress,endpoint.getBindRetryInterval());
        Thread.sleep(endpoint.getBindRetryInterval());
      }
    }
  }
 while (!serverSocket.isBound());
  serverSocketThread=new ServerSocketThread(serverSocket);
  serverSocketThread.start();
  super.doStart();
}
