{
  final Map<String,DataFormat> tests=new HashMap<>();
  tests.put("default",new UniVocityCsvDataFormat());
  tests.put("map",new UniVocityCsvDataFormat().setAsMap(true).setHeaderExtractionEnabled(true));
  tests.put("mapWithHeaders",new UniVocityCsvDataFormat().setAsMap(true).setHeaders(new String[]{"A","B","C"}));
  tests.put("lazy",new UniVocityCsvDataFormat().setLazyLoad(true));
  tests.put("advanced",new UniVocityCsvDataFormat().setNullValue("N/A").setDelimiter(';').setIgnoreLeadingWhitespaces(true).setIgnoreTrailingWhitespaces(false).setComment('!').setSkipEmptyLines(true));
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      for (      Map.Entry<String,DataFormat> test : tests.entrySet()) {
        from("direct:" + test.getKey()).unmarshal(test.getValue()).to("mock:result");
      }
    }
  }
;
}
