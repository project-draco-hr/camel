{
  template.sendBody("direct:lazy",join("A,B,C","1,2,3","one,two,three"));
  result.expectedMessageCount(1);
  result.assertIsSatisfied();
  Iterator body=assertIsInstanceOf(Iterator.class,result.getExchanges().get(0).getIn().getBody());
  assertTrue(body.hasNext());
  assertEquals(asList("A","B","C"),body.next());
  try {
    body.remove();
    fail("Should have thrown a UnsupportedOperationException");
  }
 catch (  UnsupportedOperationException e) {
  }
  assertTrue(body.hasNext());
  assertEquals(asList("1","2","3"),body.next());
  assertTrue(body.hasNext());
  assertEquals(asList("one","two","three"),body.next());
  assertFalse(body.hasNext());
  try {
    body.next();
    fail("Should have thrown a NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
}
