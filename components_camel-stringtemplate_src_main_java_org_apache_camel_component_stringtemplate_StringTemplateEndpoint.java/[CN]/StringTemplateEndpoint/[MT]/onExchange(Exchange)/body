{
  StringWriter buffer=new StringWriter();
  @SuppressWarnings("unchecked") Map<String,Object> variableMap=exchange.getIn().getHeader(StringTemplateConstants.STRINGTEMPLATE_VARIABLE_MAP,Map.class);
  if (variableMap == null) {
    variableMap=ExchangeHelper.createVariableMap(exchange);
  }
  String text=exchange.getContext().getTypeConverter().mandatoryConvertTo(String.class,getResourceAsInputStream());
  ST template=new ST(text,delimiterStart,delimiterStop);
  for (  Map.Entry<String,Object> entry : variableMap.entrySet()) {
    template.add(entry.getKey(),entry.getValue());
  }
  log.debug("StringTemplate is writing using attributes: {}",variableMap);
  template.write(new NoIndentWriter(buffer));
  Message out=exchange.getOut();
  out.setBody(buffer.toString());
  out.setHeaders(exchange.getIn().getHeaders());
  out.setHeader(StringTemplateConstants.STRINGTEMPLATE_RESOURCE_URI,getResourceUri());
  out.setAttachments(exchange.getIn().getAttachments());
}
