{
  SchedulerFactory answer;
  Properties prop=loadProperties();
  if (prop != null) {
    prop.put("org.quartz.scheduler.skipUpdateCheck","true");
    prop.put("org.terracotta.quartz.skipUpdateCheck","true");
    if (isPrefixInstanceName()) {
      String instName=createInstanceName(prop);
      prop.setProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME,instName);
    }
    if (enableJmx && !prop.containsKey("org.quartz.scheduler.jmx.export")) {
      prop.put("org.quartz.scheduler.jmx.export","true");
      LOG.info("Setting org.quartz.scheduler.jmx.export=true to ensure QuartzScheduler(s) will be enlisted in JMX.");
    }
    answer=new StdSchedulerFactory(prop);
  }
 else {
    InputStream is=StdSchedulerFactory.class.getClassLoader().getResourceAsStream("org/quartz/quartz.properties");
    if (is == null) {
      throw new SchedulerException("Quartz properties file not found in classpath: org/quartz/quartz.properties");
    }
    prop=new Properties();
    try {
      prop.load(is);
    }
 catch (    IOException e) {
      throw new SchedulerException("Error loading Quartz properties file from classpath: org/quartz/quartz.properties",e);
    }
 finally {
      IOHelper.close(is);
    }
    if (isPrefixInstanceName()) {
      String instName=createInstanceName(prop);
      prop.setProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME,instName);
    }
    prop.put("org.quartz.scheduler.skipUpdateCheck","true");
    prop.put("org.terracotta.quartz.skipUpdateCheck","true");
    if (enableJmx && !prop.containsKey("org.quartz.scheduler.jmx.export")) {
      prop.put("org.quartz.scheduler.jmx.export","true");
      LOG.info("Setting org.quartz.scheduler.jmx.export=true to ensure QuartzScheduler(s) will be enlisted in JMX.");
    }
    answer=new StdSchedulerFactory(prop);
  }
  if (LOG.isDebugEnabled()) {
    String name=prop.getProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME);
    LOG.debug("Creating SchedulerFactory: {} with properties: {}",name,prop);
  }
  return answer;
}
