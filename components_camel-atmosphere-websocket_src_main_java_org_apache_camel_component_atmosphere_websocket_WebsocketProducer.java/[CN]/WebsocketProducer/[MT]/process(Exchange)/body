{
  Message in=exchange.getIn();
  Object message=in.getBody();
  if (message == null) {
    LOG.debug("Ignoring a null message");
    return;
  }
  if (!(message instanceof String || message instanceof byte[] || message instanceof Reader|| message instanceof InputStream)) {
    if (LOG.isInfoEnabled()) {
      LOG.info("Using String for unexpected message type {} ",message.getClass());
    }
    message=in.getBody(String.class);
  }
  if (message instanceof Reader) {
    message=in.getBody(String.class);
  }
 else   if (message instanceof InputStream) {
    message=in.getBody(byte[].class);
  }
  log.debug("Sending to {}",message);
  if (getEndpoint().isSendToAll()) {
    log.debug("Sending to all -> {}",message);
    for (    final WebSocket websocket : getEndpoint().getWebSocketStore().getAllWebSockets()) {
      sendMessage(websocket,message);
    }
  }
 else   if (in.getHeader(WebsocketConstants.CONNECTION_KEY_LIST) != null) {
    List<String> connectionKeyList=in.getHeader(WebsocketConstants.CONNECTION_KEY_LIST,List.class);
    messageDistributor(connectionKeyList,message);
  }
 else {
    String connectionKey=in.getHeader(WebsocketConstants.CONNECTION_KEY,String.class);
    messageDistributor(Arrays.asList(connectionKey),message);
  }
}
