{
  try {
    CamelContext context=isNotEmpty(exporter.getCamelContextId()) ? getReferenceByName(manager,exporter.getCamelContextId(),CamelContext.class).get() : getReference(manager,CamelContext.class,this.context);
    Bean<?> bean=manager.resolve(manager.getBeans(exporter.getServiceRef()));
    if (bean == null) {
      throw new UnsatisfiedResolutionException("No bean with name [" + exporter.getServiceRef() + "] is deployed!");
    }
    @SuppressWarnings("unchecked") T service=(T)manager.getReference(bean,type,manager.createCreationalContext(bean));
    Endpoint endpoint=getMandatoryEndpoint(context,exporter.getUri());
    try {
      ServiceHelper.startService(endpoint);
      Consumer consumer=endpoint.createConsumer(new BeanProcessor(service,context));
      context.addService(consumer,true,true);
    }
 catch (    Exception cause) {
      throw new FailedToCreateConsumerException(endpoint,cause);
    }
    return service;
  }
 catch (  Exception cause) {
    throw new CreationException("Error while creating instance for " + this,cause);
  }
}
