{
  Object element;
  if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_ADD)) {
    LOG.debug("Adding an element with key {} into the Cache",key);
    element=createElementFromBody(exchange,CacheConstants.CACHE_OPERATION_ADD);
    cache.put(new Element(key,element));
  }
 else   if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_UPDATE)) {
    LOG.debug("Updating an element with key {} into the Cache",key);
    element=createElementFromBody(exchange,CacheConstants.CACHE_OPERATION_UPDATE);
    cache.put(new Element(key,element));
  }
 else   if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_DELETEALL)) {
    LOG.debug("Deleting All elements from the Cache");
    cache.removeAll();
  }
 else   if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_DELETE)) {
    LOG.debug("Deleting an element with key {} into the Cache",key);
    cache.remove(key);
  }
 else   if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_GET)) {
    LOG.debug("Quering an element with key {} from the Cache",key);
    if (cache.isKeyInCache(key) && cache.get(key) != null) {
      exchange.getIn().setHeader(CacheConstants.CACHE_ELEMENT_WAS_FOUND,true);
      exchange.getIn().setBody(cache.get(key).getValue());
    }
 else {
      exchange.getIn().removeHeader(CacheConstants.CACHE_ELEMENT_WAS_FOUND);
    }
  }
 else   if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_CHECK)) {
    LOG.debug("Querying an element with key {} from the Cache",key);
    if (cache.isKeyInCache(key)) {
      exchange.getIn().setHeader(CacheConstants.CACHE_ELEMENT_WAS_FOUND,true);
    }
 else {
      exchange.getIn().removeHeader(CacheConstants.CACHE_ELEMENT_WAS_FOUND);
    }
  }
 else {
    throw new CacheException(CacheConstants.CACHE_OPERATION + " " + operation+ " is not supported.");
  }
}
