{
  cacheManager=new CacheManagerFactory().instantiateCacheManager();
  if (LOG.isTraceEnabled()) {
    LOG.trace("Cache Name: " + config.getCacheName());
  }
  if (cacheManager.cacheExists(config.getCacheName())) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Found an existing cache: " + config.getCacheName());
      LOG.trace("Cache " + config.getCacheName() + " currently contains "+ cacheManager.getCache(config.getCacheName()).getSize()+ " elements");
    }
    cache=cacheManager.getCache(config.getCacheName());
  }
 else {
    cache=new Cache(config.getCacheName(),config.getMaxElementsInMemory(),config.getMemoryStoreEvictionPolicy(),config.isOverflowToDisk(),config.getDiskStorePath(),config.isEternal(),config.getTimeToLiveSeconds(),config.getTimeToIdleSeconds(),config.isDiskPersistent(),config.getDiskExpiryThreadIntervalSeconds(),null);
    cacheManager.addCache(cache);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Added a new cache: " + cache.getName());
    }
  }
  String key=(String)exchange.getIn().getHeader("CACHE_KEY");
  String operation=(String)exchange.getIn().getHeader("CACHE_OPERATION");
  if (operation == null) {
    throw new CacheException("Operation property is not specified in the incoming exchange header." + "A valid Operation property must be set to ADD, UPDATE, DELETE, DELETEALL");
  }
  if ((key == null) && (!operation.equalsIgnoreCase("DELETEALL"))) {
    throw new CacheException("Cache Key is not specified in exchange either header or URL. Unable to add objects to the cache without a Key");
  }
  performCacheOperation(exchange,operation,key);
}
