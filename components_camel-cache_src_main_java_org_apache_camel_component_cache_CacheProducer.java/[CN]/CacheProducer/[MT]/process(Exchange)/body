{
  LOG.trace("Cache Name: {}",config.getCacheName());
  if (cacheManager.cacheExists(config.getCacheName())) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Found an existing cache: {}",config.getCacheName());
      LOG.trace("Cache {} currently contains {} elements",config.getCacheName(),cacheManager.getCache(config.getCacheName()).getSize());
    }
    cache=cacheManager.getCache(config.getCacheName());
  }
 else {
    cache=new Cache(config.getCacheName(),config.getMaxElementsInMemory(),config.getMemoryStoreEvictionPolicy(),config.isOverflowToDisk(),config.getDiskStorePath(),config.isEternal(),config.getTimeToLiveSeconds(),config.getTimeToIdleSeconds(),config.isDiskPersistent(),config.getDiskExpiryThreadIntervalSeconds(),null);
    cacheManager.addCache(cache);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Added a new cache: " + cache.getName());
    }
  }
  String key=exchange.getIn().getHeader(CacheConstants.CACHE_KEY,String.class);
  String operation=exchange.getIn().getHeader(CacheConstants.CACHE_OPERATION,String.class);
  if (operation == null) {
    throw new CacheException(CacheConstants.CACHE_OPERATION + " header not specified in message");
  }
  if ((key == null) && (!operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_DELETEALL))) {
    throw new CacheException(CacheConstants.CACHE_KEY + " is not specified in message header or endpoint URL.");
  }
  performCacheOperation(exchange,operation,key);
  exchange.getIn().removeHeader(CacheConstants.CACHE_KEY);
  exchange.getIn().removeHeader(CacheConstants.CACHE_OPERATION);
}
