{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      onException(IllegalArgumentException.class).handled(true).to("mock:handled");
      from("direct:start").aggregate(header("id")).batchTimeout(500).aggregationStrategy(new AggregationStrategy(){
        public Exchange aggregate(        Exchange oldExchange,        Exchange newExchange){
          Object body=newExchange.getIn().getBody();
          if ("Damn".equals(body)) {
            throw new IllegalArgumentException();
          }
          return newExchange;
        }
      }
).to("mock:result");
      from("direct:predicate").aggregate(new Expression(){
        public <T>T evaluate(        Exchange exchange,        Class<T> type){
          if (exchange.getIn().getBody().equals("Damn")) {
            throw new IllegalArgumentException();
          }
          return ExpressionBuilder.headerExpression("id").evaluate(exchange,type);
        }
      }
).batchTimeout(500).to("mock:result");
    }
  }
;
}
