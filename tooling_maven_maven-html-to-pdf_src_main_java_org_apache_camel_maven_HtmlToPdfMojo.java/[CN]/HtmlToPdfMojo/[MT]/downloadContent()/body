{
  getLog().info("Downloading: " + page);
  URL url=new URL(page);
  Tidy tidy=new Tidy();
  ByteArrayOutputStream result=new ByteArrayOutputStream();
  tidy.setErrout(new PrintWriter(result));
  Document doc;
  try {
    doc=tidy.parseDOM(new BufferedInputStream(url.openStream()),new ByteArrayOutputStream());
  }
 catch (  Throwable e) {
    if (errorOnDownloadFailure) {
      getLog().debug(new String(result.toByteArray()),e);
      throw new MojoExecutionException("Download or validation of '" + page + "' failed: "+ e);
    }
 else {
      getLog().debug(new String(result.toByteArray()),e);
      getLog().error("Download or validation of '" + page + "' failed: "+ e);
      return null;
    }
  }
  NodeList nodeList=doc.getElementsByTagName("div");
  for (int i=0; i < nodeList.getLength(); ++i) {
    Node node=nodeList.item(i);
    NamedNodeMap nm=node.getAttributes();
    Node attr=nm.getNamedItem("class");
    if (attr != null && attr.getNodeValue().equalsIgnoreCase(contentDivClass)) {
      ByteArrayOutputStream contentData=new ByteArrayOutputStream(1024 * 100);
      TransformerFactory tFactory=TransformerFactory.newInstance();
      Transformer transformer=tFactory.newTransformer();
      transformer.transform(new DOMSource(node),new StreamResult(contentData));
      String content=new String(contentData.toByteArray(),"UTF-8");
      content=content.substring(content.indexOf("<div"));
      return content;
    }
  }
  throw new MojoExecutionException("The '" + page + "' page did not have a <div class=\""+ contentDivClass+ "\"> element.");
}
