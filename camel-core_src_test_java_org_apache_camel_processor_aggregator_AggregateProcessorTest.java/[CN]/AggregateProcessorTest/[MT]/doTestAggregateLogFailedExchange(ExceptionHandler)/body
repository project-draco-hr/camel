{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedBodiesReceived("A+END");
  Processor done=new Processor(){
    public void process(    Exchange exchange) throws Exception {
      if (exchange.getIn().getBody(String.class).contains("Kaboom")) {
        throw new IllegalArgumentException("Damn");
      }
      SendProcessor send=new SendProcessor(context.getEndpoint("mock:result"));
      send.start();
      send.process(exchange);
    }
  }
;
  Expression corr=header("id");
  AggregationStrategy as=new BodyInAggregatingStrategy();
  AggregateProcessor ap=new AggregateProcessor(context,done,corr,as,executorService,true);
  ap.setEagerCheckCompletion(true);
  ap.setCompletionPredicate(body().isEqualTo("END"));
  if (handler != null) {
    ap.setExceptionHandler(handler);
  }
  ap.start();
  Exchange e1=new DefaultExchange(context);
  e1.getIn().setBody("A");
  e1.getIn().setHeader("id",123);
  Exchange e2=new DefaultExchange(context);
  e2.getIn().setBody("B");
  e2.getIn().setHeader("id",456);
  Exchange e3=new DefaultExchange(context);
  e3.getIn().setBody("Kaboom");
  e3.getIn().setHeader("id",456);
  Exchange e4=new DefaultExchange(context);
  e4.getIn().setBody("END");
  e4.getIn().setHeader("id",456);
  Exchange e5=new DefaultExchange(context);
  e5.getIn().setBody("END");
  e5.getIn().setHeader("id",123);
  ap.process(e1);
  ap.process(e2);
  ap.process(e3);
  ap.process(e4);
  ap.process(e5);
  assertMockEndpointsSatisfied();
  ap.stop();
}
