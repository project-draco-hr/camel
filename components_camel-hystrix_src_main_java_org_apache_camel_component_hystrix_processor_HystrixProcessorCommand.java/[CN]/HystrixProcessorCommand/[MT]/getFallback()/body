{
  Exception exception=exchange.getException();
  if (exception == null) {
    return exchange.hasOut() ? exchange.getOut() : exchange.getIn();
  }
  if (fallback != null || fallbackCommand != null) {
    LOG.debug("Error occurred processing. Will now run fallback. Exception class: {} message: {}.",exception.getClass().getName(),exception.getMessage());
    if (exchange.getProperty(Exchange.FAILURE_ENDPOINT) == null) {
      exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));
    }
    exchange.setProperty(Exchange.EXCEPTION_HANDLED,true);
    exchange.setProperty(Exchange.EXCEPTION_CAUGHT,exception);
    exchange.setException(null);
    exchange.removeProperty(Exchange.REDELIVERY_EXHAUSTED);
    try {
      if (fallbackCommand != null) {
        return fallbackCommand.execute();
      }
 else {
        LOG.debug("Running fallback: {} with exchange: {}",fallback,exchange);
        fallback.process(exchange);
        LOG.debug("Running fallback: {} with exchange: {} done",fallback,exchange);
      }
    }
 catch (    Exception e) {
      exchange.setException(e);
    }
  }
  return exchange.hasOut() ? exchange.getOut() : exchange.getIn();
}
