{
  String path=getResourceUri();
  ObjectHelper.notNull(configuration,"configuration");
  ObjectHelper.notNull(path,"resourceUri");
  String newResourceUri=exchange.getIn().getHeader(FreemarkerConstants.FREEMARKER_RESOURCE_URI,String.class);
  if (newResourceUri != null) {
    exchange.getIn().removeHeader(FreemarkerConstants.FREEMARKER_RESOURCE_URI);
    log.debug("{} set to {} creating new endpoint to handle exchange",FreemarkerConstants.FREEMARKER_RESOURCE_URI,newResourceUri);
    FreemarkerEndpoint newEndpoint=findOrCreateEndpoint(getEndpointUri(),newResourceUri);
    newEndpoint.onExchange(exchange);
    return;
  }
  Reader reader=null;
  String content=exchange.getIn().getHeader(FreemarkerConstants.FREEMARKER_TEMPLATE,String.class);
  if (content != null) {
    reader=new StringReader(content);
    exchange.getIn().removeHeader(FreemarkerConstants.FREEMARKER_TEMPLATE);
  }
  Object dataModle=exchange.getIn().getHeader(FreemarkerConstants.FREEMARKER_DATA_MODLE,Object.class);
  if (dataModle == null) {
    dataModle=ExchangeHelper.createVariableMap(exchange);
  }
  Template template;
  if (reader != null) {
    log.debug("Freemarker is evaluating template read from header {} using context: {}",FreemarkerConstants.FREEMARKER_TEMPLATE,dataModle);
    template=new Template("temp",reader,new Configuration());
  }
 else {
    log.debug("Freemarker is evaluating {} using context: {}",path,dataModle);
    if (getEncoding() != null) {
      template=configuration.getTemplate(path,getEncoding());
    }
 else {
      template=configuration.getTemplate(path);
    }
  }
  StringWriter buffer=new StringWriter();
  template.process(dataModle,buffer);
  buffer.flush();
  Message out=exchange.getOut();
  out.setBody(buffer.toString());
  out.setHeaders(exchange.getIn().getHeaders());
  out.setAttachments(exchange.getIn().getAttachments());
}
