{
  params.add("sslContextFactory","org.restlet.engine.ssl.DefaultSslContextFactory");
  SSLContext context=scp.createSSLContext();
  SSLEngine engine=context.createSSLEngine();
  params.add("enabledProtocols",stringArrayToString(engine.getEnabledProtocols()));
  params.add("enabledCipherSuites",stringArrayToString(engine.getEnabledCipherSuites()));
  if (scp.getSecureSocketProtocol() != null) {
    params.add("protocol",scp.getSecureSocketProtocol());
  }
  if (scp.getServerParameters() != null && scp.getServerParameters().getClientAuthentication() != null) {
    boolean b=!scp.getServerParameters().getClientAuthentication().equals("NONE");
    params.add("needClientAuthentication",String.valueOf(b));
  }
  if (scp.getKeyManagers() != null) {
    if (scp.getKeyManagers().getAlgorithm() != null) {
      params.add("keyManagerAlgorithm",scp.getKeyManagers().getAlgorithm());
    }
    if (scp.getKeyManagers().getKeyPassword() != null) {
      params.add("keyPassword",scp.getKeyManagers().getKeyPassword());
    }
    if (scp.getKeyManagers().getKeyStore().getResource() != null) {
      params.add("keyStorePath",scp.getKeyManagers().getKeyStore().getResource());
    }
    if (scp.getKeyManagers().getKeyStore().getPassword() != null) {
      params.add("keyStorePassword",scp.getKeyManagers().getKeyStore().getPassword());
    }
    if (scp.getKeyManagers().getKeyStore().getType() != null) {
      params.add("keyStoreType",scp.getKeyManagers().getKeyStore().getType());
    }
  }
  if (scp.getTrustManagers() != null) {
    if (scp.getTrustManagers().getAlgorithm() != null) {
      params.add("trustManagerAlgorithm",scp.getKeyManagers().getAlgorithm());
    }
    if (scp.getTrustManagers().getKeyStore().getResource() != null) {
      params.add("trustStorePath",scp.getTrustManagers().getKeyStore().getResource());
    }
    if (scp.getTrustManagers().getKeyStore().getPassword() != null) {
      params.add("trustStorePassword",scp.getTrustManagers().getKeyStore().getPassword());
    }
    if (scp.getTrustManagers().getKeyStore().getType() != null) {
      params.add("trustStoreType",scp.getTrustManagers().getKeyStore().getType());
    }
  }
}
