{
  RestletEndpoint endpoint=consumer.getEndpoint();
  List<MethodBasedRouter> routesToRemove=new ArrayList<MethodBasedRouter>();
  String pattern=decodePattern(endpoint.getUriPattern());
  if (pattern != null && !pattern.isEmpty()) {
    routesToRemove.add(getMethodRouter(pattern,false));
  }
  if (endpoint.getRestletUriPatterns() != null) {
    for (    String uriPattern : endpoint.getRestletUriPatterns()) {
      routesToRemove.add(getMethodRouter(uriPattern,false));
    }
  }
  for (  MethodBasedRouter router : routesToRemove) {
    if (endpoint.getRestletMethods() != null) {
      Method[] methods=endpoint.getRestletMethods();
      for (      Method method : methods) {
        router.removeRoute(method);
      }
    }
 else {
      router.removeRoute(endpoint.getRestletMethod());
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Detached restlet uriPattern: {} method: {}",router.getUriPattern(),endpoint.getRestletMethod());
    }
    if (!router.hasRoutes()) {
      deattachUriPatternFrimRestlet(router.getUriPattern(),endpoint,router);
      if (!router.isStopped()) {
        router.stop();
      }
      routers.remove(router.getUriPattern());
    }
  }
}
