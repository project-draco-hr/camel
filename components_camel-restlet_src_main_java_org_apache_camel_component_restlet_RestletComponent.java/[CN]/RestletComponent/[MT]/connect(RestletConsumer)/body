{
  RestletEndpoint endpoint=(RestletEndpoint)consumer.getEndpoint();
  addServerIfNeccessary(endpoint);
  MethodBasedRouter router=getMethodRouter(endpoint.getUriPattern());
  Map<String,String> realm=endpoint.getRealm();
  Restlet target=consumer.getRestlet();
  if (realm != null && realm.size() > 0) {
    Guard guard=new Guard(component.getContext().createChildContext(),ChallengeScheme.HTTP_BASIC,"Camel-Restlet Endpoint Realm");
    for (    Map.Entry<String,String> entry : realm.entrySet()) {
      guard.getSecrets().put(entry.getKey(),entry.getValue().toCharArray());
    }
    guard.setNext(target);
    target=guard;
    if (LOG.isDebugEnabled()) {
      LOG.debug("Target has been set to guard: " + guard);
    }
  }
  router.addRoute(endpoint.getRestletMethod(),target);
  if (!router.hasBeenAttached()) {
    component.getDefaultHost().attach(endpoint.getUriPattern(),router);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Attached methodRouter uriPattern: " + endpoint.getUriPattern());
    }
  }
  LOG.info("Attached restlet uriPattern: " + endpoint.getUriPattern() + " method: "+ endpoint.getRestletMethod());
}
