{
  if (continuation.isNew()) {
    ExchangePattern ep=ExchangePattern.InOut;
    if (method.getReturnType() == Void.class) {
      ep=ExchangePattern.InOnly;
    }
    final org.apache.camel.Exchange camelExchange=endpoint.createExchange(ep);
    CxfRsBinding binding=endpoint.getBinding();
    binding.populateExchangeFromCxfRsRequest(cxfExchange,camelExchange,method,paramArray);
    boolean sync=cxfRsConsumer.getAsyncProcessor().process(camelExchange,new AsyncCallback(){
      public void done(      boolean doneSync){
        if (LOG.isTraceEnabled()) {
          LOG.trace("Resuming continuation of exchangeId: " + camelExchange.getExchangeId());
        }
        continuation.setObject(camelExchange);
        continuation.resume();
      }
    }
);
    if (continuation.getObject() != camelExchange && !sync) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Suspending continuation of exchangeId: " + camelExchange.getExchangeId());
      }
      continuation.suspend(0);
    }
 else {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Processed the Exchange : " + camelExchange.getExchangeId());
      }
      return returnResponse(cxfExchange,camelExchange);
    }
  }
  if (continuation.isResumed()) {
    org.apache.camel.Exchange camelExchange=(org.apache.camel.Exchange)continuation.getObject();
    return returnResponse(cxfExchange,camelExchange);
  }
  return null;
}
