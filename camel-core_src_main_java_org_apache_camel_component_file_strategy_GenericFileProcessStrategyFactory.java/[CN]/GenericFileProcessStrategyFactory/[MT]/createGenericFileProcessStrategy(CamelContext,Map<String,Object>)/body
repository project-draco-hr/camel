{
  Expression moveExpression=(Expression)params.get("move");
  Expression moveFailedExpression=(Expression)params.get("moveFailed");
  Expression preMoveExpression=(Expression)params.get("preMove");
  boolean isNoop=params.get("noop") != null;
  boolean isDelete=params.get("delete") != null;
  boolean isMove=moveExpression != null || preMoveExpression != null || moveFailedExpression != null;
  if (isDelete) {
    GenericFileDeleteProcessStrategy<T> strategy=new GenericFileDeleteProcessStrategy<T>();
    strategy.setExclusiveReadLockStrategy((GenericFileExclusiveReadLockStrategy<T>)getExclusiveReadLockStrategy(params));
    if (preMoveExpression != null) {
      GenericFileExpressionRenamer<T> renamer=new GenericFileExpressionRenamer<T>();
      renamer.setExpression(preMoveExpression);
      strategy.setBeginRenamer(renamer);
    }
    if (moveFailedExpression != null) {
      GenericFileExpressionRenamer<T> renamer=new GenericFileExpressionRenamer<T>();
      renamer.setExpression(moveFailedExpression);
      strategy.setFailureRenamer(renamer);
    }
    return strategy;
  }
 else   if (isMove || isNoop) {
    GenericFileRenameProcessStrategy<T> strategy=new GenericFileRenameProcessStrategy<T>();
    strategy.setExclusiveReadLockStrategy((GenericFileExclusiveReadLockStrategy<T>)getExclusiveReadLockStrategy(params));
    if (!isNoop && moveExpression != null) {
      GenericFileExpressionRenamer<T> renamer=new GenericFileExpressionRenamer<T>();
      renamer.setExpression(moveExpression);
      strategy.setCommitRenamer(renamer);
    }
    if (moveFailedExpression != null) {
      GenericFileExpressionRenamer<T> renamer=new GenericFileExpressionRenamer<T>();
      renamer.setExpression(moveFailedExpression);
      strategy.setFailureRenamer(renamer);
    }
    if (preMoveExpression != null) {
      GenericFileExpressionRenamer<T> renamer=new GenericFileExpressionRenamer<T>();
      renamer.setExpression(preMoveExpression);
      strategy.setBeginRenamer(renamer);
    }
    return strategy;
  }
 else {
    GenericFileNoOpProcessStrategy<T> strategy=new GenericFileNoOpProcessStrategy<T>();
    strategy.setExclusiveReadLockStrategy((GenericFileExclusiveReadLockStrategy<T>)getExclusiveReadLockStrategy(params));
    return strategy;
  }
}
