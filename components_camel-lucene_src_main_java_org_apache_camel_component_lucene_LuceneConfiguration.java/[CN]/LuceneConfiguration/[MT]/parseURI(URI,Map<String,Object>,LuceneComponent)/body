{
  String protocol=uri.getScheme();
  if (!protocol.equalsIgnoreCase("lucene")) {
    throw new IllegalArgumentException("Unrecognized Lucene protocol: " + protocol + " for uri: "+ uri);
  }
  setUri(uri);
  setAuthority(uri.getAuthority());
  if (!isValidAuthority()) {
    throw new URISyntaxException(uri.toASCIIString(),"Incorrect URI syntax and/or Operation specified for the Lucene endpoint." + "Please specify the syntax as \"lucene:[Endpoint Name]:[Operation]?[Query]\"");
  }
  setHost(retrieveTokenFromAuthority("hostname"));
  String op=retrieveTokenFromAuthority("operation");
  if (op != null) {
    op=op.toLowerCase();
  }
  setOperation(LuceneOperation.valueOf(op));
  sourceDirectory=component.resolveAndRemoveReferenceParameter(parameters,"srcDir",File.class,null);
  indexDirectory=component.resolveAndRemoveReferenceParameter(parameters,"indexDir",File.class,new File("file:///./indexDirectory"));
  analyzer=component.resolveAndRemoveReferenceParameter(parameters,"analyzer",Analyzer.class,new StandardAnalyzer());
  setMaxHits(component.getAndRemoveParameter(parameters,"maxHits",Integer.class,10));
}
