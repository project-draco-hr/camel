{
  getMockEndpoint("mock:result").expectedMessageCount(files);
  getMockEndpoint("mock:result").assertNoDuplicates(body());
  ExecutorService executor=Executors.newFixedThreadPool(poolSize);
  Map<Integer,Future> responses=new ConcurrentHashMap<Integer,Future>();
  for (int i=0; i < files; i++) {
    final int index=i;
    Future out=executor.submit(new Callable<Object>(){
      public Object call() throws Exception {
        template.sendBody("direct:start",new SendEmail("user" + index + "@somewhere.org"));
        return null;
      }
    }
);
    responses.put(index,out);
  }
  assertMockEndpointsSatisfied();
  assertEquals(files,responses.size());
  for (  Future future : responses.values()) {
    future.get();
  }
  assertEntityInDB(files);
  executor.shutdownNow();
}
