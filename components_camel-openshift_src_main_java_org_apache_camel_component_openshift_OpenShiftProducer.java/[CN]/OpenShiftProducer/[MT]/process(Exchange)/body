{
  String openshiftServer=OpenShiftHelper.getOpenShiftServer(getEndpoint());
  IDomain domain=OpenShiftHelper.loginAndGetDomain(getEndpoint(),openshiftServer);
  if (domain == null) {
    throw new CamelExchangeException("User has no domain with id " + getEndpoint().getDomain(),exchange);
  }
  OpenShiftOperation operation=exchange.getIn().getHeader(OpenShiftConstants.OPERATION,getEndpoint().getOperation(),OpenShiftOperation.class);
switch (operation) {
case start:
    doStart(exchange,domain);
  break;
case stop:
doStop(exchange,domain);
break;
case restart:
doRestart(exchange,domain);
break;
case state:
doState(exchange,domain);
break;
case getStandaloneCartridge:
doGetStandaloneCartridge(exchange,domain);
break;
case getEmbeddedCartridges:
doGetEmbeddedCartridges(exchange,domain);
break;
case getGitUrl:
doGetGitUrl(exchange,domain);
break;
case addEmbeddedCartridge:
doAddEmbeddedCartridge(exchange,domain);
break;
case removeEmbeddedCartridge:
doRemoveEmbeddedCartridge(exchange,domain);
break;
case scaleUp:
doScaleUp(exchange,domain);
break;
case scaleDown:
doScaleDown(exchange,domain);
break;
case getDeploymentType:
doGetDeploymentType(exchange,domain);
break;
case setDeploymentType:
doSetDeploymentType(exchange,domain);
break;
case addEnvironmentVariable:
doAddEnvironmentVariable(exchange,domain);
break;
case addMultipleEnvironmentVariables:
doAddMultipleEnvironmentVariables(exchange,domain);
break;
case updateEnvironmentVariable:
doUpdateEnvironmentVariable(exchange,domain);
break;
case getAllEnvironmentVariables:
doGetAllEnvironmentVariables(exchange,domain);
break;
case getEnvironmentVariableValue:
doGetEnvironmentVariableValue(exchange,domain);
break;
case removeEnvironmentVariable:
doRemoveEnvironmentVariable(exchange,domain);
break;
case getGearProfile:
doGetGearProfile(exchange,domain);
break;
case list:
default :
if (getEndpoint().getMode().equals("json")) {
doListJson(exchange,domain);
}
 else {
doListPojo(exchange,domain);
}
break;
}
}
