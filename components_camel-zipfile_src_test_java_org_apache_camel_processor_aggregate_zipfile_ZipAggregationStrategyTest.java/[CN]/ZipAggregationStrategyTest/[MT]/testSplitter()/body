{
  MockEndpoint mock=getMockEndpoint("mock:aggregateToZipEntry");
  mock.expectedMessageCount(1);
  mock.expectedHeaderReceived("foo","bar");
  assertMockEndpointsSatisfied();
  Thread.sleep(500);
  File[] files=new File("target/out").listFiles();
  assertTrue(files != null);
  assertTrue("Should be a file in target/out directory",files.length > 0);
  File resultFile=files[0];
  ZipInputStream zin=new ZipInputStream(new FileInputStream(resultFile));
  try {
    int fileCount=0;
    for (ZipEntry ze=zin.getNextEntry(); ze != null; ze=zin.getNextEntry()) {
      fileCount=fileCount + 1;
    }
    assertEquals("Zip file should contains " + ZipAggregationStrategyTest.EXPECTED_NO_FILES + " files",ZipAggregationStrategyTest.EXPECTED_NO_FILES,fileCount);
  }
  finally {
    IOHelper.close(zin);
  }
}
