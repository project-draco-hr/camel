{
  List<String> methods=new ArrayList<String>();
  if (ObjectHelper.isEmpty(ognl)) {
    return methods;
  }
  StringBuilder sb=new StringBuilder();
  int j=0;
  boolean squareBracket=false;
  boolean parenthesisBracket=false;
  for (int i=0; i < ognl.length(); i++) {
    char ch=ognl.charAt(i);
    if (j == 0 || (j == 1 && ognl.charAt(i - 1) == '?') || (ch != '.' && ch != '?' && ch != ']')) {
      sb.append(ch);
      if (ch == '[' && !parenthesisBracket) {
        squareBracket=true;
      }
 else       if (ch == '(') {
        parenthesisBracket=true;
      }
 else       if (ch == ')') {
        parenthesisBracket=false;
      }
      j++;
    }
 else {
      if (ch == '.' && !squareBracket && !parenthesisBracket) {
        String s=sb.toString();
        sb.setLength(0);
        if (s.endsWith("?")) {
          sb.append("?");
          s=s.substring(0,s.length() - 1);
        }
        methods.add(s);
        j=0;
      }
 else       if (ch == ']' && !parenthesisBracket) {
        sb.append(ch);
        String s=sb.toString();
        sb.setLength(0);
        methods.add(s);
        j=0;
        squareBracket=false;
      }
      if (ch != ']' || parenthesisBracket) {
        sb.append(ch);
      }
      if (j > 0) {
        j++;
      }
    }
  }
  if (sb.length() > 0) {
    methods.add(sb.toString());
  }
  String last=methods.isEmpty() ? null : methods.get(methods.size() - 1);
  if (parenthesisBracket && last != null) {
    if (last.contains("(") && !last.endsWith(")")) {
      throw new IllegalArgumentException("Method should end with parenthesis, was " + last);
    }
  }
  return methods;
}
