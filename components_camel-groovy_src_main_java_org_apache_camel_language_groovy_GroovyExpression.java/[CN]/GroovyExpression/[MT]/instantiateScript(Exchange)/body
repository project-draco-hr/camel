{
  GroovyLanguage language=(GroovyLanguage)exchange.getContext().resolveLanguage("groovy");
  Class<Script> scriptClass=language.getScriptFromCache(text);
  if (scriptClass == null) {
    GroovyShell shell;
    Set<GroovyShellFactory> shellFactories=exchange.getContext().getRegistry().findByType(GroovyShellFactory.class);
    if (shellFactories.size() > 1) {
      throw new IllegalStateException("Too many GroovyShellFactory instances found: " + shellFactories.size());
    }
 else     if (shellFactories.size() == 1) {
      shell=shellFactories.iterator().next().createGroovyShell(exchange);
    }
 else {
      ClassLoader cl=exchange.getContext().getApplicationContextClassLoader();
      shell=cl != null ? new GroovyShell(cl) : new GroovyShell();
    }
    scriptClass=shell.getClassLoader().parseClass(text);
    language.addScriptToCache(text,scriptClass);
  }
  try {
    return scriptClass.newInstance();
  }
 catch (  InstantiationException e) {
    throw new RuntimeCamelException(e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeCamelException(e);
  }
}
