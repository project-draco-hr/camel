{
  LOG.info("Apache Camel " + getVersion() + " (CamelContext:"+ getName()+ ") is starting");
  startServices(producerServicePool);
  if (isStreamCaching()) {
    if (StreamCaching.getStreamCaching(this) == null) {
      LOG.debug("StreamCaching is enabled");
      addInterceptStrategy(new StreamCaching());
    }
  }
  if (isTracing()) {
    if (Tracer.getTracer(this) == null) {
      Tracer tracer=Tracer.createTracer(this);
      LOG.debug("Tracing is enabled");
      addInterceptStrategy(tracer);
    }
  }
  if (isHandleFault()) {
    if (HandleFault.getHandleFault(this) == null) {
      LOG.debug("HandleFault is enabled");
      addInterceptStrategy(new HandleFault());
    }
  }
  if (getDelayer() != null && getDelayer() > 0) {
    if (Delayer.getDelayer(this) == null) {
      long millis=getDelayer();
      LOG.debug("Delayer is enabled with: " + millis + " ms.");
      addInterceptStrategy(new Delayer(millis));
    }
  }
  try {
    lifecycleStrategy.onContextStart(this);
  }
 catch (  Exception e) {
    LOG.warn("Cannot start lifecycleStrategy: " + lifecycleStrategy + ". Cause: "+ e.getMessage());
    if (lifecycleStrategy instanceof InstrumentationLifecycleStrategy) {
      LOG.warn("Will fallback to use default (non JMX) lifecycle strategy");
      lifecycleStrategy=new DefaultLifecycleStrategy();
      lifecycleStrategy.onContextStart(this);
    }
  }
  forceLazyInitialization();
  if (components != null) {
    for (    Component component : components.values()) {
      startServices(component);
    }
  }
  if (!routeDefinitionInitiated) {
    startRouteDefinitions(routeDefinitions);
    routeDefinitionInitiated=true;
  }
}
