{
  List<RouteDefinition> routes=new ArrayList<RouteDefinition>();
  if (routeId != null) {
    RouteDefinition route=getRouteDefinition(routeId);
    if (route == null) {
      throw new IllegalArgumentException("Route with id " + routeId + " does not exist");
    }
    routes.add(route);
  }
 else {
    routes.addAll(getRouteDefinitions());
  }
  StringBuilder buffer=new StringBuilder("{\n  \"routes\": {");
  boolean firstRoute=true;
  for (  RouteDefinition route : routes) {
    if (!firstRoute) {
      buffer.append("\n    },");
    }
 else {
      firstRoute=false;
    }
    String id=route.getId();
    buffer.append("\n    \"" + id + "\": {");
    buffer.append("\n      \"inputs\": [");
    Set<String> inputs=RouteDefinitionHelper.gatherAllStaticEndpointUris(route,true,false);
    boolean first=true;
    for (    String input : inputs) {
      if (!first) {
        buffer.append(",");
      }
 else {
        first=false;
      }
      buffer.append("\n        ");
      buffer.append(StringHelper.toJson("uri",input,true));
    }
    buffer.append("\n      ]");
    buffer.append(",");
    buffer.append("\n      \"outputs\": [");
    Set<String> outputs=RouteDefinitionHelper.gatherAllStaticEndpointUris(route,false,true);
    first=true;
    for (    String output : outputs) {
      if (!first) {
        buffer.append(",");
      }
 else {
        first=false;
      }
      buffer.append("\n        ");
      buffer.append(StringHelper.toJson("uri",output,true));
    }
    buffer.append("\n      ]");
  }
  buffer.append("\n    }");
  buffer.append("\n  }\n}\n");
  return buffer.toString();
}
