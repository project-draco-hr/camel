{
  Collection<Endpoint> answer=new ArrayList<Endpoint>();
synchronized (endpoints) {
    Endpoint oldEndpoint=endpoints.remove(uri);
    if (oldEndpoint != null) {
      answer.add(oldEndpoint);
      stopServices(oldEndpoint);
      for (      LifecycleStrategy strategy : lifecycleStrategies) {
        strategy.onEndpointRemove(oldEndpoint);
      }
    }
 else {
      Collection<Map.Entry<String,Endpoint>> worklist=new ArrayList<Map.Entry<String,Endpoint>>();
      for (      Map.Entry<String,Endpoint> entry : endpoints.entrySet()) {
        oldEndpoint=entry.getValue();
        if (!oldEndpoint.isSingleton() && uri.equals(oldEndpoint.getEndpointUri())) {
          worklist.add(entry);
        }
      }
      for (      Map.Entry<String,Endpoint> entry : worklist) {
        oldEndpoint=entry.getValue();
        answer.add(oldEndpoint);
        stopServices(oldEndpoint);
        endpoints.remove(entry.getKey());
        for (        LifecycleStrategy strategy : lifecycleStrategies) {
          strategy.onEndpointRemove(oldEndpoint);
        }
      }
    }
  }
  return answer;
}
