{
  Map<String,RouteService> filtered=new LinkedHashMap<String,RouteService>();
  for (  Map.Entry<String,RouteService> entry : routeServices.entrySet()) {
    boolean startable;
    Consumer consumer=entry.getValue().getRoutes().iterator().next().getConsumer();
    if (consumer instanceof SuspendableService) {
      startable=((SuspendableService)consumer).isSuspended();
    }
 else     if (consumer instanceof ServiceSupport) {
      startable=((ServiceSupport)consumer).getStatus().isStartable();
    }
 else {
      startable=entry.getValue().getStatus().isStartable();
    }
    if (startable) {
      filtered.put(entry.getKey(),entry.getValue());
    }
  }
  if (!filtered.isEmpty()) {
    safelyStartRouteServices(checkClash,startConsumer,resumeConsumer,filtered.values());
  }
  for (  StartupListener startup : startupListeners) {
    startup.onCamelContextStarted(this,isStarted());
  }
}
