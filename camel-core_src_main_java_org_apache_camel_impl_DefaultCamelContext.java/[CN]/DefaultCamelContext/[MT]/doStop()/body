{
  stopWatch.restart();
  log.info("Apache Camel " + getVersion() + " (CamelContext: "+ getName()+ ") is shutting down");
  EventHelper.notifyCamelContextStopping(this);
  try {
    shutdownStrategy.shutdownForced(this,getRouteStartupOrder());
  }
 catch (  Throwable e) {
    log.warn("Error occurred while shutting down routes. This exception will be ignored.",e);
  }
  getRouteStartupOrder().clear();
  shutdownServices(routeServices.values());
  suspendedRouteServices.clear();
  if (errorHandlerExecutorService != null) {
    getExecutorServiceManager().shutdownNow(errorHandlerExecutorService);
    errorHandlerExecutorService=null;
  }
  ServiceHelper.stopAndShutdownService(getDebugger());
  shutdownServices(endpoints.values());
  endpoints.clear();
  shutdownServices(components.values());
  components.clear();
  shutdownServices(languages.values());
  languages.clear();
  try {
    for (    LifecycleStrategy strategy : lifecycleStrategies) {
      strategy.onContextStop(this);
    }
  }
 catch (  Throwable e) {
    log.warn("Error occurred while stopping lifecycle strategies. This exception will be ignored.",e);
  }
  shutdownServices(servicesToClose);
  servicesToClose.clear();
  EventHelper.notifyCamelContextStopped(this);
  for (  EventNotifier notifier : getManagementStrategy().getEventNotifiers()) {
    shutdownServices(notifier);
  }
  shutdownServices(executorServiceManager);
  shutdownServices(managementStrategy);
  shutdownServices(managementMBeanAssembler);
  shutdownServices(lifecycleStrategies);
  forceStopLazyInitialization();
  IntrospectionSupport.stop();
  stopWatch.stop();
  if (log.isInfoEnabled()) {
    log.info("Uptime {}",getUptime());
    log.info("Apache Camel " + getVersion() + " (CamelContext: "+ getName()+ ") is shutdown in "+ TimeUtils.printDuration(stopWatch.taken()));
  }
  startDate=null;
}
