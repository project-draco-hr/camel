{
  if (isStreamCaching()) {
    if (StreamCaching.getStreamCaching(this) == null) {
      LOG.info("StreamCaching is enabled on CamelContext: " + getName());
      addInterceptStrategy(new StreamCaching());
    }
  }
  if (isTracing()) {
    LOG.info("Tracing is enabled on CamelContext" + getName());
  }
  if (isHandleFault()) {
    if (HandleFault.getHandleFault(this) == null) {
      LOG.info("HandleFault is enabled on CamelContext: " + getName());
      addInterceptStrategy(new HandleFault());
    }
  }
  if (getDelayer() != null && getDelayer() > 0) {
    if (Delayer.getDelayer(this) == null) {
      long millis=getDelayer();
      LOG.info("Delayer is enabled with: " + millis + " ms. on CamelContext: "+ getName());
      addInterceptStrategy(new Delayer(millis));
    }
  }
  getManagementStrategy().start();
  for (  LifecycleStrategy strategy : lifecycleStrategies) {
    strategy.onContextStart(this);
  }
  EventHelper.notifyCamelContextStarting(this);
  forceLazyInitialization();
  addService(executorServiceStrategy);
  addService(producerServicePool);
  addService(inflightRepository);
  addService(shutdownStrategy);
  startServices(components.values());
  if (!routeDefinitionInitiated) {
    startRouteDefinitions(routeDefinitions);
    routeDefinitionInitiated=true;
  }
}
