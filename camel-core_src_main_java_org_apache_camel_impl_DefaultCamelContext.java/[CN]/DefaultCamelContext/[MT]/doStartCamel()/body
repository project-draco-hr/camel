{
  if (isStreamCaching()) {
    if (StreamCaching.getStreamCaching(this) == null) {
      log.info("StreamCaching is enabled on CamelContext: " + getName());
      addInterceptStrategy(new StreamCaching());
    }
  }
  if (isTracing()) {
    log.info("Tracing is enabled on CamelContext: " + getName());
  }
  if (isUseMDCLogging()) {
    log.info("MDC logging is enabled on CamelContext: " + getName());
  }
  if (isHandleFault()) {
    if (HandleFault.getHandleFault(this) == null) {
      log.info("HandleFault is enabled on CamelContext: " + getName());
      addInterceptStrategy(new HandleFault());
    }
  }
  if (getDelayer() != null && getDelayer() > 0) {
    if (Delayer.getDelayer(this) == null) {
      long millis=getDelayer();
      log.info("Delayer is enabled with: " + millis + " ms. on CamelContext: "+ getName());
      addInterceptStrategy(new Delayer(millis));
    }
  }
  if (getDebugger() != null) {
    log.info("Debugger: " + getDebugger() + " is enabled on CamelContext: "+ getName());
    getDebugger().setCamelContext(this);
    startService(getDebugger());
    addInterceptStrategy(new Debug(getDebugger()));
  }
  ManagementStrategy managementStrategy=getManagementStrategy();
  if (managementStrategy instanceof CamelContextAware) {
    ((CamelContextAware)managementStrategy).setCamelContext(this);
  }
  ServiceHelper.startService(managementStrategy);
  ServiceHelper.startServices(lifecycleStrategies);
  Iterator<LifecycleStrategy> it=lifecycleStrategies.iterator();
  while (it.hasNext()) {
    LifecycleStrategy strategy=it.next();
    try {
      strategy.onContextStart(this);
    }
 catch (    VetoCamelContextStartException e) {
      log.warn("Lifecycle strategy vetoed starting CamelContext ({}) due {}",getName(),e.getMessage());
      throw e;
    }
catch (    Exception e) {
      log.warn("Lifecycle strategy " + strategy + " failed starting CamelContext ({}) due {}",getName(),e.getMessage());
      throw e;
    }
  }
  for (  EventNotifier notifier : getManagementStrategy().getEventNotifiers()) {
    if (notifier instanceof Service) {
      Service service=(Service)notifier;
      for (      LifecycleStrategy strategy : lifecycleStrategies) {
        strategy.onServiceAdd(this,service,null);
      }
    }
    if (notifier instanceof Service) {
      startService((Service)notifier);
    }
  }
  EventHelper.notifyCamelContextStarting(this);
  forceLazyInitialization();
  endpoints=new EndpointRegistry(this,endpoints);
  addService(endpoints);
  doAddService(executorServiceManager,false);
  addService(producerServicePool);
  addService(inflightRepository);
  addService(shutdownStrategy);
  addService(packageScanClassResolver);
  Component existing=lookupPropertiesComponent();
  if (existing != null) {
    if (existing instanceof PropertiesComponent) {
      propertiesComponent=(PropertiesComponent)existing;
    }
 else {
      throw new IllegalArgumentException("Found properties component of type: " + existing.getClass() + " instead of expected: "+ PropertiesComponent.class);
    }
  }
  startServices(components.values());
  startRouteDefinitions(routeDefinitions);
  if (doNotStartRoutesOnFirstStart) {
    log.debug("Skip starting of routes as CamelContext has been configured with autoStartup=false");
  }
  doStartOrResumeRoutes(routeServices,true,!doNotStartRoutesOnFirstStart,false,true);
}
