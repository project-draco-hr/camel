{
  startDate=new Date();
  stopWatch.restart();
  log.info("Apache Camel " + getVersion() + " (CamelContext: "+ getName()+ ") is starting");
  Container.Instance.manage(this);
  doNotStartRoutesOnFirstStart=!firstStartDone && !isAutoStartup();
  if (firstStartDone && !isAutoStartup() && isStarted()) {
    doStartOrResumeRoutes(routeServices,true,true,false,true);
  }
  try {
    firstStartDone=true;
    super.start();
  }
 catch (  VetoCamelContextStartException e) {
    if (e.isRethrowException()) {
      throw e;
    }
 else {
      log.info("CamelContext ({}) vetoed to not start due {}",getName(),e.getMessage());
      stop();
      return;
    }
  }
  stopWatch.stop();
  if (log.isInfoEnabled()) {
    int started=0;
    for (    Route route : getRoutes()) {
      if (getRouteStatus(route.getId()).isStarted()) {
        started++;
      }
    }
    log.info("Total " + getRoutes().size() + " routes, of which "+ started+ " are started.");
    log.info("Apache Camel " + getVersion() + " (CamelContext: "+ getName()+ ") started in "+ TimeUtils.printDuration(stopWatch.taken()));
  }
  EventHelper.notifyCamelContextStarted(this);
}
