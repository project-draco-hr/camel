{
  ObjectHelper.notEmpty(uri,"uri");
  log.trace("Getting endpoint with uri: {}",uri);
  try {
    uri=resolvePropertyPlaceholders(uri);
  }
 catch (  Exception e) {
    throw new ResolveEndpointFailedException(uri,e);
  }
  uri=normalizeEndpointUri(uri);
  log.trace("Getting endpoint with normalized uri: {}",uri);
  Endpoint answer;
  String scheme=null;
synchronized (endpoints) {
    answer=endpoints.get(getEndpointKey(uri));
    if (answer == null) {
      try {
        String splitURI[]=ObjectHelper.splitOnCharacter(uri,":",2);
        if (splitURI[1] != null) {
          scheme=splitURI[0];
          Component component=getComponent(scheme);
          if (component != null) {
            answer=component.createEndpoint(uri);
            if (answer != null && log.isDebugEnabled()) {
              log.debug(uri + " converted to endpoint: " + answer+ " by component: "+ component);
            }
          }
        }
        if (answer == null) {
          answer=createEndpoint(uri);
        }
        if (answer != null) {
          addService(answer);
          answer=addEndpointToRegistry(uri,answer);
        }
      }
 catch (      Exception e) {
        throw new ResolveEndpointFailedException(uri,e);
      }
    }
  }
  if (answer == null && scheme != null) {
    throw new ResolveEndpointFailedException(uri,"No component found with scheme: " + scheme);
  }
  return answer;
}
