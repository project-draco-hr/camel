{
  this.tracedExchange=exchange;
  Message in=exchange.getIn();
  this.timestamp=timestamp;
  this.fromEndpointUri=exchange.getFromEndpoint() != null ? exchange.getFromEndpoint().getEndpointUri() : null;
  this.previousNode=extractFromNode(exchange);
  this.toNode=extractToNode(exchange);
  this.exchangeId=exchange.getExchangeId();
  this.routeId=exchange.getFromRouteId();
  this.shortExchangeId=extractShortExchangeId(exchange);
  this.exchangePattern=exchange.getPattern().toString();
  this.properties=exchange.getProperties().isEmpty() ? null : exchange.getProperties().toString();
  this.headers=in.getHeaders().isEmpty() ? null : in.getHeaders().toString();
  this.body=MessageHelper.extractBodyForLogging(in,"");
  this.bodyType=MessageHelper.getBodyTypeName(in);
  if (exchange.hasOut()) {
    Message out=exchange.getOut();
    this.outHeaders=out.getHeaders().isEmpty() ? null : out.getHeaders().toString();
    this.outBody=MessageHelper.extractBodyAsString(out);
    this.outBodyType=MessageHelper.getBodyTypeName(out);
  }
  this.causedByException=extractCausedByException(exchange);
}
