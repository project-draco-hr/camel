{
  AbstractXmlApplicationContext db=new ClassPathXmlApplicationContext("org/apache/camel/routepolicy/quartz2/SpringQuartzEmbeddedDatabase.xml");
  db.start();
  AbstractXmlApplicationContext app=new ClassPathXmlApplicationContext("org/apache/camel/routepolicy/quartz2/SpringQuartzClusteredAppOneTest.xml");
  app.start();
  AbstractXmlApplicationContext app2=new ClassPathXmlApplicationContext("org/apache/camel/routepolicy/quartz2/SpringQuartzClusteredAppTwoTest.xml");
  app2.start();
  CamelContext camel=app.getBean("camelContext",CamelContext.class);
  MockEndpoint mock=camel.getEndpoint("mock:result",MockEndpoint.class);
  mock.expectedMessageCount(1);
  mock.expectedBodiesReceived("clustering PINGS!");
  Thread.sleep(5000);
  app.getBean("template",ProducerTemplate.class).sendBody("direct:start","clustering");
  mock.assertIsSatisfied();
  log.warn("The first app is going to crash NOW!");
  app.close();
  log.warn("Crashed...");
  log.warn("Crashed...");
  log.warn("Crashed...");
  Thread.sleep(20000);
  CamelContext camel2=app2.getBean("camelContext2",CamelContext.class);
  MockEndpoint mock2=camel2.getEndpoint("mock:result",MockEndpoint.class);
  mock2.expectedMessageCount(1);
  mock2.expectedBodiesReceived("clustering PONGS!");
  app2.getBean("template",ProducerTemplate.class).sendBody("direct:start","clustering");
  mock2.assertIsSatisfied();
  app2.close();
  db.close();
}
