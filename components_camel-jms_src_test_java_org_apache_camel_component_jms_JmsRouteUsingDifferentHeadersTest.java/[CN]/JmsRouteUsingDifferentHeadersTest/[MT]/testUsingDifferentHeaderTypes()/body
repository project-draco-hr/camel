{
  Map<String,Object> headers=new LinkedHashMap<String,Object>();
  headers.put("a",new Byte("65"));
  headers.put("b",Boolean.TRUE);
  headers.put("c",new Double("44444"));
  headers.put("d",new Float("55555"));
  headers.put("e",new Integer("222"));
  headers.put("f",new Long("7777777"));
  headers.put("g",new Short("333"));
  headers.put("h","Hello");
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  mock.message(0).header("a").isInstanceOf(Byte.class);
  mock.message(0).header("b").isInstanceOf(Boolean.class);
  mock.message(0).header("c").isInstanceOf(Double.class);
  mock.message(0).header("d").isInstanceOf(Float.class);
  mock.message(0).header("e").isInstanceOf(Integer.class);
  mock.message(0).header("f").isInstanceOf(Long.class);
  mock.message(0).header("g").isInstanceOf(Short.class);
  mock.message(0).header("h").isInstanceOf(String.class);
  template.sendBodyAndHeaders("activemq:queue:foo","Hello World",headers);
  assertMockEndpointsSatisfied();
}
