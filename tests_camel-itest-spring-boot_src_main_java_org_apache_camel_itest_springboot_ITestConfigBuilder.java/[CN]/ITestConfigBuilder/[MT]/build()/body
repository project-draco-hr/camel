{
  if (config.getModuleName() == null) {
    fail("ModuleName is required");
  }
  if (config.getUnitTestEnabled() == null) {
    config.setUnitTestEnabled(booleanPropertyOr("unitTestEnabled",true));
  }
  if (config.getMavenGroup() == null) {
    config.setMavenGroup(propertyOr("mavenGroup","org.apache.camel"));
  }
  if (config.getMavenVersion() == null) {
    config.setMavenVersion(propertyOr("mavenVersion",null));
  }
  if (config.getMavenOfflineResolution() == null) {
    config.setMavenOfflineResolution(booleanPropertyOr("mavenOfflineResolution",false));
  }
  if (config.getUnitTestInclusionPattern() == null) {
    config.setUnitTestInclusionPattern(propertyOr("unitTestInclusionPattern","^.*Test$"));
  }
  if (config.getUnitTestExclusionPattern() == null) {
    config.setUnitTestExclusionPattern(propertyOr("unitTestExclusionPattern",".*(\\.integration\\..*|IntegrationTest$)"));
  }
  if (config.getIncludeTestDependencies() == null) {
    config.setIncludeTestDependencies(booleanPropertyOr("includeTestDependencies",config.getUnitTestEnabled()));
  }
  if (config.getIncludeProvidedDependencies() == null) {
    config.setIncludeProvidedDependencies(booleanPropertyOr("includeProvidedDependencies",false));
  }
  if (config.getModulesPath() == null) {
    config.setModulesPath(propertyOr("modulesPath","../../components/"));
  }
  if (config.getModuleBasePath() == null) {
    config.setModuleBasePath(config.getModulesPath() + config.getModuleName());
  }
  if (config.getUnitTestBasePackage() == null) {
    config.setUnitTestBasePackage(propertyOr("unitTestBasePackage","org.apache.camel"));
  }
  if (config.getAutoStartComponent() == null) {
    config.setAutoStartComponent(booleanPropertyOr("autostartComponent",true));
  }
  if (config.getResources() == null) {
    config.setResources(Collections.<String,String>emptyMap());
  }
  if (config.getAdditionalDependencies() == null) {
    config.setAdditionalDependencies(Collections.<String>emptySet());
  }
  if (config.getMavenExclusions() == null) {
    config.setMavenExclusions(Collections.<String>emptySet());
  }
  if (config.getJmxDisabledNames() == null) {
    config.setJmxDisabledNames(Collections.<String>emptySet());
  }
  if (config.getSystemProperties() == null) {
    config.setSystemProperties(Collections.<String,String>emptyMap());
  }
  if (config.getUseCustomLog() == null) {
    config.setUseCustomLog(booleanPropertyOr("useCustomLog",true));
  }
  return config;
}
