{
  if (definition instanceof ServiceCallDefinition) {
    ServiceCallDefinition sc=(ServiceCallDefinition)definition;
    String name=sc.getName();
    String uri=sc.getUri();
    ExchangePattern mep=sc.getPattern();
    RibbonConfigurationDefinition config=(RibbonConfigurationDefinition)sc.getServiceCallConfiguration();
    RibbonConfigurationDefinition configRef=null;
    if (sc.getServiceCallConfigurationRef() != null) {
      configRef=CamelContextHelper.lookup(routeContext.getCamelContext(),sc.getServiceCallConfigurationRef(),RibbonConfigurationDefinition.class);
      if (configRef == null) {
        routeContext.getCamelContext().getServiceCallConfiguration(sc.getServiceCallConfigurationRef(),RibbonConfigurationDefinition.class);
      }
    }
    if (config == null && configRef == null) {
      config=routeContext.getCamelContext().getServiceCallConfiguration(null,RibbonConfigurationDefinition.class);
    }
    if (config == null) {
      Set<RibbonConfigurationDefinition> set=routeContext.getCamelContext().getRegistry().findByType(RibbonConfigurationDefinition.class);
      if (set.size() == 1) {
        config=set.iterator().next();
      }
    }
    if (config == null && configRef == null) {
      throw new IllegalStateException("The ServiceCall: " + definition + " must be configured before it can be used.");
    }
    Map<String,Object> parameters=new HashMap<>();
    if (configRef != null) {
      IntrospectionSupport.getProperties(configRef,parameters,null);
    }
    if (config != null) {
      IntrospectionSupport.getProperties(config,parameters,null);
    }
    RibbonConfiguration rc=new RibbonConfiguration();
    IntrospectionSupport.setProperties(rc,parameters);
    Object lb=configureLoadBalancer(routeContext,sc);
    if (lb == null && config != null) {
      lb=configureLoadBalancer(routeContext,config);
    }
    if (lb == null && configRef != null) {
      lb=configureLoadBalancer(routeContext,configRef);
    }
    ServiceCallServerListStrategy sl=configureServerListStrategy(routeContext,sc);
    if (sl == null && config != null) {
      sl=configureServerListStrategy(routeContext,config);
    }
    if (sl == null && configRef != null) {
      sl=configureServerListStrategy(routeContext,configRef);
    }
    if (lb != null && !(lb instanceof IRule)) {
      throw new IllegalArgumentException("Load balancer must be of type: " + IRule.class + " but is of type: "+ lb.getClass().getName());
    }
    String component=config != null ? config.getComponent() : null;
    if (component == null && configRef != null) {
      component=configRef.getComponent();
    }
    Map<String,String> properties=configureProperties(routeContext,config,configRef);
    RibbonServiceCallProcessor processor=new RibbonServiceCallProcessor(name,uri,component,mep,rc);
    processor.setRule((IRule)lb);
    processor.setServerListStrategy(sl);
    processor.setRibbonClientConfig(properties);
    return processor;
  }
 else {
    return null;
  }
}
