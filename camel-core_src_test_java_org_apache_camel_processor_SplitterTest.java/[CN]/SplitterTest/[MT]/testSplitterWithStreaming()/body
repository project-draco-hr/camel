{
  MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
  resultEndpoint.expectedMessageCount(5);
  resultEndpoint.expectedHeaderReceived("foo","bar");
  template.request("direct:streaming",new Processor(){
    public void process(    Exchange exchange){
      Message in=exchange.getIn();
      in.setBody("James,Guillaume,Hiram,Rob,Roman");
      in.setHeader("foo","bar");
    }
  }
);
  assertMockEndpointsSatisfied();
  int size=resultEndpoint.getReceivedExchanges().size();
  for (int i=0; i < size; i++) {
    Exchange exchange=resultEndpoint.getReceivedExchanges().get(i);
    assertEquals(i,exchange.getProperty(Exchange.SPLIT_INDEX));
    if (i < (size - 1)) {
      assertEquals(Boolean.FALSE,exchange.getProperty(Exchange.SPLIT_COMPLETE));
      assertNull(exchange.getProperty(Exchange.SPLIT_SIZE));
    }
 else {
      assertEquals(Boolean.TRUE,exchange.getProperty(Exchange.SPLIT_COMPLETE));
      assertEquals(size,exchange.getProperty(Exchange.SPLIT_SIZE));
    }
  }
}
