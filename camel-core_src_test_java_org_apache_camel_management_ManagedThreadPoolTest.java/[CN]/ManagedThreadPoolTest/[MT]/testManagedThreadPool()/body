{
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=threadpools,name=threads1(threads)");
  Boolean shutdown=(Boolean)mbeanServer.getAttribute(on,"Shutdown");
  assertEquals(false,shutdown.booleanValue());
  Integer corePoolSize=(Integer)mbeanServer.getAttribute(on,"CorePoolSize");
  assertEquals(15,corePoolSize.intValue());
  Integer maxPoolSize=(Integer)mbeanServer.getAttribute(on,"MaximumPoolSize");
  assertEquals(30,maxPoolSize.intValue());
  Integer poolSize=(Integer)mbeanServer.getAttribute(on,"PoolSize");
  assertEquals(0,poolSize.intValue());
  Long keepAlive=(Long)mbeanServer.getAttribute(on,"KeepAliveTime");
  assertEquals(60,keepAlive.intValue());
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  Thread.sleep(2000);
  poolSize=(Integer)mbeanServer.getAttribute(on,"PoolSize");
  assertEquals(1,poolSize.intValue());
  Integer largest=(Integer)mbeanServer.getAttribute(on,"LargestPoolSize");
  assertEquals(1,largest.intValue());
  Long completed=(Long)mbeanServer.getAttribute(on,"CompletedTaskCount");
  assertEquals(1,completed.intValue());
  Long size=(Long)mbeanServer.getAttribute(on,"TaskQueueSize");
  assertEquals(0,size.intValue());
  Boolean empty=(Boolean)mbeanServer.getAttribute(on,"TaskQueueEmpty");
  assertEquals(true,empty.booleanValue());
}
