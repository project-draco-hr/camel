{
  if (velocityEngine == null) {
    velocityEngine=new VelocityEngine();
    Properties properties=new Properties();
    if (ObjectHelper.isNotEmpty(getPropertiesFile())) {
      Resource resource=getResourceLoader().getResource(getPropertiesFile());
      InputStream reader=resource.getInputStream();
      properties.load(reader);
      log.info("Loaded the velocity configuration file " + getPropertiesFile());
    }
    velocityEngine.addProperty("CamelClassResolver",getCamelContext().getClassResolver());
    properties.setProperty(Velocity.FILE_RESOURCE_LOADER_CACHE,isLoaderCache() ? "true" : "false");
    properties.setProperty(Velocity.RESOURCE_LOADER,"file, class");
    properties.setProperty("class.resource.loader.description","Camel Velocity Classpath Resource Loader");
    properties.setProperty("class.resource.loader.class",CamelVelocityClasspathResourceLoader.class.getName());
    properties.setProperty(Velocity.RUNTIME_LOG_LOGSYSTEM_CLASS,CommonsLogLogChute.class.getName());
    properties.setProperty(CommonsLogLogChute.LOGCHUTE_COMMONS_LOG_NAME,VelocityEndpoint.class.getName());
    log.debug("Initializing VelocityEngine with properties {}",properties);
    velocityEngine.init(properties);
  }
  return velocityEngine;
}
