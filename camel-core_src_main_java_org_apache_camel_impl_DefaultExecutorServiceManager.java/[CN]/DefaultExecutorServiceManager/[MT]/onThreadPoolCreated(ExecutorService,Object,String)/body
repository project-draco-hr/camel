{
  executorServices.add(executorService);
  String id;
  String sourceId=null;
  String routeId=null;
  if (source instanceof OptionalIdentifiedDefinition) {
    id=((OptionalIdentifiedDefinition)source).idOrCreate(this.camelContext.getNodeIdFactory());
    sourceId=((OptionalIdentifiedDefinition)source).getShortName();
  }
 else   if (source instanceof String) {
    id=(String)source;
  }
 else   if (source != null) {
    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";
  }
 else {
    id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";
  }
  ObjectHelper.notEmpty(id,"id for thread pool " + executorService);
  if (source instanceof ProcessorDefinition) {
    RouteDefinition route=ProcessorDefinitionHelper.getRoute((ProcessorDefinition)source);
    if (route != null) {
      routeId=route.idOrCreate(this.camelContext.getNodeIdFactory());
    }
  }
  if (executorService instanceof ThreadPoolExecutor) {
    ThreadPoolExecutor threadPool=(ThreadPoolExecutor)executorService;
    for (    LifecycleStrategy lifecycle : camelContext.getLifecycleStrategies()) {
      lifecycle.onThreadPoolAdd(camelContext,threadPool,id,sourceId,routeId,threadPoolProfileId);
    }
  }
  onNewExecutorService(executorService);
}
