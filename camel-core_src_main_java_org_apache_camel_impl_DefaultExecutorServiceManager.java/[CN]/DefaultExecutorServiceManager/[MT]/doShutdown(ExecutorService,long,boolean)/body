{
  if (executorService == null) {
    return false;
  }
  boolean warned=false;
  if (!executorService.isShutdown()) {
    StopWatch watch=new StopWatch();
    LOG.trace("Shutdown of ExecutorService: {} with await termination: {} millis",executorService,shutdownAwaitTermination);
    executorService.shutdown();
    if (shutdownAwaitTermination > 0) {
      try {
        if (!awaitTermination(executorService,shutdownAwaitTermination)) {
          warned=true;
          LOG.warn("Forcing shutdown of ExecutorService: {} due first await termination elapsed.",executorService);
          executorService.shutdownNow();
          if (!awaitTermination(executorService,shutdownAwaitTermination)) {
            LOG.warn("Cannot completely force shutdown of ExecutorService: {} due second await termination elapsed.",executorService);
          }
        }
      }
 catch (      InterruptedException e) {
        warned=true;
        LOG.warn("Forcing shutdown of ExecutorService: {} due interrupted.",executorService);
        executorService.shutdownNow();
      }
    }
    if (warned) {
      LOG.info("Shutdown of ExecutorService: {} is shutdown: {} and terminated: {} took: {}.",executorService,executorService.isShutdown(),executorService.isTerminated(),TimeUtils.printDuration(watch.taken()));
    }
 else     if (LOG.isDebugEnabled()) {
      LOG.debug("Shutdown of ExecutorService: {} is shutdown: {} and terminated: {} took: {}.",executorService,executorService.isShutdown(),executorService.isTerminated(),TimeUtils.printDuration(watch.taken()));
    }
  }
  ThreadPoolExecutor threadPool=null;
  if (executorService instanceof ThreadPoolExecutor) {
    threadPool=(ThreadPoolExecutor)executorService;
  }
 else   if (executorService instanceof SizedScheduledExecutorService) {
    threadPool=((SizedScheduledExecutorService)executorService).getScheduledThreadPoolExecutor();
  }
  if (threadPool != null) {
    for (    LifecycleStrategy lifecycle : camelContext.getLifecycleStrategies()) {
      lifecycle.onThreadPoolRemove(camelContext,threadPool);
    }
  }
  if (!failSafe) {
    executorServices.remove(executorService);
  }
  return warned;
}
