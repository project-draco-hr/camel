{
  currentCache().put(KEY_ONE,VALUE_ONE);
  Exchange exchange=template.request("direct:replaceasync",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(InfinispanConstants.KEY,KEY_ONE);
      exchange.getIn().setHeader(InfinispanConstants.VALUE,VALUE_TWO);
      exchange.getIn().setHeader(InfinispanConstants.OLD_VALUE,VALUE_ONE);
      exchange.getIn().setHeader(InfinispanConstants.LIFESPAN_TIME,new Long(LIFESPAN_FOR_MAX_IDLE));
      exchange.getIn().setHeader(InfinispanConstants.LIFESPAN_TIME_UNIT,TimeUnit.MILLISECONDS.toString());
      exchange.getIn().setHeader(InfinispanConstants.MAX_IDLE_TIME,new Long(MAX_IDLE_TIME));
      exchange.getIn().setHeader(InfinispanConstants.MAX_IDLE_TIME_UNIT,TimeUnit.MILLISECONDS.toString());
    }
  }
);
  assertTrue(exchange.getIn().getHeader(InfinispanConstants.RESULT,Boolean.class));
  assertEquals(VALUE_TWO,currentCache().get(KEY_ONE));
  Thread.sleep(300);
  waitForNullValue(KEY_ONE);
}
