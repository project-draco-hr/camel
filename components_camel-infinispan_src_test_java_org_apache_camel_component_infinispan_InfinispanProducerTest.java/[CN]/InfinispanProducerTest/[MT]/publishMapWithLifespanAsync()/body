{
  template.send("direct:putallasync",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      Map<String,String> map=new HashMap<String,String>();
      map.put(KEY_ONE,VALUE_ONE);
      map.put(KEY_TWO,VALUE_TWO);
      exchange.getIn().setHeader(InfinispanConstants.MAP,map);
      exchange.getIn().setHeader(InfinispanConstants.OPERATION,InfinispanConstants.PUT_ALL);
      exchange.getIn().setHeader(InfinispanConstants.LIFESPAN_TIME,new Long(LIFESPAN_TIME));
      exchange.getIn().setHeader(InfinispanConstants.LIFESPAN_TIME_UNIT,TimeUnit.MILLISECONDS.toString());
    }
  }
);
  waitFor(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      Object valueOne=currentCache().get(KEY_ONE);
      Object valueTwo=currentCache().get(KEY_TWO);
      return valueOne.equals(VALUE_ONE) && valueTwo.equals(VALUE_TWO) && currentCache().size() == 2;
    }
  }
,100);
  waitForNullValue(KEY_ONE);
}
