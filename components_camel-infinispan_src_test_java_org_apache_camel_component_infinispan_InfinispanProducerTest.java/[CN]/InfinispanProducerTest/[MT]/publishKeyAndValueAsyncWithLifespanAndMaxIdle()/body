{
  final Exchange exchange=template.send("direct:putasync",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(InfinispanConstants.KEY,KEY_ONE);
      exchange.getIn().setHeader(InfinispanConstants.VALUE,VALUE_ONE);
      exchange.getIn().setHeader(InfinispanConstants.LIFESPAN_TIME,new Long(LIFESPAN_FOR_MAX_IDLE));
      exchange.getIn().setHeader(InfinispanConstants.LIFESPAN_TIME_UNIT,TimeUnit.MILLISECONDS.toString());
      exchange.getIn().setHeader(InfinispanConstants.MAX_IDLE_TIME,new Long(MAX_IDLE_TIME));
      exchange.getIn().setHeader(InfinispanConstants.MAX_IDLE_TIME_UNIT,TimeUnit.MILLISECONDS.toString());
    }
  }
);
  waitFor(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      NotifyingFuture resultPutAsync=exchange.getIn().getHeader(InfinispanConstants.RESULT,NotifyingFuture.class);
      return resultPutAsync.isDone() && currentCache().get(KEY_ONE).toString().equals(VALUE_ONE);
    }
  }
,1000);
  Thread.sleep(300);
  waitForNullValue(KEY_ONE);
}
