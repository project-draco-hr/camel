{
  Exception e=(Exception)mock.getExchanges().get(0).getProperty(Exchange.EXCEPTION_CAUGHT);
  assertNotNull("Expected excpetion " + cl.getName() + " missing",e);
  if (e.getClass() != cl) {
    String stackTrace=getStrackTrace(e);
    fail("Exception  " + cl.getName() + " excpected, but was "+ e.getClass().getName()+ ": "+ stackTrace);
  }
  if (expectedMessagePart != null) {
    if (e.getMessage() == null) {
      fail("Expected excption does not contain a message. Stack trace: " + getStrackTrace(e));
    }
 else {
      if (!e.getMessage().contains(expectedMessagePart)) {
        fail("Expected excption message does not contain a expected message part " + expectedMessagePart + ".  Stack trace: "+ getStrackTrace(e));
      }
    }
  }
  if (expectedCauseClass != null) {
    Throwable cause=e.getCause();
    assertNotNull("Expected cause exception" + expectedCauseClass.getName() + " missing",cause);
    if (expectedCauseClass != cause.getClass()) {
      fail("Cause exception " + expectedCauseClass.getName() + " expected, but was "+ cause.getClass().getName()+ ": "+ getStrackTrace(e));
    }
  }
}
