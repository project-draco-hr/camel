{
  context.getAsyncProcessorAwaitManager().getStatistics().setStatisticsEnabled(true);
  assertEquals(0,context.getAsyncProcessorAwaitManager().size());
  getMockEndpoint("mock:before").expectedBodiesReceived("Hello Camel");
  getMockEndpoint("mock:after").expectedBodiesReceived("Bye Camel");
  getMockEndpoint("mock:result").expectedMessageCount(0);
  try {
    template.requestBody("direct:start","Hello Camel",String.class);
  }
 catch (  CamelExecutionException e) {
    RejectedExecutionException cause=assertIsInstanceOf(RejectedExecutionException.class,e.getCause());
    assertTrue(cause.getMessage().startsWith("Interrupted while waiting for asynchronous callback"));
  }
  assertMockEndpointsSatisfied();
  assertEquals(0,context.getAsyncProcessorAwaitManager().size());
  assertEquals(1,context.getAsyncProcessorAwaitManager().getStatistics().getThreadsBlocked());
  assertEquals(1,context.getAsyncProcessorAwaitManager().getStatistics().getThreadsInterrupted());
}
