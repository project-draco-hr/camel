{
  Set<Entry<Key<?>,Binding<?>>> entries=injector.getBindings().entrySet();
  for (  Entry<Key<?>,Binding<?>> entry : entries) {
    Key<?> key=entry.getKey();
    Binding<?> binding=entry.getValue();
    Annotation annotation=key.getAnnotation();
    Type type=key.getTypeLiteral().getType();
    JndiBind jndiBind=null;
    if (type instanceof Class) {
      Class<?> aClass=(Class<?>)type;
      jndiBind=aClass.getAnnotation(JndiBind.class);
    }
    if (annotation instanceof JndiBind) {
      jndiBind=(JndiBind)annotation;
    }
    String jndiName=null;
    if (jndiBind != null) {
      jndiName=jndiBind.value();
    }
    if (jndiName == null) {
      if (annotation instanceof Named) {
        Named named=(Named)annotation;
        String name=named.value();
        jndiName=type.toString() + "/" + name;
      }
 else       if (type instanceof Class<?>) {
        Class<?> aClass=(Class<?>)type;
        if (annotation == null) {
          jndiName=aClass.getName();
        }
 else {
          jndiName=aClass.getName() + annotation;
        }
      }
    }
    if (jndiName != null) {
      Object value=binding.getProvider();
      if (value != null) {
        context.bind(jndiName,value);
      }
    }
  }
  for (  Entry<Object,Object> entry : jndiNames.entrySet()) {
    String jndiName=entry.getKey().toString();
    String expression=entry.getValue().toString();
    Provider<?> provider=getProviderForExpression(injector,expression);
    if (provider != null) {
      context.bind(jndiName,provider);
    }
  }
}
