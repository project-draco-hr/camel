{
  if (LOG.isDebugEnabled()) {
    Object in=object;
    if (in instanceof byte[]) {
      in=endpoint.getCamelContext().getTypeConverter().convertTo(String.class,in);
    }
    LOG.debug("Received body: " + in);
  }
  Exchange exchange=endpoint.createExchange(session,object);
  if (endpoint.getConfiguration().getCharsetName() != null) {
    exchange.setProperty(Exchange.CHARSET_NAME,endpoint.getConfiguration().getCharsetName());
  }
  getProcessor().process(exchange);
  if (sync) {
    Object body;
    if (ExchangeHelper.isOutCapable(exchange)) {
      body=MinaPayloadHelper.getOut(endpoint,exchange);
    }
 else {
      body=MinaPayloadHelper.getIn(endpoint,exchange);
    }
    boolean failed=exchange.isFailed();
    if (failed && !endpoint.getConfiguration().isTransferExchange()) {
      if (exchange.getException() != null) {
        body=exchange.getException();
      }
 else {
        body=exchange.getOut().getBody();
      }
    }
    if (body == null) {
      LOG.warn("Cannot write body since its null, closing session: " + exchange);
      session.close();
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Writing body: " + body);
      }
      MinaHelper.writeBody(session,body,exchange);
    }
  }
  Boolean close;
  if (ExchangeHelper.isOutCapable(exchange)) {
    close=exchange.getOut().getHeader(HEADER_CLOSE_SESSION_WHEN_COMPLETE,Boolean.class);
  }
 else {
    close=exchange.getIn().getHeader(HEADER_CLOSE_SESSION_WHEN_COMPLETE,Boolean.class);
  }
  if (close != null && close) {
    LOG.debug("Closing session when complete");
    session.close();
  }
}
