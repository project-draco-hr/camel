{
  final String uri=String.format("mina2:tcp://localhost:%1$s?textline=true&minaLogger=true&sync=false",getPort());
  context.addRoutes(new RouteBuilder(){
    public void configure() throws Exception {
      from(uri).to("mock:result");
    }
  }
);
  MockEndpoint mock=this.getMockEndpoint("mock:result");
  mock.expectedBodiesReceived("Hello World");
  Endpoint endpoint=context.getEndpoint(uri);
  Exchange exchange=endpoint.createExchange();
  Producer producer=endpoint.createProducer();
  producer.start();
  exchange.getIn().setBody("Hello World");
  producer.process(exchange);
  Field field=producer.getClass().getDeclaredField("session");
  field.setAccessible(true);
  IoSession session=(IoSession)field.get(producer);
  assertTrue("There should be a logger filter",session.getFilterChain().contains("logger"));
  assertMockEndpointsSatisfied();
  producer.stop();
}
