{
  String dnToSearch="some dn to bind";
  initializeTest(dnToSearch);
  String filter="some ldap filter";
  body.put(SpringLdapProducer.FILTER,filter);
  ArgumentCaptor<String> dnCaptor=ArgumentCaptor.forClass(String.class);
  ArgumentCaptor<String> filterCaptor=ArgumentCaptor.forClass(String.class);
  ArgumentCaptor<Integer> scopeCaptor=ArgumentCaptor.forClass(Integer.class);
  ArgumentCaptor<AttributesMapper> mapperCaptor=ArgumentCaptor.forClass(AttributesMapper.class);
  List<String> searchResult=Collections.singletonList("some search result");
  when(ldapTemplate.search(any(String.class),any(String.class),any(Integer.class),any(AttributesMapper.class))).thenReturn(searchResult);
  MockEndpoint resultEndpoint=(MockEndpoint)context.getEndpoint("mock:result");
  resultEndpoint.expectedBodiesReceived(Collections.singletonList(searchResult));
  producer.sendBody("direct:start",body);
  Mockito.verify(ldapTemplate).search(dnCaptor.capture(),filterCaptor.capture(),scopeCaptor.capture(),mapperCaptor.capture());
  assertEquals(dnToSearch,dnCaptor.getValue());
  assertEquals((Integer)SearchControls.ONELEVEL_SCOPE,scopeCaptor.getValue());
  assertEquals(filter,filterCaptor.getValue());
  resultEndpoint.assertIsSatisfied();
}
