{
  Endpoint endpoint=null;
  String[] uriParts=null;
  String endpointType=null;
  if (remaining != null) {
    uriParts=remaining.split(JcloudsConstants.DELIMETER);
    if (uriParts != null && uriParts.length > 0) {
      endpointType=uriParts[0];
    }
  }
  if (JcloudsConstants.BLOBSTORE.endsWith(endpointType)) {
    if (uriParts.length >= 2) {
      String provider=uriParts[1];
      BlobStore blobStore=getBlobStore(provider);
      endpoint=new JcloudsBlobStoreEndpoint(uri,this,blobStore);
    }
 else {
      throw new Exception("Invalid Endpoint URI. It should contains a valid provider name");
    }
  }
 else   if (JcloudsConstants.COMPUTE.endsWith(endpointType)) {
    if (uriParts.length >= 2) {
      String provider=uriParts[1];
      ComputeService computeService=getComputeService(provider);
      endpoint=new JcloudsComputeEndpoint(uri,this,computeService);
    }
 else {
      throw new Exception("Invalid Endpoint URI. It should contains a valid provider name");
    }
  }
  setProperties(endpoint,parameters);
  return endpoint;
}
