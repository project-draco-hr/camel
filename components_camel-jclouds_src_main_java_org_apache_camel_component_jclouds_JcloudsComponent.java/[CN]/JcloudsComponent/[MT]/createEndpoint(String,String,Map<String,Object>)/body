{
  String[] uriParts=remaining.split(JcloudsConstants.DELIMETER);
  if (uriParts.length != 2) {
    throw new IllegalArgumentException("Invalid Endpoint URI: " + uri + ". It should contains a valid command and providerId");
  }
  String endpointType=uriParts[0];
  String providerId=uriParts[1];
  JcloudsCommand command=JcloudsCommand.valueOf(endpointType);
  JcloudsConfiguration configuration=new JcloudsConfiguration();
  configuration.setCommand(command);
  configuration.setProviderId(providerId);
  setProperties(configuration,parameters);
  JcloudsEndpoint endpoint;
  if (JcloudsCommand.blobstore == command) {
    endpoint=new JcloudsBlobStoreEndpoint(uri,this,getBlobStore(providerId));
  }
 else {
    endpoint=new JcloudsComputeEndpoint(uri,this,getComputeService(providerId));
  }
  endpoint.setConfiguration(configuration);
  setProperties(endpoint,parameters);
  return endpoint;
}
