{
  InputStream inStream=getClass().getResourceAsStream("testMessage1.xml");
  DOMSource inDOM=context.getTypeConverter().convertTo(DOMSource.class,inStream);
  inStream=getClass().getResourceAsStream("testMessage1.xml");
  SAXSource inSAX=context.getTypeConverter().convertTo(SAXSource.class,inStream);
  inStream=getClass().getResourceAsStream("testMessage1.xml");
  Document inDocument=context.getTypeConverter().convertTo(Document.class,inStream);
  Object expectedBody=template.requestBody("direct:marshal",inDOM);
  MockEndpoint mockJSON=getMockEndpoint("mock:json");
  mockJSON.reset();
  mockJSON.expectedMessageCount(3);
  mockJSON.allMessages().body().isInstanceOf(byte[].class);
  mockJSON.expectedBodiesReceived(Arrays.asList(expectedBody,expectedBody,expectedBody));
  Object json=template.requestBody("direct:marshal",inDOM);
  String jsonString=context.getTypeConverter().convertTo(String.class,json);
  JSONObject obj=(JSONObject)JSONSerializer.toJSON(jsonString);
  assertEquals("JSONObject doesn't contain 7 keys",7,obj.entrySet().size());
  template.requestBody("direct:marshal",inSAX);
  template.requestBody("direct:marshal",inDocument);
  mockJSON.assertIsSatisfied();
}
