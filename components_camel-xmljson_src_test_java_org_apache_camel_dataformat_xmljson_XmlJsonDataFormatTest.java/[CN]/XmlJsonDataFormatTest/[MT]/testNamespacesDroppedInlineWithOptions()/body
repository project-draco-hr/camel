{
  InputStream inStream=getClass().getClassLoader().getResourceAsStream("org/apache/camel/dataformat/xmljson/testMessage2-namespaces.xml");
  String in=context.getTypeConverter().convertTo(String.class,inStream);
  MockEndpoint mockJSON=getMockEndpoint("mock:jsonInlineOptions");
  mockJSON.expectedMessageCount(1);
  mockJSON.message(0).body().isInstanceOf(byte[].class);
  Object json=template.requestBody("direct:marshalInlineOptions",in);
  String jsonString=context.getTypeConverter().convertTo(String.class,json);
  JSONObject obj=(JSONObject)JSONSerializer.toJSON(jsonString);
  assertEquals("JSON must contain 1 top-level element",1,obj.entrySet().size());
  assertTrue("Top-level element must be named root",obj.has("root"));
  for (  Object key : obj.getJSONObject("root").keySet()) {
    assertFalse("A key contains a colon",((String)key).contains(":"));
  }
  mockJSON.assertIsSatisfied();
}
