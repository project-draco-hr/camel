{
  if (fromType != null) {
    TypeConverter converter=getTypeConverter(toType,fromType);
    if (converter != null) {
      return converter;
    }
    for (    Class type : fromType.getInterfaces()) {
      converter=getTypeConverter(toType,type);
      if (converter != null) {
        return converter;
      }
    }
    Class fromSuperClass=fromType.getSuperclass();
    if (fromSuperClass != null && !fromSuperClass.equals(Object.class)) {
      converter=doLookup(toType,fromSuperClass,true);
      if (converter != null) {
        return converter;
      }
    }
  }
  if (!isSuper) {
    if (fromType != null && !fromType.equals(Object.class)) {
      Set<Map.Entry<TypeMapping,TypeConverter>> entries=typeMappings.entrySet();
      for (      Map.Entry<TypeMapping,TypeConverter> entry : entries) {
        TypeMapping key=entry.getKey();
        Class aToType=key.getToType();
        if (toType.isAssignableFrom(aToType)) {
          Class aFromType=key.getFromType();
          if (!aFromType.equals(Object.class) && aFromType.isAssignableFrom(fromType)) {
            return entry.getValue();
          }
        }
      }
      TypeConverter converter=getTypeConverter(toType,Object.class);
      if (converter != null) {
        return converter;
      }
    }
  }
  return null;
}
