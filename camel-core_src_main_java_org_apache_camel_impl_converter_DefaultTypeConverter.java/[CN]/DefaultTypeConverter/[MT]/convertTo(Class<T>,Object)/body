{
  if (toType.isInstance(value)) {
    return toType.cast(value);
  }
  checkLoaded();
  TypeConverter converter=getOrFindTypeConverter(toType,value);
  if (converter != null) {
    return converter.convertTo(toType,value);
  }
  for (  TypeConverter fallback : fallbackConverters) {
    T rc=fallback.convertTo(toType,value);
    if (rc != null) {
      return rc;
    }
  }
  if (boolean.class.isAssignableFrom(toType)) {
    return (T)Boolean.FALSE;
  }
  if (toType.isPrimitive()) {
    Class primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(toType);
    if (primitiveType != toType) {
      return (T)convertTo(primitiveType,value);
    }
  }
  return null;
}
