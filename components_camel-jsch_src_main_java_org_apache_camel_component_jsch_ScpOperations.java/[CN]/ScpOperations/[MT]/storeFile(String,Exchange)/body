{
  ObjectHelper.notNull(session,"session");
  ScpConfiguration cfg=endpoint.getConfiguration();
  int timeout=cfg.getConnectTimeout();
  if (LOG.isTraceEnabled()) {
    LOG.trace("Opening channel to {} with {} timeout...",cfg.remoteServerInformation(),timeout > 0 ? (Integer.toString(timeout) + " ms") : "no");
  }
  String file=getRemoteFile(name,cfg);
  InputStream is=null;
  if (exchange.getIn().getBody() == null) {
    if (endpoint.isAllowNullBody()) {
      LOG.trace("Writing empty file.");
      is=new ByteArrayInputStream(new byte[]{});
    }
 else {
      throw new GenericFileOperationFailedException("Cannot write null body to file: " + name);
    }
  }
  try {
    channel=(ChannelExec)session.openChannel("exec");
    channel.setCommand(getScpCommand(cfg,file));
    channel.connect(timeout);
    LOG.trace("Channel connected to {}",cfg.remoteServerInformation());
    try {
      if (is == null) {
        is=exchange.getIn().getMandatoryBody(InputStream.class);
      }
      write(channel,file,exchange.getIn().getMandatoryBody(InputStream.class),cfg);
    }
 catch (    InvalidPayloadException e) {
      throw new GenericFileOperationFailedException("Cannot store file: " + name,e);
    }
catch (    IOException e) {
      throw new GenericFileOperationFailedException("Failed to write file " + file,e);
    }
 finally {
      IOHelper.close(is);
    }
  }
 catch (  JSchException e) {
    throw new GenericFileOperationFailedException("Failed to write file " + file,e);
  }
 finally {
    if (channel != null) {
      LOG.trace("Disconnecting 'exec' scp channel");
      channel.disconnect();
      channel=null;
      LOG.trace("Channel disconnected from {}",cfg.remoteServerInformation());
    }
  }
  return true;
}
