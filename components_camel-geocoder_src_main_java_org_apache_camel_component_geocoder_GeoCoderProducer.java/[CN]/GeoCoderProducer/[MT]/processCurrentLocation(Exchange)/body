{
  LOG.debug("Geocode for current address");
  String json=exchange.getContext().getTypeConverter().mandatoryConvertTo(String.class,new URL("http://freegeoip.net/json/"));
  if (isEmpty(json)) {
    throw new IllegalStateException("Got the unexpected value '" + json + "' for the geolocation");
  }
  LOG.debug("Geocode response {}",json);
  exchange.getIn().setHeader(GeoCoderConstants.STATUS,GeocoderStatus.OK);
  ObjectMapper mapper=new ObjectMapper();
  JsonNode node=mapper.readValue(json,JsonNode.class);
  JsonNode latitudeNode=notNull(node.get("latitude"),"latitude");
  JsonNode longitudeNode=notNull(node.get("longitude"),"longitude");
  String resLatlng=latitudeNode.asText() + "," + longitudeNode.asText();
  exchange.getIn().setHeader(GeoCoderConstants.LATLNG,resLatlng);
  JsonNode countryCode=node.get("country_code");
  JsonNode countryName=node.get("country_name");
  if (countryCode != null) {
    exchange.getIn().setHeader(GeoCoderConstants.COUNTRY_SHORT,countryCode.asText());
  }
  if (countryName != null) {
    exchange.getIn().setHeader(GeoCoderConstants.COUNTRY_LONG,countryName.asText());
  }
  JsonNode regionCode=node.get("region_code");
  JsonNode regionName=node.get("region_name");
  if (regionCode != null) {
    exchange.getIn().setHeader(GeoCoderConstants.REGION_CODE,regionCode.asText());
  }
  if (regionName != null) {
    exchange.getIn().setHeader(GeoCoderConstants.REGION_NAME,regionName.asText());
  }
  JsonNode city=node.get("city");
  if (city != null) {
    exchange.getIn().setHeader(GeoCoderConstants.CITY,city.asText());
  }
  if (!endpoint.isHeadersOnly()) {
    exchange.getIn().setBody(json);
  }
}
