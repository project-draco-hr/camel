{
  super.doStart();
  if (LOG.isInfoEnabled()) {
    LOG.info("Starting trap consumer on {}",this.endpoint.getAddress());
  }
  this.listenGenericAddress=GenericAddress.parse(this.endpoint.getAddress());
  if ("tcp".equals(endpoint.getProtocol())) {
    this.transport=new DefaultTcpTransportMapping((TcpAddress)this.listenGenericAddress);
  }
 else   if ("udp".equals(endpoint.getProtocol())) {
    this.transport=new DefaultUdpTransportMapping((UdpAddress)this.listenGenericAddress);
  }
 else {
    throw new IllegalArgumentException("Unknown protocol: " + endpoint.getProtocol());
  }
  this.snmp=new Snmp(transport);
  this.snmp.addCommandResponder(this);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Starting trap consumer on {} using {} protocol",endpoint.getAddress(),endpoint.getProtocol());
  }
  this.transport.listen();
  if (LOG.isInfoEnabled()) {
    LOG.info("Started trap consumer on {} using {} protocol",endpoint.getAddress(),endpoint.getProtocol());
  }
}
