{
  String body=exchange.getIn().getBody(String.class);
  byte providedAlphabet=getProvidedAlphabet(exchange);
  Alphabet determinedAlphabet=determineAlphabet(exchange);
  Charset charset=determineCharset(providedAlphabet,determinedAlphabet.value());
  byte[] message=null;
  if (body != null) {
    message=body.getBytes(charset);
  }
  ReplaceSm replaceSm=createReplaceSmTempate(exchange);
  replaceSm.setShortMessage(message);
  log.debug("Sending replacement command for a short message for exchange id '{}' and message id '{}'",exchange.getExchangeId(),replaceSm.getMessageId());
  try {
    session.replaceShortMessage(replaceSm.getMessageId(),TypeOfNumber.valueOf(replaceSm.getSourceAddrTon()),NumberingPlanIndicator.valueOf(replaceSm.getSourceAddrNpi()),replaceSm.getSourceAddr(),replaceSm.getScheduleDeliveryTime(),replaceSm.getValidityPeriod(),new RegisteredDelivery(replaceSm.getRegisteredDelivery()),replaceSm.getSmDefaultMsgId(),replaceSm.getShortMessage());
  }
 catch (  Exception e) {
    throw new SmppException(e);
  }
  log.debug("Sent replacement command for a short message for exchange id '{}' and message id '{}'",exchange.getExchangeId(),replaceSm.getMessageId());
  Message rspMsg=getResponseMessage(exchange);
  rspMsg.setHeader(SmppConstants.ID,replaceSm.getMessageId());
}
