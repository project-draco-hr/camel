{
  UndertowConsumer consumer=resolver.resolve(httpExchange,consumers);
  if (consumer == null) {
    LOG.debug("Unable to resolve consumer matching path {}",httpExchange.getRequestPath());
    new NotFoundHandler().handleRequest(httpExchange);
    return;
  }
  HttpString requestMethod=httpExchange.getRequestMethod();
  if (Methods.OPTIONS.equals(requestMethod) && !consumer.getEndpoint().isOptionsEnabled()) {
    String allowedMethods;
    if (consumer.getEndpoint().getHttpMethodRestrict() != null) {
      allowedMethods="OPTIONS," + consumer.getEndpoint().getHttpMethodRestrict();
    }
 else {
      allowedMethods="GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH";
    }
    httpExchange.setStatusCode(StatusCodes.OK);
    httpExchange.getResponseHeaders().put(ExchangeHeaders.CONTENT_TYPE,MimeMappings.DEFAULT_MIME_MAPPINGS.get("txt"));
    httpExchange.getResponseHeaders().put(ExchangeHeaders.CONTENT_LENGTH,0);
    httpExchange.getResponseHeaders().put(Headers.ALLOW,allowedMethods);
    httpExchange.getResponseSender().close();
    return;
  }
  if (consumer.getEndpoint().getHttpMethodRestrict() != null && !consumer.getEndpoint().getHttpMethodRestrict().contains(requestMethod.toString())) {
    httpExchange.setStatusCode(StatusCodes.METHOD_NOT_ALLOWED);
    httpExchange.getResponseHeaders().put(ExchangeHeaders.CONTENT_TYPE,MimeMappings.DEFAULT_MIME_MAPPINGS.get("txt"));
    httpExchange.getResponseHeaders().put(ExchangeHeaders.CONTENT_LENGTH,0);
    httpExchange.getResponseSender().close();
    return;
  }
  if (httpExchange.isInIoThread()) {
    httpExchange.dispatch(this);
    return;
  }
  Exchange camelExchange=consumer.getEndpoint().createExchange(httpExchange);
  consumer.createUoW(camelExchange);
  try {
    consumer.getProcessor().process(camelExchange);
  }
 catch (  Exception e) {
    consumer.getExceptionHandler().handleException(e);
  }
 finally {
    consumer.doneUoW(camelExchange);
  }
  Object body=getResponseBody(httpExchange,camelExchange,consumer);
  TypeConverter tc=consumer.getEndpoint().getCamelContext().getTypeConverter();
  if (body == null) {
    LOG.trace("No payload to send as reply for exchange: " + camelExchange);
    httpExchange.getResponseHeaders().put(ExchangeHeaders.CONTENT_TYPE,MimeMappings.DEFAULT_MIME_MAPPINGS.get("txt"));
    httpExchange.getResponseSender().send("No response available");
  }
 else {
    ByteBuffer bodyAsByteBuffer=tc.convertTo(ByteBuffer.class,body);
    httpExchange.getResponseSender().send(bodyAsByteBuffer);
  }
  httpExchange.getResponseSender().close();
}
