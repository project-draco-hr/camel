{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      final IdempotentRepository repo=MemoryIdempotentRepository.memoryIdempotentRepository(200);
      from("direct:start").idempotentConsumer(header("messageId"),repo).eager(false).process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          String id=exchange.getIn().getHeader("messageId",String.class);
          assertFalse("Should not eager add to repo",repo.contains(id));
        }
      }
).to("mock:result");
    }
  }
);
  context.start();
  resultEndpoint.expectedBodiesReceived("one","two","three");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("3","three");
  assertMockEndpointsSatisfied();
}
