{
  final EndpointInject inject=member.getAnnotation(EndpointInject.class);
  Objects.nonNull(inject,"@EndpointInject is not present!");
  final Class<?> type;
  final String injectionPointName;
  final String endpointRef=inject.name();
  final String uri=inject.uri();
  if (member instanceof Field) {
    Field field=(Field)member;
    type=field.getType();
    injectionPointName=field.getName();
  }
 else   if (member instanceof Method) {
    Method method=(Method)member;
    Class<?>[] parameterTypes=method.getParameterTypes();
    if (parameterTypes.length == 1) {
      type=parameterTypes[0];
      injectionPointName=method.getName();
    }
 else {
      throw new UnsupportedOperationException("Only a single method parameter value supported for @EndpointInject on " + method);
    }
  }
 else {
    throw new UnsupportedOperationException("Annotated element " + member + " not supported");
  }
  return new Provider(){
    public Object get(){
      return getInjectionValue(type,uri,endpointRef,injectionPointName);
    }
  }
;
}
