{
  if (!isStarted()) {
    throw new IllegalStateException("The endpoint is not active: " + getEndpoint().getEndpointUri());
  }
  BeanInvocation invocation=new BeanInvocation(method,args);
  Exchange exchange=getEndpoint().createExchange();
  exchange.getIn().setBody(invocation);
  try {
    log.debug("Invoking {} with args {}",method,args);
    getProcessor().process(exchange);
  }
 catch (  Exception e) {
    exchange.setException(e);
  }
  Throwable fault=exchange.getException();
  if (fault != null) {
    Object match=null;
    for (    Class<?> type : method.getExceptionTypes()) {
      Object found=exchange.getException(type);
      if (found != null) {
        match=found;
        break;
      }
    }
    if (match != null && match instanceof Throwable) {
      throw (Throwable)match;
    }
 else {
      throw new RemoteException("Error invoking " + method,fault);
    }
  }
  return exchange.getOut().getBody();
}
