{
  long myLastId=lastId;
  String keywords=exchange.getIn().getHeader(TwitterConstants.TWITTER_KEYWORDS,String.class);
  if (keywords == null) {
    keywords=te.getProperties().getKeywords();
  }
  if (keywords == null) {
    throw new CamelExchangeException("No keywords to use for query",exchange);
  }
  Query query=new Query(keywords);
  if (te.getProperties().isFilterOld() && myLastId != 0) {
    query.setSinceId(myLastId);
  }
  Long sinceId=exchange.getIn().getHeader(TwitterConstants.TWITTER_SINCEID,Long.class);
  if (sinceId == null) {
    sinceId=te.getProperties().getSinceId();
  }
  if (ObjectHelper.isNotEmpty(sinceId)) {
    query.setSinceId(sinceId);
  }
  Long maxId=exchange.getIn().getHeader(TwitterConstants.TWITTER_MAXID,Long.class);
  if (ObjectHelper.isNotEmpty(maxId)) {
    query.setMaxId(maxId);
  }
  String lang=exchange.getIn().getHeader(TwitterConstants.TWITTER_SEARCH_LANGUAGE,String.class);
  if (lang == null) {
    lang=te.getProperties().getLang();
  }
  if (ObjectHelper.isNotEmpty(lang)) {
    query.setLang(lang);
  }
  Integer count=exchange.getIn().getHeader(TwitterConstants.TWITTER_COUNT,Integer.class);
  if (count == null) {
    count=te.getProperties().getCount();
  }
  if (ObjectHelper.isNotEmpty(count)) {
    query.setCount(count);
  }
  Integer numberOfPages=exchange.getIn().getHeader(TwitterConstants.TWITTER_NUMBER_OF_PAGES,Integer.class);
  if (numberOfPages == null) {
    numberOfPages=te.getProperties().getNumberOfPages();
  }
  Twitter twitter=te.getProperties().getTwitter();
  log.debug("Searching twitter with keywords: {}",keywords);
  QueryResult results=twitter.search(query);
  List<Status> list=results.getTweets();
  for (int i=1; i < numberOfPages; i++) {
    if (!results.hasNext()) {
      break;
    }
    log.debug("Fetching page");
    results=twitter.search(results.nextQuery());
    list.addAll(results.getTweets());
  }
  if (te.getProperties().isFilterOld()) {
    for (    Status t : list) {
      long newId=t.getId();
      if (newId > myLastId) {
        myLastId=newId;
      }
    }
  }
  exchange.getIn().setBody(list);
  if (myLastId > lastId) {
    lastId=myLastId;
  }
}
