{
  String summary=null;
  URI self=null;
  BasicProject project=null;
  BasicIssueType issueType=null;
  BasicStatus status=null;
  String description=null;
  BasicPriority priority=null;
  BasicResolution resolution=null;
  Collection<Attachment> attachments=null;
  BasicUser reporter=null;
  BasicUser assignee=null;
  DateTime creationDate=null;
  DateTime updateDate=null;
  DateTime dueDate=null;
  Collection<Version> affectedVersions=null;
  Collection<Version> fixVersions=null;
  Collection<BasicComponent> components=null;
  TimeTracking timeTracking=null;
  Collection<Field> fields=null;
  URI transitionsUri=null;
  Collection<IssueLink> issueLinks=null;
  BasicVotes votes=null;
  Collection<Worklog> worklogs=null;
  BasicWatchers watchers=null;
  Iterable<String> expandos=null;
  Collection<Subtask> subtasks=null;
  Collection<ChangelogGroup> changelog=null;
  Set<String> labels=null;
  JSONObject rawObject=null;
  BasicIssue basicIssue=mockSearchRestClient.getBasicIssue(issueKey);
  Collection<Comment> comments=mockSearchRestClient.getCommentsForIssue(basicIssue.getId());
  Issue issue=new Issue(summary,self,basicIssue.getKey(),basicIssue.getId(),project,issueType,status,description,priority,resolution,attachments,reporter,assignee,creationDate,updateDate,dueDate,affectedVersions,fixVersions,components,timeTracking,fields,comments,transitionsUri,issueLinks,votes,worklogs,watchers,expandos,subtasks,changelog,labels,rawObject);
  return issue;
}
