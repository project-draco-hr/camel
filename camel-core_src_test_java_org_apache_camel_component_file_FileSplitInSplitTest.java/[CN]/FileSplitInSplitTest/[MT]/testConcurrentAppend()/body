{
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < size; i++) {
    sb.append("Block1 Line " + i + LS);
  }
  sb.append(comma);
  for (int i=10; i < size + 10; i++) {
    sb.append("Block2 Line " + i + LS);
  }
  template.sendBodyAndHeader("file:target/split",sb.toString(),Exchange.FILE_NAME,"input.txt");
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  context.startRoute("foo");
  assertMockEndpointsSatisfied();
  String txt=context.getTypeConverter().convertTo(String.class,new File("target/split/outbox/result0.txt"));
  assertNotNull(txt);
  String[] lines=txt.split(LS);
  assertEquals("Should be " + (size + 1) + " lines",size + 1,lines.length);
  txt=context.getTypeConverter().convertTo(String.class,new File("target/split/outbox/result1.txt"));
  assertNotNull(txt);
  lines=txt.split(LS);
  assertEquals("Should be " + (size + 1) + " lines",size + 1,lines.length);
}
