{
  if (isPlatform("aix")) {
    return;
  }
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=routes,*"),null);
  assertEquals(1,set.size());
  ObjectName on=set.iterator().next();
  Long completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
  assertEquals(0,completed.longValue());
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMessageCount(5);
  template.sendBody("direct:start","A");
  template.sendBody("direct:start","B");
  template.sendBody("direct:start","C");
  template.sendBody("direct:start","D");
  template.sendBody("direct:start","E");
  assertMockEndpointsSatisfied();
  completed=(Long)mbeanServer.getAttribute(on,"ExchangesCompleted");
  assertEquals(5,completed.longValue());
  String first=(String)mbeanServer.getAttribute(on,"FirstExchangeCompletedExchangeId");
  assertEquals(result.getReceivedExchanges().get(0).getExchangeId(),first);
  String firstFail=(String)mbeanServer.getAttribute(on,"FirstExchangeFailureExchangeId");
  assertNull(firstFail);
  String last=(String)mbeanServer.getAttribute(on,"LastExchangeCompletedExchangeId");
  assertEquals(result.getReceivedExchanges().get(4).getExchangeId(),last);
  String lastFail=(String)mbeanServer.getAttribute(on,"LastExchangeFailureExchangeId");
  assertNull(lastFail);
  ObjectName foo=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=processors,name=\"foo\"");
  completed=(Long)mbeanServer.getAttribute(foo,"ExchangesCompleted");
  assertEquals(5,completed.longValue());
  ObjectName mock=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=processors,name=\"mock\"");
  completed=(Long)mbeanServer.getAttribute(mock,"ExchangesCompleted");
  assertEquals(5,completed.longValue());
}
