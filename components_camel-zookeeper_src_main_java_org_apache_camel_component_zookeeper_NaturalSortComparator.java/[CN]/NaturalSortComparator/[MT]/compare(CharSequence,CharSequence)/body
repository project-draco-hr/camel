{
  if (first == null && second == null) {
    return 0;
  }
  if (first != null && second == null) {
    return 1;
  }
  if (first == null && second != null) {
    return -1;
  }
  int compare=0;
  int fx=0;
  int sx=0;
  while (fx < first.length() && sx < second.length() && compare == 0) {
    if (isDigit(first.charAt(fx)) && isDigit(second.charAt(sx))) {
      int flen=getNumSequenceLength(first,fx);
      int slen=getNumSequenceLength(second,sx);
      if (flen == slen) {
        for (int x=0; x < flen && compare == 0; x++) {
          compare=first.charAt(fx++) - second.charAt(sx++);
        }
      }
 else {
        compare=flen - slen;
      }
    }
 else {
      compare=first.charAt(fx) - second.charAt(sx);
    }
    fx++;
    sx++;
  }
  if (compare == 0) {
    compare=first.length() - second.length();
  }
  return order.direction * compare;
}
