{
  String url=HttpHelper.createURL(exchange,getEndpoint());
  URI uri=HttpHelper.createURI(exchange,url,getEndpoint());
  url=uri.toASCIIString();
  String rewriteUrl=HttpHelper.urlRewrite(exchange,url,getEndpoint(),this);
  if (rewriteUrl != null) {
    url=rewriteUrl;
    uri=new URI(url);
  }
  HttpEntity requestEntity=createRequestEntity(exchange);
  HttpMethods methodToUse=HttpMethodHelper.createMethod(exchange,getEndpoint(),requestEntity != null);
  HttpRequestBase method=methodToUse.createMethod(url);
  LOG.trace("Using URL: {} with method: {}",url,method);
  if (methodToUse.isEntityEnclosing()) {
    ((HttpEntityEnclosingRequestBase)method).setEntity(requestEntity);
    if (requestEntity != null && requestEntity.getContentType() == null) {
      LOG.debug("No Content-Type provided for URL: {} with exchange: {}",url,exchange);
    }
  }
  if (method.getURI().getScheme() == null || method.getURI().getHost() == null) {
    throw new IllegalArgumentException("Invalid uri: " + uri + ". If you are forwarding/bridging http endpoints, then enable the bridgeEndpoint option on the endpoint: "+ getEndpoint());
  }
  return method;
}
