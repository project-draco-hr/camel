{
  final InfinispanLocalAggregationRepository repoOne=new InfinispanLocalAggregationRepository("pippo");
  final int completionSize=4;
  final String correlator="CORRELATOR";
  RouteBuilder rbOne=new RouteBuilder(){
    @Override public void configure() throws Exception {
      from(DIRECT_ONE).routeId("AggregatingRouteOne").aggregate(header(correlator)).aggregationRepository(repoOne).aggregationStrategy(new SumOfIntsAggregationStrategy()).completionSize(completionSize).to(MOCK_GOTCHA);
    }
  }
;
  context().addRoutes(rbOne);
  context().start();
  mock.expectedMessageCount(2);
  mock.expectedBodiesReceived(1 + 3 + 4+ 5,6 + 7 + 20+ 21);
  produceOne.sendBodyAndHeader(1,correlator,correlator);
  produceOne.sendBodyAndHeader(3,correlator,correlator);
  produceOne.sendBodyAndHeader(4,correlator,correlator);
  produceOne.sendBodyAndHeader(5,correlator,correlator);
  produceOne.sendBodyAndHeader(6,correlator,correlator);
  produceOne.sendBodyAndHeader(7,correlator,correlator);
  produceOne.sendBodyAndHeader(20,correlator,correlator);
  produceOne.sendBodyAndHeader(21,correlator,correlator);
  mock.assertIsSatisfied();
}
