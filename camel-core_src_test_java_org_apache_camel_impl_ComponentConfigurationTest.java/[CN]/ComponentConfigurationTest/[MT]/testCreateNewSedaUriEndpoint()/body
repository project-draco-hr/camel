{
  Component component=context.getComponent("seda");
  ComponentConfiguration configuration=component.createComponentConfiguration();
  assertNotNull("Should have created a ComponentConfiguration for component " + component,configuration);
  configuration.setBaseUri("foo");
  configuration.setParameter("concurrentConsumers",5);
  configuration.setParameter("size",1000);
  try {
    configuration.setParameter("doesNotExist",1000);
    fail("Should have got InvalidPropertyException thrown!");
  }
 catch (  InvalidPropertyException e) {
    System.out.println("Got expected exception: " + e);
  }
  SedaEndpoint endpoint=TestSupport.assertIsInstanceOf(SedaEndpoint.class,configuration.createEndpoint());
  assertEquals("concurrentConsumers",5,endpoint.getConcurrentConsumers());
  assertEquals("size",1000,endpoint.getSize());
  assertEquals("endpoint uri","foo?concurrentConsumers=5&size=1000",endpoint.getEndpointUri());
  configuration.setEndpointParameter(endpoint,"concurrentConsumers",6);
  assertEquals("concurrentConsumers",6,endpoint.getConcurrentConsumers());
  try {
    configuration.setEndpointParameter(endpoint,"doesNotExist",1000);
    fail("Should have got InvalidPropertyException thrown!");
  }
 catch (  InvalidPropertyException e) {
    System.out.println("Got expected exception: " + e);
  }
}
