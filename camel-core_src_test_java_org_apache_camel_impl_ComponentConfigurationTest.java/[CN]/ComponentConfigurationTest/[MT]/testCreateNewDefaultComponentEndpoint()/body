{
  Component component=context.getComponent("cheese");
  ComponentConfiguration configuration=component.createComponentConfiguration();
  assertNotNull("Should have created a ComponentConfiguration for component " + component,configuration);
  configuration.setBaseUri("something");
  configuration.setParameter("foo","xyz");
  configuration.setParameter("bar",5);
  NonUriEndpoint endpoint=TestSupport.assertIsInstanceOf(NonUriEndpoint.class,configuration.createEndpoint());
  assertEquals("foo","xyz",endpoint.getFoo());
  assertEquals("bar",5,endpoint.getBar());
  LOG.info("Created endpoint " + endpoint + " on URI "+ endpoint.getEndpointUri());
  configuration.setEndpointParameter(endpoint,"bar",6);
  assertEquals("bar",6,endpoint.getBar());
  try {
    configuration.setEndpointParameter(endpoint,"doesNotExist",1000);
    fail("Should have got InvalidPropertyException thrown!");
  }
 catch (  InvalidPropertyException e) {
    LOG.info("Got expected exception: " + e);
  }
  ComponentConfiguration badConfiguration=component.createComponentConfiguration();
  badConfiguration.setBaseUri(configuration.getBaseUri());
  badConfiguration.setParameters(configuration.getParameters());
  badConfiguration.setParameter("doesNotExist",1000);
  try {
    badConfiguration.createEndpoint();
    fail("Should have got ResolveEndpointFailedException thrown!");
  }
 catch (  ResolveEndpointFailedException e) {
    LOG.info("Got expected exception: " + e);
  }
}
