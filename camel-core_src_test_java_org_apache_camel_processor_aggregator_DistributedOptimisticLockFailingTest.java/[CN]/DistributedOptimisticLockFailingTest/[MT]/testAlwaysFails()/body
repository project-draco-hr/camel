{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(0);
  MockEndpoint mock2=getMockEndpoint2("mock:result");
  mock2.expectedMessageCount(0);
  try {
    template.sendBodyAndHeader("direct:fails","hello world","id",1);
    fail("Should throw CamelExecutionException");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(CamelExchangeException.class,e.getCause());
    assertIsInstanceOf(OptimisticLockingAggregationRepository.OptimisticLockingException.class,e.getCause().getCause());
  }
  try {
    template2.sendBodyAndHeader("direct:fails","hello world","id",1);
    fail("Should throw CamelExecutionException");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(CamelExchangeException.class,e.getCause());
    assertIsInstanceOf(OptimisticLockingAggregationRepository.OptimisticLockingException.class,e.getCause().getCause());
  }
  mock.assertIsSatisfied();
  mock2.assertIsSatisfied();
}
