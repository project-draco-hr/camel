{
  assertEquals(0,testCollection.count());
  db.getCollection("otherCollection").remove(new BasicDBObject());
  String body="{\"_id\": \"testInsertAutoCreateCollectionAndURIIndex\", \"a\" : \"1\", \"b\" : \"2\"}";
  Map<String,Object> headers=new HashMap<String,Object>();
  Object result=template.requestBodyAndHeaders("direct:dynamicityDisabled",body,headers);
  assertEquals("Response isn't of type WriteResult",WriteResult.class,result.getClass());
  DBCollection collection=db.getCollection("otherCollection");
  List<DBObject> indexInfos=collection.getIndexInfo();
  BasicDBObject key1=(BasicDBObject)indexInfos.get(1).get("key");
  BasicDBObject key2=(BasicDBObject)indexInfos.get(2).get("key");
  assertTrue("No index on the field b",key1.containsField("b") && "-1".equals(key1.getString("b")));
  assertTrue("No index on the field a",key2.containsField("a") && "1".equals(key2.getString("a")));
  DBObject b=collection.findOne("testInsertAutoCreateCollectionAndURIIndex");
  assertNotNull("No record with 'testInsertAutoCreateCollectionAndURIIndex' _id",b);
  b=testCollection.findOne("testInsertAutoCreateCollectionAndURIIndex");
  assertNull("There is a record with 'testInsertAutoCreateCollectionAndURIIndex' _id in the test collection",b);
  assertFalse("The otherDB database should not exist",mongo.getDatabaseNames().contains("otherDB"));
}
