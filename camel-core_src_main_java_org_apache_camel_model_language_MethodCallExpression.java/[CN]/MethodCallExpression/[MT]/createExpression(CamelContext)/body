{
  Expression answer;
  if (beanType == null && beanTypeName != null) {
    try {
      beanType=camelContext.getClassResolver().resolveMandatoryClass(beanTypeName);
    }
 catch (    ClassNotFoundException e) {
      throw ObjectHelper.wrapRuntimeCamelException(e);
    }
  }
  if (beanType != null) {
    if (ObjectHelper.hasDefaultPublicNoArgConstructor(beanType)) {
      instance=camelContext.getInjector().newInstance(beanType);
      answer=new BeanExpression(instance,getMethod());
    }
 else {
      answer=new BeanExpression(beanType,getMethod());
    }
  }
 else   if (instance != null) {
    answer=new BeanExpression(instance,getMethod());
  }
 else {
    String ref=beanName();
    BeanHolder holder=new RegistryBean(camelContext,ref);
    instance=holder.getBean();
    answer=new BeanExpression(instance,getMethod());
  }
  validateHasMethod(camelContext,instance,beanType,getMethod());
  return answer;
}
