{
  if (method == null) {
    return;
  }
  if (bean == null && type == null) {
    throw new IllegalArgumentException("Either bean or type should be provided on " + this);
  }
  if (OgnlHelper.isValidOgnlExpression(method)) {
    return;
  }
  if (OgnlHelper.isInvalidValidOgnlExpression(method)) {
    ExpressionIllegalSyntaxException cause=new ExpressionIllegalSyntaxException(method);
    throw ObjectHelper.wrapRuntimeCamelException(new MethodNotFoundException(bean != null ? bean : type,method,cause));
  }
  if (bean != null) {
    BeanInfo info=new BeanInfo(context,bean.getClass());
    if (!info.hasMethod(method)) {
      throw ObjectHelper.wrapRuntimeCamelException(new MethodNotFoundException(null,bean,method));
    }
  }
 else {
    BeanInfo info=new BeanInfo(context,type);
    if (!info.hasStaticMethod(method)) {
      throw ObjectHelper.wrapRuntimeCamelException(new MethodNotFoundException(null,type,method,true));
    }
  }
}
