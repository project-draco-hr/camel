{
  shouldIdie=true;
  final long jobId=111;
  final long priority=BeanstalkComponent.DEFAULT_PRIORITY;
  final int delay=BeanstalkComponent.DEFAULT_DELAY;
  final byte[] payload=Helper.stringToBytes(testMessage);
  final Job jobMock=mock(Job.class);
  when(jobMock.getJobId()).thenReturn(jobId);
  when(jobMock.getData()).thenReturn(payload);
  when(client.reserve(anyInt())).thenReturn(jobMock).thenReturn(null);
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMinimumMessageCount(1);
  result.assertIsNotSatisfied(1000);
  verify(client,atLeastOnce()).reserve(anyInt());
  verify(client).release(jobId,priority,delay);
}
