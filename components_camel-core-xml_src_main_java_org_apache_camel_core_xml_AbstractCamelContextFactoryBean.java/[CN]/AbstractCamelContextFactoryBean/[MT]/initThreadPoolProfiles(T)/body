{
  Set<String> defaultIds=new HashSet<String>();
  Map<String,ThreadPoolProfile> profiles=context.getRegistry().lookupByType(ThreadPoolProfile.class);
  if (profiles != null && !profiles.isEmpty()) {
    for (    Entry<String,ThreadPoolProfile> entry : profiles.entrySet()) {
      ThreadPoolProfile profile=entry.getValue();
      if (profile.isDefaultProfile()) {
        LOG.info("Using custom default ThreadPoolProfile with id: " + entry.getKey() + " and implementation: "+ profile);
        context.getExecutorServiceManager().setDefaultThreadPoolProfile(profile);
        defaultIds.add(entry.getKey());
      }
 else {
        context.getExecutorServiceManager().registerThreadPoolProfile(profile);
      }
    }
  }
  if (getThreadPoolProfiles() != null && !getThreadPoolProfiles().isEmpty()) {
    for (    ThreadPoolProfileDefinition profile : getThreadPoolProfiles()) {
      if (profile.isDefaultProfile()) {
        LOG.info("Using custom default ThreadPoolProfile with id: " + profile.getId() + " and implementation: "+ profile);
        context.getExecutorServiceManager().setDefaultThreadPoolProfile(profile.asThreadPoolProfile(context));
        defaultIds.add(profile.getId());
      }
 else {
        context.getExecutorServiceManager().registerThreadPoolProfile(profile.asThreadPoolProfile(context));
      }
    }
  }
  if (defaultIds.size() > 1) {
    throw new IllegalArgumentException("Only exactly one default ThreadPoolProfile is allowed, was " + defaultIds.size() + " ids: "+ defaultIds);
  }
}
