{
  List<File> files=new ArrayList<File>();
  boolean isDirectory=endpoint.getFile().isDirectory();
  if (isDirectory) {
    pollDirectory(endpoint.getFile(),files);
  }
 else {
    pollFile(endpoint.getFile(),files);
  }
  if (endpoint.getSorter() != null) {
    Collections.sort(files,endpoint.getSorter());
  }
  List<FileExchange> exchanges=new ArrayList<FileExchange>(files.size());
  for (  File file : files) {
    FileExchange exchange=endpoint.createExchange(file);
    endpoint.configureMessage(file,exchange.getIn());
    exchanges.add(exchange);
  }
  if (endpoint.getSortBy() != null) {
    Collections.sort(exchanges,endpoint.getSortBy());
  }
  int total=exchanges.size();
  if (total > 0 && LOG.isDebugEnabled()) {
    LOG.debug("Total " + total + " files to consume");
  }
  for (int index=0; index < total; index++) {
    FileExchange exchange=exchanges.get(index);
    exchange.getIn().setHeader(FileComponent.HEADER_FILE_BATCH_INDEX,index);
    exchange.getIn().setHeader(FileComponent.HEADER_FILE_BATCH_TOTAL,total);
    processExchange(exchange);
  }
}
