{
  log.trace("pollDirectory from fileName: {}",fileName);
  depth++;
  File directory=new File(fileName);
  if (!directory.exists() || !directory.isDirectory()) {
    log.debug("Cannot poll as directory does not exists or its not a directory: {}",directory);
    if (getEndpoint().isDirectoryMustExist()) {
      throw new GenericFileOperationFailedException("Directory does not exist: " + directory);
    }
    return true;
  }
  log.trace("Polling directory: {}",directory.getPath());
  File[] files=directory.listFiles();
  if (files == null || files.length == 0) {
    if (log.isTraceEnabled()) {
      log.trace("No files found in directory: {}",directory.getPath());
    }
    return true;
  }
 else {
    if (log.isTraceEnabled()) {
      log.trace("Found {} in directory: {}",files.length,directory.getPath());
    }
  }
  for (  File file : files) {
    if (!canPollMoreFiles(fileList)) {
      return false;
    }
    if (log.isTraceEnabled()) {
      log.trace("Found file: {} [isAbsolute: {}, isDirectory: {}, isFile: {}, isHidden: {}]",new Object[]{file,file.isAbsolute(),file.isDirectory(),file.isFile(),file.isHidden()});
    }
    GenericFile<File> gf=asGenericFile(endpointPath,file);
    if (file.isDirectory()) {
      if (endpoint.isRecursive() && isValidFile(gf,true) && depth < endpoint.getMaxDepth()) {
        String subDirectory=fileName + File.separator + file.getName();
        boolean canPollMore=pollDirectory(subDirectory,fileList,depth);
        if (!canPollMore) {
          return false;
        }
      }
    }
 else {
      if (isValidFile(gf,false) && depth >= endpoint.minDepth) {
        if (isInProgress(gf)) {
          if (log.isTraceEnabled()) {
            log.trace("Skipping as file is already in progress: {}",gf.getFileName());
          }
        }
 else {
          log.trace("Adding valid file: {}",file);
          fileList.add(gf);
        }
      }
    }
  }
  return true;
}
