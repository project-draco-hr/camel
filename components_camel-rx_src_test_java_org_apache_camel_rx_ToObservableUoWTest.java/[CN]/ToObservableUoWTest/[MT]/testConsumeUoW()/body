{
  final MockEndpoint mockEndpoint=camelContext.getEndpoint("mock:results",MockEndpoint.class);
  mockEndpoint.expectedBodiesReceivedInAnyOrder("Hello World","Bye World");
  Observable<Message> observable=reactiveCamel.toObservable("file://target/foo?move=done");
  observable.subscribe(new Action1<Message>(){
    @Override public void call(    Message message){
      String body=message.getBody(String.class);
      producerTemplate.sendBody("mock:results",body);
    }
  }
);
  producerTemplate.sendBodyAndHeader("file://target/foo","Hello World",Exchange.FILE_NAME,"hello.txt");
  producerTemplate.sendBodyAndHeader("file://target/foo","Bye World",Exchange.FILE_NAME,"bye.txt");
  mockEndpoint.expectedFileExists("target/foo/done/hello.txt");
  mockEndpoint.expectedFileExists("target/foo/done/bye.txt");
  mockEndpoint.assertIsSatisfied();
}
