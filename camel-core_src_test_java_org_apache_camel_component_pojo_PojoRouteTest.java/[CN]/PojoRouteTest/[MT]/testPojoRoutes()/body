{
  CamelContext container=new DefaultCamelContext();
  PojoComponent component=new PojoComponent();
  component.addService("bye",new SayService("Good Bye!"));
  container.addComponent("default",component);
  final AtomicInteger hitCount=new AtomicInteger();
  final InterceptorProcessor<PojoExchange> tracingInterceptor=new InterceptorProcessor<PojoExchange>(){
    @Override public void process(    PojoExchange exchange){
      super.process(exchange);
      hitCount.incrementAndGet();
    }
  }
;
  container.addRoutes(new RouteBuilder(){
    public void configure(){
      from("pojo:hello").intercept(tracingInterceptor).to("pojo:bye");
    }
  }
);
  container.start();
  PojoConsumer consumer=component.getConsumer("hello");
  ISay proxy=consumer.createProxy(ISay.class);
  String rc=proxy.say();
  assertEquals("Good Bye!",rc);
  assertEquals(1,hitCount.get());
  container.stop();
}
