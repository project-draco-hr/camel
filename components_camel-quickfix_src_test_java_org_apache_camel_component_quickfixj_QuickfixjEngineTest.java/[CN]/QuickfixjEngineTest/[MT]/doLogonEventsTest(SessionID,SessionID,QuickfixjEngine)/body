{
  final List<EventRecord> events=new ArrayList<EventRecord>();
  final CountDownLatch logonLatch=new CountDownLatch(2);
  QuickfixjEventListener logonListener=new QuickfixjEventListener(){
    @Override public synchronized void onEvent(    QuickfixjEventCategory eventCategory,    SessionID sessionID,    Message message){
      events.add(new EventRecord(eventCategory,sessionID,message));
      if (eventCategory == QuickfixjEventCategory.SessionLogon) {
        logonLatch.countDown();
      }
    }
  }
;
  quickfixjEngine.addEventListener(logonListener);
  quickfixjEngine.start();
  assertTrue("Logons not completed",logonLatch.await(5000,TimeUnit.MILLISECONDS));
  quickfixjEngine.removeEventListener(logonListener);
  assertThat(events.size(),is(8));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.SessionCreated,acceptorSessionID,null)));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.SessionCreated,initiatorSessionID,null)));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.AdminMessageSent,initiatorSessionID,new Message())));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.AdminMessageReceived,acceptorSessionID,new Message())));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.AdminMessageSent,acceptorSessionID,new Message())));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.AdminMessageReceived,initiatorSessionID,new Message())));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.SessionLogon,initiatorSessionID,null)));
  assertTrue(events.contains(new EventRecord(QuickfixjEventCategory.SessionLogon,acceptorSessionID,null)));
}
