{
  if (!enabled) {
    LOG.info("StreamCaching is not enabled");
    return;
  }
  String bufferSize=camelContext.getProperty(BUFFER_SIZE);
  String hold=camelContext.getProperty(THRESHOLD);
  String chiper=camelContext.getProperty(CIPHER_TRANSFORMATION);
  String dir=camelContext.getProperty(TEMP_DIR);
  boolean warn=false;
  if (bufferSize != null) {
    warn=true;
    this.bufferSize=camelContext.getTypeConverter().convertTo(Integer.class,bufferSize);
  }
  if (hold != null) {
    warn=true;
    this.spoolThreshold=camelContext.getTypeConverter().convertTo(Long.class,hold);
  }
  if (chiper != null) {
    warn=true;
    this.spoolChiper=chiper;
  }
  if (dir != null) {
    warn=true;
    this.spoolDirectory=camelContext.getTypeConverter().convertTo(File.class,dir);
  }
  if (warn) {
    LOG.warn("Configuring of StreamCaching using CamelContext properties is deprecated - use StreamCachingStrategy instead.");
  }
  LOG.info("StreamCaching in use with {}",this.toString());
  if (spoolDirectory == null) {
    spoolDirectory=FileUtil.createNewTempDir();
    LOG.info("Created temporary spool directory {}",spoolDirectory);
  }
 else {
    if (!spoolDirectory.exists()) {
      boolean created=spoolDirectory.mkdirs();
      if (!created) {
        LOG.warn("Cannot create spool directory {}",spoolDirectory);
      }
 else {
        LOG.info("Created spool directory {}",spoolDirectory);
      }
    }
  }
}
