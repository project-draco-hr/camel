{
  if (spoolUsedHeapMemoryThreshold > 0) {
    double used=heapUsage.getHeapMemoryUsage().getUsed();
    double committed=heapUsage.getHeapMemoryUsage().getCommitted();
    double calc=(used / committed) * 100;
    int percentage=(int)calc;
    if (LOG.isTraceEnabled()) {
      long u=heapUsage.getHeapMemoryUsage().getUsed();
      long c=heapUsage.getHeapMemoryUsage().getCommitted();
      LOG.trace("Heap memory: [used={}M ({}%), committed={}M]",new Object[]{u >> 20,percentage,c >> 20});
    }
    if (percentage > spoolUsedHeapMemoryThreshold) {
      LOG.trace("Should spool cache heap memory threshold {} > {} -> true",percentage,spoolUsedHeapMemoryThreshold);
      return true;
    }
  }
  return false;
}
