{
  ProducerCache cache=new ProducerCache(this,context,5);
  cache.setExtendedStatistics(true);
  cache.start();
  assertEquals("Size should be 0",0,cache.size());
  Endpoint e=new MyEndpoint(true,1);
  Producer p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  e=new MyEndpoint(true,1);
  p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  e=new MyEndpoint(true,2);
  p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  e=new MyEndpoint(true,2);
  p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  e=new MyEndpoint(true,2);
  p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  e=new MyEndpoint(true,3);
  p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  e=new MyEndpoint(true,4);
  p=cache.acquireProducer(e);
  cache.releaseProducer(e,p);
  assertEquals("Size should be 4",4,cache.size());
  EndpointUtilizationStatistics stats=cache.getEndpointUtilizationStatistics();
  assertEquals(4,stats.size());
  Map<String,Long> recent=stats.getStatistics();
  assertEquals(2,recent.get("my://1").longValue());
  assertEquals(3,recent.get("my://2").longValue());
  assertEquals(1,recent.get("my://3").longValue());
  assertEquals(1,recent.get("my://4").longValue());
  assertNull(recent.get("my://5"));
  cache.stop();
}
