{
  List<String> in=new ArrayList<String>();
  in.add("Karaf");
  in.add("Camel");
  in.add("Servicemix");
  MockEndpoint mock=getMockEndpoint("mock:reverseList");
  mock.expectedMessageCount(1);
  mock.message(0).body().isInstanceOf(List.class);
  mock.message(0).body().isEqualTo(in);
  Object marshalled=template.requestBody("direct:inList",in);
  String marshalledAsString=context.getTypeConverter().convertTo(String.class,marshalled);
  assertEquals("[\"Karaf\",\"Camel\",\"Servicemix\"]",marshalledAsString);
  template.sendBody("direct:backList",marshalled);
  mock.assertIsSatisfied();
}
