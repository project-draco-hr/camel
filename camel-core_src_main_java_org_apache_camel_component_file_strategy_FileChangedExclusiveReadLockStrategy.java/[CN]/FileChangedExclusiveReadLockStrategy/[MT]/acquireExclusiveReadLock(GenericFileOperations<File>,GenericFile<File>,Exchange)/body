{
  File target=new File(file.getAbsoluteFilePath());
  boolean exclusive=false;
  if (LOG.isTraceEnabled()) {
    LOG.trace("Waiting for exclusive read lock to file: " + file);
  }
  try {
    long lastModified=Long.MIN_VALUE;
    long length=Long.MIN_VALUE;
    long start=System.currentTimeMillis();
    while (!exclusive) {
      if (timeout > 0) {
        long delta=System.currentTimeMillis() - start;
        if (delta > timeout) {
          LOG.warn("Cannot acquire read lock within " + timeout + " millis. Will skip the file: "+ file);
          return false;
        }
      }
      long newLastModified=target.lastModified();
      long newLength=target.length();
      if (LOG.isTraceEnabled()) {
        LOG.trace("Previous last modified: " + lastModified + ", new last modified: "+ newLastModified);
        LOG.trace("Previous length: " + length + ", new length: "+ newLength);
      }
      if (newLastModified == lastModified && newLength == length) {
        exclusive=super.acquireExclusiveReadLock(operations,file,exchange);
      }
 else {
        lastModified=newLastModified;
        length=newLength;
        boolean interrupted=sleep();
        if (interrupted) {
          return false;
        }
      }
    }
  }
 catch (  IOException e) {
    if (timeout == 0) {
      throw e;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Cannot acquire read lock. Will try again.",e);
    }
    boolean interrupted=sleep();
    if (interrupted) {
      return false;
    }
  }
  return exclusive;
}
