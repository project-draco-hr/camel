{
  Processor processor=routeContext.createProcessor(this);
  processor=new UnitOfWorkProcessor(routeContext,processor);
  Expression correlation=getExpression().createExpression(routeContext);
  AggregationStrategy strategy=createAggregationStrategy(routeContext);
  AggregateProcessor answer=new AggregateProcessor(processor,correlation,strategy);
  if (getCompletionPredicate() != null) {
    Predicate predicate=getCompletionPredicate().createPredicate(routeContext);
    answer.setCompletionPredicate(predicate);
  }
  if (getCompletionSize() != null) {
    answer.setCompletionSize(getCompletionSize());
  }
  if (getCompletionTimeout() != null) {
    answer.setCompletionTimeout(getCompletionTimeout());
  }
  if (isCompletionFromBatchConsumer() != null) {
    answer.setCompletionFromBatchConsumer(isCompletionFromBatchConsumer());
  }
  return answer;
}
