{
  AggregationStrategy strategy=getAggregationStrategy();
  if (strategy == null && strategyRef != null) {
    Object aggStrategy=routeContext.lookup(strategyRef,Object.class);
    if (aggStrategy instanceof AggregationStrategy) {
      strategy=(AggregationStrategy)aggStrategy;
    }
 else     if (aggStrategy != null) {
      strategy=new AggregationStrategyBeanAdapter(aggStrategy,getAggregationStrategyMethodName());
    }
 else {
      throw new IllegalArgumentException("Cannot find AggregationStrategy in Registry with name: " + strategyRef);
    }
  }
  if (groupExchanges != null && groupExchanges) {
    if (strategy != null || strategyRef != null) {
      throw new IllegalArgumentException("Options groupExchanges and AggregationStrategy cannot be enabled at the same time");
    }
    if (eagerCheckCompletion != null && !eagerCheckCompletion) {
      throw new IllegalArgumentException("Option eagerCheckCompletion cannot be false when groupExchanges has been enabled");
    }
    setEagerCheckCompletion(true);
    strategy=new GroupedExchangeAggregationStrategy();
  }
  if (strategy == null) {
    throw new IllegalArgumentException("AggregationStrategy or AggregationStrategyRef must be set on " + this);
  }
  return strategy;
}
