{
  if (!canTest()) {
    return;
  }
  final Path file=new Path(new File("target/test/test-camel-simple-write-file").getAbsolutePath());
  context.addRoutes(new RouteBuilder(){
    @Override public void configure(){
      from("direct:start").to("hdfs2:///" + file.toUri() + "?fileSystemType=LOCAL&splitStrategy=BYTES:5,IDLE:1000");
      from("hdfs2:///" + file.toUri() + "?initialDelay=2000&fileSystemType=LOCAL&chunkSize=5").to("mock:result");
    }
  }
);
  context.start();
  List<String> expectedResults=new ArrayList<String>();
  for (int i=0; i < 10; ++i) {
    template.sendBody("direct:start","CIAO" + i);
    expectedResults.add("CIAO" + i);
  }
  MockEndpoint resultEndpoint=context.getEndpoint("mock:result",MockEndpoint.class);
  resultEndpoint.expectedMessageCount(10);
  resultEndpoint.assertIsSatisfied();
  List<Exchange> exchanges=resultEndpoint.getExchanges();
  assertEquals(10,exchanges.size());
  resultEndpoint.expectedBodiesReceivedInAnyOrder(expectedResults);
}
