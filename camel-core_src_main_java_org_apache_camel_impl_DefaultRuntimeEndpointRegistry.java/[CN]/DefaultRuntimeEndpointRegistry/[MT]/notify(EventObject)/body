{
  if (event instanceof RouteAddedEvent) {
    RouteAddedEvent rse=(RouteAddedEvent)event;
    Endpoint endpoint=rse.getRoute().getEndpoint();
    String routeId=rse.getRoute().getId();
    Set<String> uris=new HashSet<String>();
    uris.add(endpoint.getEndpointUri());
    inputs.put(routeId,uris);
    outputs.put(routeId,new LRUCache<String,String>(limit));
  }
 else   if (event instanceof RouteRemovedEvent) {
    RouteRemovedEvent rse=(RouteRemovedEvent)event;
    String routeId=rse.getRoute().getId();
    inputs.remove(routeId);
    outputs.remove(routeId);
    if (extended) {
      String uri=rse.getRoute().getEndpoint().getEndpointUri();
      inputUtilization.remove(uri);
    }
  }
 else   if (extended && event instanceof ExchangeCreatedEvent) {
    ExchangeCreatedEvent ece=(ExchangeCreatedEvent)event;
    Endpoint endpoint=ece.getExchange().getFromEndpoint();
    String uri=endpoint.getEndpointUri();
    inputUtilization.onHit(uri);
  }
 else {
    ExchangeSendingEvent ese=(ExchangeSendingEvent)event;
    Endpoint endpoint=ese.getEndpoint();
    String routeId=getRouteId(ese.getExchange());
    String uri=endpoint.getEndpointUri();
    Map<String,String> uris=outputs.get(routeId);
    if (uris != null && !uris.containsKey(uri)) {
      uris.put(uri,uri);
    }
    if (extended) {
      outputUtilization.onHit(uri);
    }
  }
}
