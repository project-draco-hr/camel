{
  final String fieldPreamble;
  final String fieldPostamble;
  final int columnWidthIncrement;
  if (isHeader) {
    fieldPreamble=DEFAULT_HEADER_PREAMBLE;
    fieldPostamble=DEFAULT_HEADER_POSTAMBLE;
  }
 else {
    fieldPreamble=DEFAULT_FIELD_PREAMBLE;
    fieldPostamble=DEFAULT_FIELD_POSTAMBLE;
  }
  columnWidthIncrement=DEFAULT_COLUMN_WIDTH_INCREMENT;
  int exchangeLen=Math.min(columnWidths.get(EXCHANGE_COLUMN_LABEL) + columnWidthIncrement,MAX_COLUMN_WIDTH);
  int routeLen=Math.min(columnWidths.get(ROUTE_COLUMN_LABEL) + columnWidthIncrement,MAX_COLUMN_WIDTH);
  int nodeLen=Math.min(columnWidths.get(NODE_COLUMN_LABEL) + columnWidthIncrement,MAX_COLUMN_WIDTH);
  int durationLen=Math.min(columnWidths.get(DURATION_COLUMN_LABEL) + columnWidthIncrement,MAX_COLUMN_WIDTH);
  int elapsedLen=Math.min(columnWidths.get(ELAPSED_COLUMN_LABEL) + columnWidthIncrement,MAX_COLUMN_WIDTH);
  exchangeLen=Math.max(MIN_COLUMN_WIDTH,exchangeLen);
  routeLen=Math.max(MIN_COLUMN_WIDTH,routeLen);
  nodeLen=Math.max(MIN_COLUMN_WIDTH,nodeLen);
  durationLen=Math.max(13,durationLen);
  elapsedLen=Math.max(MIN_COLUMN_WIDTH,elapsedLen);
  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);
  retval.append(fieldPreamble).append("%-").append(exchangeLen).append('.').append(exchangeLen).append('s').append(fieldPostamble).append(' ');
  retval.append(fieldPreamble).append("%-").append(routeLen).append('.').append(routeLen).append('s').append(fieldPostamble).append(' ');
  retval.append(fieldPreamble).append("%-").append(nodeLen).append('.').append(nodeLen).append('s').append(fieldPostamble).append(' ');
  retval.append(fieldPreamble).append("%").append(durationLen).append('.').append(durationLen).append('s').append(fieldPostamble).append(' ');
  retval.append(fieldPreamble).append("%").append(elapsedLen).append('.').append(elapsedLen).append('s').append(fieldPostamble).append(' ');
  return retval.toString();
}
