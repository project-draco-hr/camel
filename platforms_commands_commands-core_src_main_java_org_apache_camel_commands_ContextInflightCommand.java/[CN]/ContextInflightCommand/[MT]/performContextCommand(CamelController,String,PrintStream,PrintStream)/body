{
  List<Map<String,Object>> inflight=camelController.browseInflightExchanges(contextName,limit,sortByLongestDuration);
  final Map<String,Integer> columnWidths=computeColumnWidths(inflight);
  final String headerFormat=buildFormatString(columnWidths,true);
  final String rowFormat=buildFormatString(columnWidths,false);
  if (inflight.size() > 0) {
    out.println(String.format(headerFormat,EXCHANGE_COLUMN_LABEL,FROM_ROUTE_COLUMN_LABEL,ROUTE_COLUMN_LABEL,NODE_COLUMN_LABEL,ELAPSED_COLUMN_LABEL,DURATION_COLUMN_LABEL));
    out.println(String.format(headerFormat,"----------","----------","-----","----","------------","-------------"));
    for (    Map<String,Object> row : inflight) {
      Object exchangeId=row.get("exchangeId");
      Object fromRouteId=row.get("fromRouteId");
      Object routeId=row.get("routeId");
      Object nodeId=row.get("nodeId");
      Object elapsed=row.get("elapsed");
      Object duration=row.get("duration");
      out.println(String.format(rowFormat,exchangeId,fromRouteId,routeId,nodeId,safeNull(elapsed),safeNull(duration)));
    }
  }
  return null;
}
