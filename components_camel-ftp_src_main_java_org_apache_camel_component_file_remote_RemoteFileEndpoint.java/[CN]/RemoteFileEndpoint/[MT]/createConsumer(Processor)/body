{
  String protocol=((RemoteFileConfiguration)getConfiguration()).getProtocol();
  ObjectHelper.notEmpty(protocol,"protocol");
  RemoteFileConsumer consumer=buildConsumer(processor,(RemoteFileOperations<T>)operations);
  if (isDelete() && (getMoveNamePrefix() != null || getMoveNamePostfix() != null || getExpression() != null)) {
    throw new IllegalArgumentException("You cannot set delete=true and a moveNamePrefix, moveNamePostfix or expression option");
  }
  if (isNoop() && !isIdempotent()) {
    log.info("Endpoint is configured with noop=true so forcing endpoint to be idempotent as well");
    setIdempotent(true);
  }
  if (isIdempotent() && idempotentRepository == null) {
    log.info("Using default memory based idempotent repository with cache max size: " + DEFAULT_IDEMPOTENT_CACHE_SIZE);
    idempotentRepository=MemoryIdempotentRepository.memoryIdempotentRepository(DEFAULT_IDEMPOTENT_CACHE_SIZE);
  }
  configureConsumer(consumer);
  return consumer;
}
