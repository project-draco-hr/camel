{
  afterPropertiesSet();
  RemoteFileConsumer<T> consumer=buildConsumer(processor);
  if (configuration.getDirectory().contains(".")) {
    throw new IllegalArgumentException("Only directory is supported. Endpoint must be configured with a valid directory: " + configuration.getDirectory());
  }
  if (isDelete() && getMove() != null) {
    throw new IllegalArgumentException("You cannot both set delete=true and move options");
  }
  if (isNoop() && !isIdempotent()) {
    log.info("Endpoint is configured with noop=true so forcing endpoint to be idempotent as well");
    setIdempotent(true);
  }
  if (isIdempotent() && idempotentRepository == null) {
    log.info("Using default memory based idempotent repository with cache max size: " + DEFAULT_IDEMPOTENT_CACHE_SIZE);
    idempotentRepository=MemoryIdempotentRepository.memoryIdempotentRepository(DEFAULT_IDEMPOTENT_CACHE_SIZE);
  }
  configureConsumer(consumer);
  return consumer;
}
