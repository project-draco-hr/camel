{
  afterPropertiesSet();
  RemoteFileConsumer<T> consumer=buildConsumer(processor,(RemoteFileOperations<T>)operations);
  if (isDelete() && getMoveExpression() != null) {
    throw new IllegalArgumentException("You cannot both set delete=true and moveExpression options");
  }
  if (isNoop() && !isIdempotent()) {
    log.info("Endpoint is configured with noop=true so forcing endpoint to be idempotent as well");
    setIdempotent(true);
  }
  if (isIdempotent() && idempotentRepository == null) {
    log.info("Using default memory based idempotent repository with cache max size: " + DEFAULT_IDEMPOTENT_CACHE_SIZE);
    idempotentRepository=MemoryIdempotentRepository.memoryIdempotentRepository(DEFAULT_IDEMPOTENT_CACHE_SIZE);
  }
  configureConsumer(consumer);
  return consumer;
}
