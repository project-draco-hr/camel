{
  localServer=ServerBootstrap.bootstrap().setHttpProcessor(getBasicHttpProcessor()).setConnectionReuseStrategy(getConnectionReuseStrategy()).setResponseFactory(getHttpResponseFactory()).setExpectationVerifier(getHttpExpectationVerifier()).setSslContext(getSSLContext()).registerHandler("/hello",new HttpRequestHandler(){
    @Override public void handle(    HttpRequest request,    HttpResponse response,    HttpContext context) throws HttpException, IOException {
      response.setStatusCode(HttpStatus.SC_OK);
      Object header=request.getFirstHeader(Exchange.FILE_NAME);
      assertNull("There should be no Camel header",header);
      for (      Header h : request.getAllHeaders()) {
        if (h.getName().startsWith("Camel") || h.getName().startsWith("org.apache.camel")) {
          assertNull("There should be no Camel header",h);
        }
      }
      response.setHeader("MyApp","dude");
      response.setHeader(Exchange.TO_ENDPOINT,"foo");
    }
  }
).create();
  localServer.start();
  super.setUp();
}
