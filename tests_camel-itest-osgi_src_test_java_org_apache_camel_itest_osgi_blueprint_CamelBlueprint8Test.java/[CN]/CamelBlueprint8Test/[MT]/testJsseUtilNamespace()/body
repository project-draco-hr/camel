{
  getInstalledBundle("CamelBlueprintTestBundle18").start();
  BlueprintContainer ctn=getOsgiService(BlueprintContainer.class,"(osgi.blueprint.container.symbolicname=CamelBlueprintTestBundle18)",10000);
  SSLContextParameters scp=(SSLContextParameters)ctn.getComponentInstance("sslContextParameters");
  assertEquals("TLS",scp.getSecureSocketProtocol());
  assertNotNull(scp.getKeyManagers());
  assertEquals("changeit",scp.getKeyManagers().getKeyPassword());
  assertNull(scp.getKeyManagers().getProvider());
  assertNotNull(scp.getKeyManagers().getKeyStore());
  assertNull(scp.getKeyManagers().getKeyStore().getType());
  assertNotNull(scp.getTrustManagers());
  assertNull(scp.getTrustManagers().getProvider());
  assertNotNull(scp.getTrustManagers().getKeyStore());
  assertNull(scp.getTrustManagers().getKeyStore().getType());
  assertNull(scp.getSecureRandom());
  assertNull(scp.getClientParameters());
  assertNull(scp.getServerParameters());
  assertEquals("test",scp.getCamelContext().getName());
  assertNotNull(scp.getCamelContext());
  assertNotNull(scp.getKeyManagers().getCamelContext());
  assertNotNull(scp.getKeyManagers().getKeyStore().getCamelContext());
  assertNotNull(scp.getTrustManagers().getCamelContext());
  assertNotNull(scp.getTrustManagers().getKeyStore().getCamelContext());
}
