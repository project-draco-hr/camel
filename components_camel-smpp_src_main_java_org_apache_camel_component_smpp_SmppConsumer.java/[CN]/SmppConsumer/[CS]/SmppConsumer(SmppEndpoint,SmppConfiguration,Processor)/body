{
  super(endpoint,processor);
  this.configuration=config;
  this.sessionStateListener=new SessionStateListener(){
    public void onStateChange(    SessionState newState,    SessionState oldState,    Object source){
      if (newState.equals(SessionState.CLOSED)) {
        LOG.warn("Loost connection to: " + getEndpoint().getConnectionString() + " - trying to reconnect...");
        closeSession(session);
        reconnect(configuration.getInitialReconnectDelay());
      }
    }
  }
;
  this.messageReceiverListener=new MessageReceiverListener(){
    private final MessageIDGenerator messageIDGenerator=new RandomMessageIDGenerator();
    public void onAcceptAlertNotification(    AlertNotification alertNotification){
      if (LOG.isDebugEnabled()) {
        LOG.debug("Received an alertNotification " + alertNotification);
      }
      try {
        Exchange exchange=getEndpoint().createOnAcceptAlertNotificationExchange(alertNotification);
        LOG.trace("Processing the new smpp exchange...");
        getProcessor().process(exchange);
        LOG.trace("Processed the new smpp exchange");
      }
 catch (      Exception e) {
        getExceptionHandler().handleException(e);
      }
    }
    public void onAcceptDeliverSm(    DeliverSm deliverSm){
      if (LOG.isDebugEnabled()) {
        LOG.debug("Received a deliverSm " + deliverSm);
      }
      try {
        Exchange exchange=getEndpoint().createOnAcceptDeliverSmExchange(deliverSm);
        LOG.trace("processing the new smpp exchange...");
        getProcessor().process(exchange);
        LOG.trace("processed the new smpp exchange");
      }
 catch (      Exception e) {
        getExceptionHandler().handleException(e);
      }
    }
    public DataSmResult onAcceptDataSm(    DataSm dataSm,    Session session) throws ProcessRequestException {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Received a dataSm " + dataSm);
      }
      MessageId newMessageId=messageIDGenerator.newMessageId();
      try {
        Exchange exchange=getEndpoint().createOnAcceptDataSm(dataSm,newMessageId.getValue());
        LOG.trace("processing the new smpp exchange...");
        getProcessor().process(exchange);
        LOG.trace("processed the new smpp exchange");
      }
 catch (      Exception e) {
        getExceptionHandler().handleException(e);
        throw new ProcessRequestException(e.getMessage(),255,e);
      }
      return new DataSmResult(newMessageId,dataSm.getOptionalParametes());
    }
  }
;
}
