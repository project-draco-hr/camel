{
  blobStore.createContainerInLocation(null,TEST_CONTAINER);
  ((JcloudsComponent)context.getComponent("jclouds")).setBlobStores(Lists.newArrayList(blobStore));
  return new RouteBuilder(){
    public void configure(){
      from("direct:put").setHeader(JcloudsConstants.BLOB_NAME,constant(TEST_BLOB_IN_DIR)).setHeader(JcloudsConstants.CONTAINER_NAME,constant(TEST_CONTAINER)).to("jclouds:blobstore:transient").to("mock:results");
      from("direct:put-and-get").setHeader(JcloudsConstants.BLOB_NAME,constant(TEST_BLOB_IN_DIR)).setHeader(JcloudsConstants.CONTAINER_NAME,constant(TEST_CONTAINER)).to("jclouds:blobstore:transient");
      from("direct:put-and-count").setHeader(JcloudsConstants.BLOB_NAME,constant(TEST_BLOB_IN_DIR)).setHeader(JcloudsConstants.CONTAINER_NAME,constant(TEST_CONTAINER)).to("jclouds:blobstore:transient");
      from("direct:put-and-remove").setHeader(JcloudsConstants.BLOB_NAME,constant(TEST_BLOB_IN_DIR)).setHeader(JcloudsConstants.CONTAINER_NAME,constant(TEST_CONTAINER)).to("jclouds:blobstore:transient");
      from("direct:put-and-clear").setHeader(JcloudsConstants.BLOB_NAME,constant(TEST_BLOB_IN_DIR)).setHeader(JcloudsConstants.CONTAINER_NAME,constant(TEST_CONTAINER)).to("jclouds:blobstore:transient");
      from("direct:put-and-delete-container").setHeader(JcloudsConstants.BLOB_NAME,constant(TEST_BLOB_IN_DIR)).setHeader(JcloudsConstants.CONTAINER_NAME,constant(TEST_CONTAINER)).to("jclouds:blobstore:transient");
      from("direct:container-exists").to("jclouds:blobstore:transient");
    }
  }
;
}
