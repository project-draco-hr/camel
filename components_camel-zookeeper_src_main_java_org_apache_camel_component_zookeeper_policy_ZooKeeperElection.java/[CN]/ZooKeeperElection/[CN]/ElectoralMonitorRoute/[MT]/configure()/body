{
  from(zep).id("election-route-" + candidateName.substring(0,8)).sort(body(),comparator).process(new Processor(){
    @Override public void process(    Exchange e) throws Exception {
      @SuppressWarnings("unchecked") List<String> candidates=e.getIn().getMandatoryBody(List.class);
      int location=Math.abs(Collections.binarySearch(candidates,candidateName));
      if (isOurCandidateAtLocationInCandidatesList(candidates,location)) {
        masterNode.set(location <= enabledCount);
        LOG.debug("This node is number '{}' on the candidate list, election is configured for the top '{}'. this node will be {}",new Object[]{location,enabledCount,masterNode.get() ? "enabled" : "disabled"});
      }
      electionComplete.countDown();
      notifyElectionWatchers();
    }
    private boolean isOurCandidateAtLocationInCandidatesList(    List<String> candidates,    int location){
      return location <= candidates.size() && candidates.get(location - 1).startsWith(candidateName);
    }
  }
);
}
