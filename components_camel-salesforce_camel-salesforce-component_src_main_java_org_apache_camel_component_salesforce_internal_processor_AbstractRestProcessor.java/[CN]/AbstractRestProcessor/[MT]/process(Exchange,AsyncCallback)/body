{
  try {
    processRequest(exchange);
  }
 catch (  SalesforceException e) {
    exchange.setException(e);
    callback.done(true);
    return true;
  }
catch (  RuntimeException e) {
    exchange.setException(new SalesforceException(e.getMessage(),e));
    callback.done(true);
    return true;
  }
  try {
switch (operationName) {
case GET_VERSIONS:
      processGetVersions(exchange,callback);
    break;
case GET_RESOURCES:
  processGetResources(exchange,callback);
break;
case GET_GLOBAL_OBJECTS:
processGetGlobalObjects(exchange,callback);
break;
case GET_BASIC_INFO:
processGetBasicInfo(exchange,callback);
break;
case GET_DESCRIPTION:
processGetDescription(exchange,callback);
break;
case GET_SOBJECT:
processGetSobject(exchange,callback);
break;
case CREATE_SOBJECT:
processCreateSobject(exchange,callback);
break;
case UPDATE_SOBJECT:
processUpdateSobject(exchange,callback);
break;
case DELETE_SOBJECT:
processDeleteSobject(exchange,callback);
break;
case GET_SOBJECT_WITH_ID:
processGetSobjectWithId(exchange,callback);
break;
case UPSERT_SOBJECT:
processUpsertSobject(exchange,callback);
break;
case DELETE_SOBJECT_WITH_ID:
processDeleteSobjectWithId(exchange,callback);
break;
case GET_BLOB_FIELD:
processGetBlobField(exchange,callback);
break;
case QUERY:
processQuery(exchange,callback);
break;
case QUERY_MORE:
processQueryMore(exchange,callback);
break;
case QUERY_ALL:
processQueryAll(exchange,callback);
break;
case SEARCH:
processSearch(exchange,callback);
break;
case APEX_CALL:
processApexCall(exchange,callback);
break;
default :
throw new SalesforceException("Unknown operation name: " + operationName.value(),null);
}
}
 catch (SalesforceException e) {
exchange.setException(new SalesforceException(String.format("Error processing %s: [%s] \"%s\"",operationName.value(),e.getStatusCode(),e.getMessage()),e));
callback.done(true);
return true;
}
catch (RuntimeException e) {
exchange.setException(new SalesforceException(String.format("Unexpected Error processing %s: \"%s\"",operationName.value(),e.getMessage()),e));
callback.done(true);
return true;
}
return false;
}
