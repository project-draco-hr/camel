{
  if (isOnCompleteOnly() && isOnFailureOnly()) {
    throw new IllegalArgumentException("Both onCompleteOnly and onFailureOnly cannot be true. Only one of them can be true. On node: " + this);
  }
  Processor childProcessor=this.createChildProcessor(routeContext,true);
  childProcessor=new UnitOfWorkProcessor(routeContext,childProcessor);
  Predicate when=null;
  if (onWhen != null) {
    when=onWhen.getExpression().createPredicate(routeContext);
  }
  String ref=this.executorServiceRef != null ? this.executorServiceRef : "OnCompletion";
  ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager();
  executorService=manager.getDefaultExecutorService(ref,this);
  boolean original=getUseOriginalMessagePolicy() != null ? getUseOriginalMessagePolicy() : false;
  OnCompletionProcessor answer=new OnCompletionProcessor(routeContext.getCamelContext(),childProcessor,executorService,isOnCompleteOnly(),isOnFailureOnly(),when,original);
  return answer;
}
