{
  clientExchange.setResponseListener(new ClientCallback<ClientExchange>(){
    @Override public void completed(    ClientExchange clientExchange){
      LOG.trace("completed: {}",clientExchange);
      try {
        storeCookies(clientExchange);
        Message message=endpoint.getUndertowHttpBinding().toCamelMessage(clientExchange,camelExchange);
        if (ExchangeHelper.isOutCapable(camelExchange)) {
          camelExchange.setOut(message);
        }
 else {
          camelExchange.setIn(message);
        }
      }
 catch (      Exception e) {
        camelExchange.setException(e);
      }
 finally {
        IOHelper.close(connection);
        callback.done(false);
      }
    }
    @Override public void failed(    IOException e){
      LOG.trace("failed: {}",e);
      camelExchange.setException(e);
      try {
        IOHelper.close(connection);
      }
  finally {
        callback.done(false);
      }
    }
  }
);
  try {
    if (body != null) {
      clientExchange.getRequestChannel().write(body);
    }
  }
 catch (  IOException e) {
    camelExchange.setException(e);
    IOHelper.close(connection);
    callback.done(false);
  }
}
