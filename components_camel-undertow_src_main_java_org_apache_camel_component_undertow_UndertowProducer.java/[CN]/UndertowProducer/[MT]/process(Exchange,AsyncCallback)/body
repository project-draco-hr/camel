{
  ClientConnection connection=null;
  try {
    final UndertowClient client=UndertowClient.getInstance();
    IoFuture<ClientConnection> connect=client.connect(endpoint.getHttpURI(),worker,pool,options);
    String url=UndertowHelper.createURL(exchange,getEndpoint());
    URI uri=UndertowHelper.createURI(exchange,url,getEndpoint());
    url=uri.toASCIIString();
    HttpString method=UndertowHelper.createMethod(exchange,endpoint,exchange.getIn().getBody() != null);
    ClientRequest request=new ClientRequest();
    request.setProtocol(Protocols.HTTP_1_1);
    request.setPath(url);
    request.setMethod(method);
    Object body=getRequestBody(request,exchange);
    TypeConverter tc=endpoint.getCamelContext().getTypeConverter();
    ByteBuffer bodyAsByte=tc.tryConvertTo(ByteBuffer.class,body);
    if (body != null) {
      request.getRequestHeaders().put(Headers.CONTENT_LENGTH,bodyAsByte.array().length);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Executing http {} method: {}",method,url);
    }
    connection=connect.get();
    connection.sendRequest(request,new UndertowProducerCallback(connection,bodyAsByte,exchange,callback));
  }
 catch (  Exception e) {
    IOHelper.close(connection);
    exchange.setException(e);
    callback.done(true);
    return true;
  }
  return false;
}
