{
  when(exchange.getIn()).thenReturn(inMessage);
  when(inMessage.getMandatoryBody(String.class)).thenReturn(MESSAGE);
  when(inMessage.getHeader(WebsocketConstants.SEND_TO_ALL,false,Boolean.class)).thenReturn(true);
  when(store.getAll()).thenReturn(sockets);
  when(defaultWebsocket1.getConnection()).thenReturn(connection);
  when(defaultWebsocket2.getConnection()).thenReturn(connection);
  when(connection.isOpen()).thenReturn(true);
  websocketProducer.process(exchange);
  InOrder inOrder=inOrder(endpoint,store,connection,defaultWebsocket1,defaultWebsocket2,exchange,inMessage);
  inOrder.verify(exchange,times(1)).getIn();
  inOrder.verify(inMessage,times(1)).getMandatoryBody(String.class);
  inOrder.verify(inMessage,times(1)).getHeader(WebsocketConstants.SEND_TO_ALL,false,Boolean.class);
  inOrder.verify(store,times(1)).getAll();
  inOrder.verify(defaultWebsocket1,times(1)).getConnection();
  inOrder.verify(connection,times(1)).isOpen();
  inOrder.verify(defaultWebsocket1,times(1)).getConnection();
  inOrder.verify(connection,times(1)).sendMessage(MESSAGE);
  inOrder.verify(defaultWebsocket2,times(1)).getConnection();
  inOrder.verify(connection,times(1)).isOpen();
  inOrder.verify(defaultWebsocket2,times(1)).getConnection();
  inOrder.verify(connection,times(1)).sendMessage(MESSAGE);
  inOrder.verifyNoMoreInteractions();
}
