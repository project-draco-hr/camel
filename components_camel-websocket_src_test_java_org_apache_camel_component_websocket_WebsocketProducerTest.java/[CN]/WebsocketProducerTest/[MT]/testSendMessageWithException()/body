{
  when(defaultWebsocket1.getConnection()).thenReturn(connection);
  when(connection.isOpen()).thenReturn(true);
  doThrow(exception).when(connection).sendMessage(MESSAGE);
  try {
    websocketProducer.sendMessage(defaultWebsocket1,MESSAGE);
    fail("Exception expected");
  }
 catch (  IOException ioe) {
    assertEquals(exception,ioe);
  }
  InOrder inOrder=inOrder(endpoint,store,connection,defaultWebsocket1,defaultWebsocket2,exchange,inMessage);
  inOrder.verify(defaultWebsocket1,times(1)).getConnection();
  inOrder.verify(connection,times(1)).isOpen();
  inOrder.verify(defaultWebsocket1,times(1)).getConnection();
  inOrder.verify(connection,times(1)).sendMessage(MESSAGE);
  inOrder.verifyNoMoreInteractions();
}
