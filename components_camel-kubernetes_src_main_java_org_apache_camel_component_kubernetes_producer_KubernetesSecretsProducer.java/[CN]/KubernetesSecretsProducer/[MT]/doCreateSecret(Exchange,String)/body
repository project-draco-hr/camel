{
  Secret secret=null;
  String namespaceName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,String.class);
  Secret secretToCreate=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_SECRET,Secret.class);
  if (ObjectHelper.isEmpty(namespaceName)) {
    LOG.error("Create a specific secret require specify a namespace name");
    throw new IllegalArgumentException("Create a specific secret require specify a namespace name");
  }
  if (ObjectHelper.isEmpty(secretToCreate)) {
    LOG.error("Create a specific secret require specify a secret bean");
    throw new IllegalArgumentException("Create a specific secret require specify a secret bean");
  }
  Map<String,String> labels=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_SECRETS_LABELS,Map.class);
  secret=getEndpoint().getKubernetesClient().secrets().inNamespace(namespaceName).create(secretToCreate);
  exchange.getOut().setBody(secret);
}
