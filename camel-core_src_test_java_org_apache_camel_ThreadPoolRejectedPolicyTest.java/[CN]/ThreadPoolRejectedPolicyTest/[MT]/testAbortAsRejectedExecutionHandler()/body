{
  final ExecutorService executorService=createTestExecutorService(ThreadPoolRejectedPolicy.Abort.asRejectedExecutionHandler());
  final MockCallable<String> task1=new MockCallable<String>();
  final Future<?> result1=executorService.submit(task1);
  final MockRunnable task2=new MockRunnable();
  final Future<?> result2=executorService.submit(task2);
  final MockCallable<String> task3=new MockCallable<String>();
  try {
    executorService.submit(task3);
    fail("Third task should have been rejected by a threadpool is full with 1 task and queue is full with 1 task.");
  }
 catch (  RejectedExecutionException e) {
  }
  shutdownAndAwait(executorService);
  assertInvoked(task1,result1);
  assertInvoked(task2,result2);
  assertRejected(task3,null);
}
