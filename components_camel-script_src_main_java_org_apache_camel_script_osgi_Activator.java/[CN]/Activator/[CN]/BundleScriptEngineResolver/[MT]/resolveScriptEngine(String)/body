{
  try {
    BufferedReader in=IOHelper.buffered(new InputStreamReader(configFile.openStream()));
    String className=in.readLine();
    in.close();
    Class<?> cls=bundle.loadClass(className);
    if (!ScriptEngineFactory.class.isAssignableFrom(cls)) {
      throw new IllegalStateException("Invalid ScriptEngineFactory: " + cls.getName());
    }
    ScriptEngineFactory factory=(ScriptEngineFactory)cls.newInstance();
    List<String> names=factory.getNames();
    for (    String test : names) {
      if (test.equals(name)) {
        ClassLoader old=Thread.currentThread().getContextClassLoader();
        ScriptEngine engine;
        try {
          Thread.currentThread().setContextClassLoader(factory.getClass().getClassLoader());
          engine=factory.getScriptEngine();
        }
  finally {
          Thread.currentThread().setContextClassLoader(old);
        }
        LOG.trace("Resolved ScriptEngineFactory: {} for expected name: {}",engine,name);
        return engine;
      }
    }
    LOG.debug("ScriptEngineFactory: {} does not match expected name: {}",factory.getEngineName(),name);
    return null;
  }
 catch (  Exception e) {
    LOG.warn("Cannot create ScriptEngineFactory: " + e.getClass().getName(),e);
    return null;
  }
}
