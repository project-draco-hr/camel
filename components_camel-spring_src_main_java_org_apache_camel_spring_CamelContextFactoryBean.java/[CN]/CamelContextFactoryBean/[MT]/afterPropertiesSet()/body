{
  Debugger debugger=getBeanForType(Debugger.class);
  if (debugger != null) {
    getContext().addInterceptStrategy(debugger);
  }
  LifecycleStrategy lifecycleStrategy=getBeanForType(LifecycleStrategy.class);
  if (lifecycleStrategy != null) {
    getContext().setLifecycleStrategy(lifecycleStrategy);
  }
  Registry registry=getBeanForType(Registry.class);
  if (registry != null) {
    getContext().setRegistry(registry);
  }
  if (beanPostProcessor != null) {
    if (beanPostProcessor instanceof ApplicationContextAware) {
      ((ApplicationContextAware)beanPostProcessor).setApplicationContext(applicationContext);
    }
    if (beanPostProcessor instanceof CamelBeanPostProcessor) {
      ((CamelBeanPostProcessor)beanPostProcessor).setCamelContext(getContext());
    }
  }
  getContext().addRouteDefinitions(routes);
  if (instrumentationAgent == null && isJmxEnabled()) {
    if (lifecycleStrategy != null) {
      LOG.warn("lifecycleStrategy will be overriden by InstrumentationLifecycleStrategy");
    }
    SpringInstrumentationAgent agent=new SpringInstrumentationAgent();
    if (camelJMXAgent != null) {
      agent.enableJmx(camelJMXAgent.getJmxDomainName(),camelJMXAgent.getConnectorPath(),camelJMXAgent.getConnectorPort());
      if (camelJMXAgent.isCreateConnector() != null) {
        agent.setCreateConnector(camelJMXAgent.isCreateConnector());
      }
      if (camelJMXAgent.isUsePlatformMBeanServer() != null) {
        agent.setUsePlatformMBeanServer(camelJMXAgent.isUsePlatformMBeanServer());
      }
    }
 else {
      agent.enableJmx();
    }
    agent.setCamelContext(getContext());
    String name=getMbeanServer();
    if (name != null) {
      MBeanServer mbeanServer=(MBeanServer)getApplicationContext().getBean(name,MBeanServer.class);
      agent.setMBeanServer(mbeanServer);
    }
    instrumentationAgent=agent;
    instrumentationAgent.start();
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Found JAXB created routes: " + getRoutes());
  }
  findRouteBuiders();
  installRoutes();
}
