{
  MockEndpoint messagesMock=getMockEndpoint("mock:messages");
  messagesMock.expectedMinimumMessageCount(1);
  messagesMock.assertIsSatisfied();
  Exchange exchange=messagesMock.getExchanges().get(0);
  Messages messages=exchange.getIn().getBody(Messages.class);
  assertEquals(2,messages.getMessages().size());
  assertEquals("Testing yammer API...",messages.getMessages().get(0).getBody().getPlain());
  assertEquals("(Principal Software Engineer) has #joined the redhat.com network. Take a moment to welcome Jonathan.",messages.getMessages().get(1).getBody().getPlain());
  MockEndpoint userMock=getMockEndpoint("mock:user");
  userMock.expectedMinimumMessageCount(1);
  template.sendBody("direct:start","overwrite me");
  userMock.assertIsSatisfied();
  exchange=userMock.getExchanges().get(0);
  List<User> users=exchange.getIn().getBody(List.class);
  assertEquals(1,users.size());
  assertEquals("Joe Camel",users.get(0).getFullName());
  assertEquals("jcamel@redhat.com",users.get(0).getContact().getEmailAddresses().get(0).getAddress());
}
