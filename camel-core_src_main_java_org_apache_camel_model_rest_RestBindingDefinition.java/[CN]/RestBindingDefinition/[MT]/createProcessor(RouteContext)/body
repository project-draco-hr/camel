{
  if (ObjectHelper.isEmpty(type) && ObjectHelper.isEmpty(classType)) {
    throw new IllegalArgumentException("Type must be configured on " + this);
  }
  CamelContext context=routeContext.getCamelContext();
  String mode=context.getRestConfiguration().getBindingMode().name();
  if (bindingMode != null) {
    mode=bindingMode.name();
  }
  String name=jsonDataFormat;
  if (name == null) {
    name="json-jackson";
  }
  DataFormat json=context.resolveDataFormat(name);
  if (mode.contains("json") && json == null) {
    throw new IllegalArgumentException("JSon DataFormat " + name + " not found.");
  }
  if (classType == null && type != null) {
    classType=context.getClassResolver().resolveMandatoryClass(type);
  }
  if (classType == null && typeList != null) {
    classType=context.getClassResolver().resolveMandatoryClass(typeList);
  }
  if (classType != null) {
    IntrospectionSupport.setProperty(context.getTypeConverter(),json,"unmarshalType",classType);
    IntrospectionSupport.setProperty(context.getTypeConverter(),json,"useList",useList);
  }
  context.addService(json);
  DataFormat outJson=context.resolveDataFormat(name);
  if (outClassType == null && outType != null) {
    outClassType=context.getClassResolver().resolveMandatoryClass(outType);
  }
  if (outClassType == null && outTypeList != null) {
    outClassType=context.getClassResolver().resolveMandatoryClass(outTypeList);
  }
  if (outClassType != null) {
    IntrospectionSupport.setProperty(context.getTypeConverter(),outJson,"unmarshalType",outClassType);
    IntrospectionSupport.setProperty(context.getTypeConverter(),outJson,"useList",outUseList);
  }
  context.addService(outJson);
  name=xmlDataFormat;
  if (name == null) {
    name="jaxb";
  }
  DataFormat jaxb=context.resolveDataFormat(name);
  if (mode.contains("xml") && jaxb == null) {
    throw new IllegalArgumentException("XML DataFormat " + name + " not found.");
  }
  if (classType == null && type != null) {
    classType=context.getClassResolver().resolveMandatoryClass(type);
  }
  if (classType == null && typeList != null) {
    classType=context.getClassResolver().resolveMandatoryClass(type);
  }
  if (classType != null) {
    JAXBContext jc=JAXBContext.newInstance(classType);
    IntrospectionSupport.setProperty(context.getTypeConverter(),jaxb,"context",jc);
  }
  context.addService(jaxb);
  DataFormat outJaxb=context.resolveDataFormat(name);
  if (outClassType == null && outType != null) {
    outClassType=context.getClassResolver().resolveMandatoryClass(outType);
  }
  if (outClassType == null && outTypeList != null) {
    outClassType=context.getClassResolver().resolveMandatoryClass(outTypeList);
  }
  if (outClassType != null) {
    JAXBContext jc=JAXBContext.newInstance(outClassType);
    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);
  }
 else   if (classType != null) {
    JAXBContext jc=JAXBContext.newInstance(classType);
    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);
  }
  context.addService(outJaxb);
  return new RestBindingProcessor(json,jaxb,outJson,outJaxb,consumes,produces,mode);
}
