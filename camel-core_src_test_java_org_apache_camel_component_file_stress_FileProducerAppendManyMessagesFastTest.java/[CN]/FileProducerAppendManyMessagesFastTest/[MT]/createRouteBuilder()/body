{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("file:target/big").process(new Processor(){
        @Override public void process(        Exchange exchange) throws Exception {
          FileOutputStream fos=new FileOutputStream("target/out/also-big.txt",true);
          exchange.setProperty("myStream",fos);
        }
      }
).split(body().tokenize(LS)).streaming().to("log:processing?groupSize=1000").process(new Processor(){
        @Override public void process(        Exchange exchange) throws Exception {
          OutputStream fos=exchange.getProperty("myStream",OutputStream.class);
          byte[] data=exchange.getIn().getBody(byte[].class);
          fos.write(data);
          fos.write(LS.getBytes());
        }
      }
).end().process(new Processor(){
        @Override public void process(        Exchange exchange) throws Exception {
          OutputStream fos=exchange.getProperty("myStream",OutputStream.class);
          fos.close();
          exchange.removeProperty("myStream");
        }
      }
).to("mock:done");
    }
  }
;
}
