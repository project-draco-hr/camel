{
  boolean sync=false;
  List<Processor> list=getProcessors();
  if (list.isEmpty()) {
    throw new IllegalStateException("No processors available to process " + exchange);
  }
  Processor processor=chooseProcessor(list,exchange);
  if (processor == null) {
    throw new IllegalStateException("No processors could be chosen to process " + exchange);
  }
 else {
    if (processor instanceof AsyncProcessor) {
      AsyncProcessor asyncProcessor=(AsyncProcessor)processor;
      sync=asyncProcessor.process(exchange,new AsyncCallback(){
        public void done(        boolean sync){
          if (!sync) {
            callback.done(sync);
          }
        }
      }
);
    }
 else {
      try {
        processor.process(exchange);
      }
 catch (      Exception ex) {
        exchange.setException(ex);
      }
      callback.done(false);
    }
  }
  return sync;
}
