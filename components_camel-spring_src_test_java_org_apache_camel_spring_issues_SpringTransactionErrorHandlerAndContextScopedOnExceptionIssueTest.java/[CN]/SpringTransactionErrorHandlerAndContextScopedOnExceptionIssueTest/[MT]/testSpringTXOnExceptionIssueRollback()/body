{
  int count=jdbc.queryForInt("select count(*) from books");
  assertEquals("Number of books",0,count);
  getMockEndpoint("mock:onException").expectedMessageCount(1);
  getMockEndpoint("mock:result").expectedMessageCount(0);
  try {
    template.sendBody("direct:start","Donkey in Action");
    fail("Should have thrown exception");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(RuntimeCamelException.class,e.getCause());
    assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause());
    assertEquals("We don't have Donkeys, only Camels",e.getCause().getCause().getMessage());
  }
  assertMockEndpointsSatisfied();
  count=jdbc.queryForInt("select count(*) from books");
  assertEquals("Number of books",0,count);
}
