{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      context.addComponent("async",new MyAsyncComponent());
      from("direct:start").to("mock:before").to("log:before").doTry().process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          beforeThreadName=Thread.currentThread().getName();
        }
      }
).to("async:bye:camel?failFirstAttempts=1").doCatch(Exception.class).to("log:catch").to("mock:catch").process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          middleThreadName=Thread.currentThread().getName();
        }
      }
).to("async:bye:world").doFinally().process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          afterThreadName=Thread.currentThread().getName();
        }
      }
).to("log:after").to("mock:after").to("async:bye:camel").end().process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          resultThreadName=Thread.currentThread().getName();
        }
      }
).to("log:result").to("mock:result");
    }
  }
;
}
