{
  return new Restlet(){
    @Override public void handle(    Request request,    Response response){
      super.handle(request,response);
      LOG.debug("Consumer restlet handle request method: {}",request.getMethod());
      Exchange exchange=null;
      try {
        exchange=getEndpoint().createExchange();
        createUoW(exchange);
        RestletBinding binding=getEndpoint().getRestletBinding();
        binding.populateExchangeFromRestletRequest(request,response,exchange);
        try {
          getProcessor().process(exchange);
        }
 catch (        Exception e) {
          exchange.setException(e);
        }
        binding.populateRestletResponseFromExchange(exchange,response);
        Uniform callback=newResponseUniform(exchange);
        response.setOnError(callback);
        response.setOnSent(callback);
      }
 catch (      Throwable e) {
        getExceptionHandler().handleException("Error processing request",exchange,e);
        if (exchange != null) {
          doneUoW(exchange);
        }
      }
    }
  }
;
}
