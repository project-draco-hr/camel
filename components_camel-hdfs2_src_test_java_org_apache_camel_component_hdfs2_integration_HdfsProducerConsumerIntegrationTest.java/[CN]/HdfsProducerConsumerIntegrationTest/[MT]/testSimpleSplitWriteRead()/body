{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure(){
      from("direct:start").to("hdfs2://localhost:9000/tmp/test/test-camel-simple-write-file?fileSystemType=HDFS&splitStrategy=BYTES:5,IDLE:1000");
      from("hdfs2://localhost:9000/tmp/test/test-camel-simple-write-file?pattern=*&initialDelay=2000&fileSystemType=HDFS&chunkSize=5").to("mock:result");
    }
  }
);
  context.start();
  Set<String> sent=new HashSet<String>();
  for (int i=0; i < 10; ++i) {
    String text="CIAO" + i;
    sent.add(text);
    template.sendBody("direct:start",text);
  }
  MockEndpoint resultEndpoint=context.getEndpoint("mock:result",MockEndpoint.class);
  resultEndpoint.expectedMessageCount(10);
  resultEndpoint.assertIsSatisfied();
  List<Exchange> exchanges=resultEndpoint.getExchanges();
  for (  Exchange exchange : exchanges) {
    String text=exchange.getIn().getBody(String.class);
    sent.remove(text);
  }
  assertThat(sent.isEmpty(),is(true));
}
