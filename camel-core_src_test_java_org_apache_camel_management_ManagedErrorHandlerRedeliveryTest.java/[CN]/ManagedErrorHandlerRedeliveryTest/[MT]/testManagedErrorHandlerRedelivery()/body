{
  counter=0;
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=errorhandlers,*"),null);
  assertEquals(1,set.size());
  ObjectName on=set.iterator().next();
  Integer max=(Integer)mbeanServer.getAttribute(on,"MaximumRedeliveries");
  assertEquals(5,max.intValue());
  Long delay=(Long)mbeanServer.getAttribute(on,"MaximumRedeliveryDelay");
  assertEquals(60000,delay.longValue());
  delay=(Long)mbeanServer.getAttribute(on,"RedeliveryDelay");
  assertEquals(0,delay.longValue());
  String camelId=(String)mbeanServer.getAttribute(on,"CamelId");
  assertEquals("camel-1",camelId);
  Boolean dlc=(Boolean)mbeanServer.getAttribute(on,"DeadLetterChannel");
  assertEquals(Boolean.FALSE,dlc);
  Boolean dlcom=(Boolean)mbeanServer.getAttribute(on,"DeadLetterUseOriginalMessage");
  assertEquals(Boolean.FALSE,dlcom);
  Boolean tx=(Boolean)mbeanServer.getAttribute(on,"SupportTransactions");
  assertEquals(Boolean.FALSE,tx);
  String dlcUri=(String)mbeanServer.getAttribute(on,"DeadLetterChannelEndpointUri");
  assertNull(dlcUri);
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertEquals(3,counter);
  assertMockEndpointsSatisfied();
  counter=0;
  mock.reset();
  mock.expectedMessageCount(0);
  mbeanServer.setAttribute(on,new Attribute("MaximumRedeliveries",0));
  try {
    template.sendBody("direct:start","Bye World");
    fail("Should have thrown exception");
  }
 catch (  CamelExecutionException e) {
    IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());
    assertEquals("Forced",cause.getMessage());
  }
  assertEquals(1,counter);
  max=(Integer)mbeanServer.getAttribute(on,"MaximumRedeliveries");
  assertEquals(0,max.intValue());
}
