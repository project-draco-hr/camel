{
  final CountDownLatch latch=new CountDownLatch(1);
  CamelContext container=new CamelContext();
  ConnectionFactory connectionFactory=new ActiveMQConnectionFactory("vm://localhost?broker.persistent=false");
  container.addComponent("activemq",jmsComponentClientAcknowledge(connectionFactory));
  container.routes(new RouteBuilder(){
    public void configure(){
      from("jms:activemq:test.a").to("jms:activemq:test.b");
      from("jms:activemq:test.b").process(new Processor<JmsExchange>(){
        public void onExchange(        JmsExchange exchange){
          System.out.println("Received exchange: " + exchange.getRequest());
          latch.countDown();
        }
      }
);
    }
  }
);
  container.activateEndpoints();
  Endpoint<JmsExchange> endpoint=container.endpoint("jms:activemq:test.a");
  JmsExchange exchange2=endpoint.createExchange();
  exchange2.setHeader("cheese",123);
  endpoint.onExchange(exchange2);
  boolean received=latch.await(5,TimeUnit.SECONDS);
  assertTrue("Did not recieve the message!",received);
  container.deactivateEndpoints();
}
