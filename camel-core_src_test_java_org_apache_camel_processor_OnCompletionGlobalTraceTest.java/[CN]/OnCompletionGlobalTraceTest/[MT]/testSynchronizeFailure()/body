{
  getMockEndpoint("mock:sync").expectedMessageCount(1);
  getMockEndpoint("mock:sync").expectedPropertyReceived(Exchange.ON_COMPLETION,true);
  getMockEndpoint("mock:trace").expectedMessageCount(3);
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(0);
  try {
    template.sendBody("direct:start","Kabom");
    fail("Should throw exception");
  }
 catch (  CamelExecutionException e) {
    assertEquals("Kabom",e.getCause().getMessage());
  }
  assertMockEndpointsSatisfied();
  TraceEventMessage msg1=getMockEndpoint("mock:trace").getReceivedExchanges().get(0).getIn().getBody(TraceEventMessage.class);
  TraceEventMessage msg2=getMockEndpoint("mock:trace").getReceivedExchanges().get(1).getIn().getBody(TraceEventMessage.class);
  TraceEventMessage msg3=getMockEndpoint("mock:trace").getReceivedExchanges().get(2).getIn().getBody(TraceEventMessage.class);
  assertEquals("direct:start",msg1.getFromEndpointUri());
  assertEquals("ref:myProcessor",msg1.getToNode());
  assertTrue(msg2.getPreviousNode().startsWith("OnCompletion"));
  assertEquals("log:global",msg2.getToNode());
  assertEquals("log:global",msg3.getPreviousNode());
  assertEquals("mock:sync",msg3.getToNode());
}
