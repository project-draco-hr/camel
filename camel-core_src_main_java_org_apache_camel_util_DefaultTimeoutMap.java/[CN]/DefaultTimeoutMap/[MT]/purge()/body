{
  long now=currentTime();
synchronized (map) {
    for (Iterator<TimeoutMapEntry<K,V>> iter=index.iterator(); iter.hasNext(); ) {
      TimeoutMapEntry<K,V> entry=iter.next();
      if (entry == null) {
        break;
      }
      if (entry.getExpireTime() < now) {
        if (isValidForEviction(entry)) {
          if (log.isDebugEnabled()) {
            log.debug("Evicting inactive request for correlationID: " + entry);
          }
          map.remove(entry.getKey());
          iter.remove();
        }
      }
 else {
        break;
      }
    }
  }
}
