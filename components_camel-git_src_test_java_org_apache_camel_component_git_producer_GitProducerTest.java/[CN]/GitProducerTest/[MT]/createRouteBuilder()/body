{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:clone").to("git://" + gitLocalRepo + "?remotePath=https://github.com/oscerd/json-webserver-example.git&operation=clone");
      from("direct:init").to("git://" + gitLocalRepo + "?operation=init");
      from("direct:add").to("git://" + gitLocalRepo + "?operation=add");
      from("direct:remove").to("git://" + gitLocalRepo + "?operation=rm");
      from("direct:add-on-branch").to("git://" + gitLocalRepo + "?operation=add&branchName="+ branchTest);
      from("direct:remove-on-branch").to("git://" + gitLocalRepo + "?operation=add&branchName="+ branchTest);
      from("direct:commit").to("git://" + gitLocalRepo + "?operation=commit");
      from("direct:commit-branch").to("git://" + gitLocalRepo + "?operation=commit&branchName="+ branchTest);
      from("direct:commit-all").to("git://" + gitLocalRepo + "?operation=commit");
      from("direct:commit-all-branch").to("git://" + gitLocalRepo + "?operation=commit&branchName="+ branchTest);
      from("direct:create-branch").to("git://" + gitLocalRepo + "?operation=createBranch&branchName="+ branchTest);
      from("direct:delete-branch").to("git://" + gitLocalRepo + "?operation=deleteBranch&branchName="+ branchTest);
      from("direct:status").to("git://" + gitLocalRepo + "?operation=status");
      from("direct:status-branch").to("git://" + gitLocalRepo + "?operation=status&branchName="+ branchTest);
      from("direct:log").to("git://" + gitLocalRepo + "?operation=log");
      from("direct:log-branch").to("git://" + gitLocalRepo + "?operation=log&branchName="+ branchTest);
      from("direct:create-tag").to("git://" + gitLocalRepo + "?operation=createTag&tagName="+ tagTest);
      from("direct:delete-tag").to("git://" + gitLocalRepo + "?operation=deleteTag&tagName="+ tagTest);
      from("direct:show-branches").to("git://" + gitLocalRepo + "?operation=showBranches");
      from("direct:cherrypick").to("git://" + gitLocalRepo + "?operation=cherryPick&branchName="+ branchTest);
      from("direct:cherrypick-master").to("git://" + gitLocalRepo + "?operation=cherryPick&branchName=refs/heads/master");
    }
  }
;
}
