{
  final MockEndpoint mockEndpoint1=camelContext.getEndpoint("mock:results1",MockEndpoint.class);
  final MockEndpoint mockEndpoint2=camelContext.getEndpoint("mock:results2",MockEndpoint.class);
  final MockEndpoint mockEndpoint3=camelContext.getEndpoint("mock:results3",MockEndpoint.class);
  mockEndpoint1.expectedMessageCount(2);
  mockEndpoint2.expectedMessageCount(1);
  mockEndpoint3.expectedMessageCount(1);
  ConnectableObservable<Message> route=reactiveCamel.toObservable("direct:start").lift(new CamelOperator(mockEndpoint1)).lift(new CamelOperator(camelContext,"log:foo")).debounce(1,TimeUnit.SECONDS).lift(reactiveCamel.to(mockEndpoint2)).lift(reactiveCamel.to("mock:results3")).publish();
  Subscription routeSubscription=route.connect();
  producerTemplate.sendBody("direct:start","<test/>");
  producerTemplate.sendBody("direct:start","<test/>");
  mockEndpoint1.assertIsSatisfied();
  mockEndpoint2.assertIsSatisfied();
  mockEndpoint3.assertIsSatisfied();
  routeSubscription.unsubscribe();
}
