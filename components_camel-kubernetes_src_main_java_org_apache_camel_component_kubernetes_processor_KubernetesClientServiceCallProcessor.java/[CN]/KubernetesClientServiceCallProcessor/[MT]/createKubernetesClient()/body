{
  LOG.debug("Create Kubernetes client with the following Configuration: " + configuration.toString());
  ConfigBuilder builder=new ConfigBuilder();
  builder.withMasterUrl(configuration.getMasterUrl());
  if ((ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword())) && ObjectHelper.isEmpty(configuration.getOauthToken())) {
    builder.withUsername(configuration.getUsername());
    builder.withPassword(configuration.getPassword());
  }
 else {
    builder.withOauthToken(configuration.getOauthToken());
  }
  if (ObjectHelper.isNotEmpty(configuration.getCaCertData())) {
    builder.withCaCertData(configuration.getCaCertData());
  }
  if (ObjectHelper.isNotEmpty(configuration.getCaCertFile())) {
    builder.withCaCertFile(configuration.getCaCertFile());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientCertData())) {
    builder.withClientCertData(configuration.getClientCertData());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientCertFile())) {
    builder.withClientCertFile(configuration.getClientCertFile());
  }
  if (ObjectHelper.isNotEmpty(configuration.getApiVersion())) {
    builder.withApiVersion(configuration.getApiVersion());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientKeyAlgo())) {
    builder.withClientKeyAlgo(configuration.getClientKeyAlgo());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientKeyData())) {
    builder.withClientKeyData(configuration.getClientKeyData());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientKeyFile())) {
    builder.withClientKeyFile(configuration.getClientKeyFile());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientKeyPassphrase())) {
    builder.withClientKeyPassphrase(configuration.getClientKeyPassphrase());
  }
  if (ObjectHelper.isNotEmpty(configuration.getTrustCerts())) {
    builder.withTrustCerts(configuration.getTrustCerts());
  }
  Config conf=builder.build();
  return new AutoAdaptableKubernetesClient(conf);
}
