{
  final long priority=1001;
  final int delay=124;
  final long jobId=111;
  endpoint.setCommand(BeanstalkComponent.COMMAND_RELEASE);
  Producer producer=endpoint.createProducer();
  assertNotNull("Producer",producer);
  assertThat("Producer class",producer,instanceOf(BeanstalkProducer.class));
  assertThat("Processor class",((BeanstalkProducer)producer).command,instanceOf(ReleaseCommand.class));
  when(client.release(jobId,priority,delay)).thenReturn(true);
  final Exchange exchange=template.send(endpoint,ExchangePattern.InOnly,new Processor(){
    public void process(    Exchange exchange){
      exchange.getIn().setHeader(Headers.JOB_ID,jobId);
      exchange.getIn().setHeader(Headers.PRIORITY,priority);
      exchange.getIn().setHeader(Headers.DELAY,delay);
    }
  }
);
  assertEquals("Op result",Boolean.TRUE,exchange.getIn().getHeader(Headers.RESULT,Boolean.class));
  assertEquals("Job ID in exchange",Long.valueOf(jobId),exchange.getIn().getHeader(Headers.JOB_ID,Long.class));
  verify(client).release(jobId,priority,delay);
}
