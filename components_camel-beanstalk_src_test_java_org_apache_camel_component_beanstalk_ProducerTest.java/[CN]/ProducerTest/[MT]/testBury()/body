{
  final long priority=BeanstalkComponent.DEFAULT_PRIORITY;
  final long jobId=111;
  endpoint.setCommand(BeanstalkCommand.bury);
  Producer producer=endpoint.createProducer();
  assertNotNull("Producer",producer);
  assertThat("Producer class",producer,instanceOf(BeanstalkProducer.class));
  assertThat("Processor class",((BeanstalkProducer)producer).getCommand(),instanceOf(BuryCommand.class));
  when(client.bury(jobId,priority)).thenReturn(true);
  final Exchange exchange=template.send(endpoint,ExchangePattern.InOnly,new Processor(){
    public void process(    Exchange exchange){
      exchange.getIn().setHeader(Headers.JOB_ID,jobId);
    }
  }
);
  assertEquals("Op result",Boolean.TRUE,exchange.getIn().getHeader(Headers.RESULT,Boolean.class));
  assertEquals("Job ID in exchange",Long.valueOf(jobId),exchange.getIn().getHeader(Headers.JOB_ID,Long.class));
  verify(client).bury(jobId,priority);
}
