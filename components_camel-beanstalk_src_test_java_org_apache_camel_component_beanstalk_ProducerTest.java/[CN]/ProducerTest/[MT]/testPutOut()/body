{
  final long priority=BeanstalkComponent.DEFAULT_PRIORITY;
  final int delay=BeanstalkComponent.DEFAULT_DELAY;
  final int timeToRun=BeanstalkComponent.DEFAULT_TIME_TO_RUN;
  final byte[] payload=Helper.stringToBytes(testMessage);
  final long jobId=111;
  when(client.put(priority,delay,timeToRun,payload)).thenReturn(jobId);
  Producer producer=endpoint.createProducer();
  assertNotNull("Producer",producer);
  assertThat("Producer class",producer,instanceOf(BeanstalkProducer.class));
  assertThat("Processor class",((BeanstalkProducer)producer).command,instanceOf(PutCommand.class));
  final Exchange exchange=template.send(endpoint,ExchangePattern.InOut,new Processor(){
    public void process(    Exchange exchange){
      exchange.getIn().setBody(testMessage);
    }
  }
);
  assertEquals("Job ID in exchange",Long.valueOf(jobId),exchange.getOut().getHeader(Headers.JOB_ID,Long.class));
  verify(client).put(priority,delay,timeToRun,payload);
}
