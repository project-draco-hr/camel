{
  if (systemId == null) {
    throw new IllegalArgumentException(String.format("Resource: %s refers an invalid resource without SystemId." + " Invalid resource has type: %s, namespaceURI: %s, publicId: %s, systemId: %s, baseURI: %s",resourceUri,type,namespaceURI,publicId,systemId,baseURI));
  }
  String resourceURI=null;
  if (baseURI == null) {
    relatedURI=FileUtil.compactPath(getUri(systemId),'/');
    resourceURI=relatedURI;
  }
 else {
    String relatedPath=relatedURIMap.get(baseURI);
    if (relatedPath == null) {
      relatedPath=FileUtil.onlyPath(relatedURI);
      if (relatedPath == null) {
        relatedPath="";
      }
      relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/');
      resourceURI=relatedURI;
      relatedURIMap.put(baseURI,relatedPath);
    }
 else {
      resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/');
      relatedURI=resourceURI;
    }
  }
  return new DefaultLSInput(publicId,systemId,baseURI,resourceURI);
}
