{
  if (accessToken == null) {
    return;
  }
  try {
    String logoutUrl=(instanceUrl == null ? config.getLoginUrl() : instanceUrl) + OAUTH2_REVOKE_PATH + accessToken;
    final Request logoutGet=httpClient.newRequest(logoutUrl).timeout(timeout,TimeUnit.MILLISECONDS);
    final ContentResponse logoutResponse=logoutGet.send();
    final int statusCode=logoutResponse.getStatus();
    final String reason=logoutResponse.getReason();
    if (statusCode == HttpStatus.OK_200) {
      LOG.info("Logout successful");
    }
 else {
      throw new SalesforceException(String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason),statusCode);
    }
  }
 catch (  InterruptedException e) {
    String msg="Logout error: " + e.getMessage();
    throw new SalesforceException(msg,e);
  }
catch (  ExecutionException e) {
    final Throwable ex=e.getCause();
    throw new SalesforceException("Unexpected logout exception: " + ex.getMessage(),ex);
  }
catch (  TimeoutException e) {
    throw new SalesforceException("Logout request TIMEOUT!",null);
  }
 finally {
    accessToken=null;
    instanceUrl=null;
    for (    SalesforceSessionListener listener : listeners) {
      try {
        listener.onLogout();
      }
 catch (      Throwable t) {
        LOG.warn("Unexpected error from listener {}: {}",listener,t.getMessage());
      }
    }
  }
}
