{
  final Processor detour=this.createChildProcessor(routeContext,true);
  routeContext.getCamelContext().addRegisterEndpointCallback(new EndpointStrategy(){
    public Endpoint registerEndpoint(    String uri,    Endpoint endpoint){
      if (endpoint instanceof InterceptSendToEndpoint) {
        return endpoint;
      }
 else       if (getUri() == null || EndpointHelper.matchEndpoint(uri,getUri())) {
        boolean skip=isSkipSendToOriginalEndpoint();
        InterceptSendToEndpoint proxy=new InterceptSendToEndpoint(endpoint,skip);
        proxy.setDetour(detour);
        return proxy;
      }
 else {
        return endpoint;
      }
    }
  }
);
  RouteDefinition route=routeContext.getRoute();
  List<ProcessorDefinition> outputs=route.getOutputs();
  outputs.remove(this);
  return new InterceptEndpointProcessor(uri,detour);
}
