{
  ExecutorService executor=Executors.newFixedThreadPool(poolSize);
  Map<Integer,Future<Object>> responses=new ConcurrentHashMap<Integer,Future<Object>>();
  for (int i=0; i < files; i++) {
    final int index=i;
    Future<Object> out=executor.submit(new Callable<Object>(){
      public Object call() throws Exception {
        return template.requestBody("http4://" + getHostName() + ":"+ getPort(),null,String.class);
      }
    }
);
    responses.put(index,out);
  }
  assertEquals(files,responses.size());
  Set<Object> unique=new HashSet<Object>();
  for (  Future<Object> future : responses.values()) {
    unique.add(future.get());
  }
  assertEquals("Should be " + files + " unique responses",files,unique.size());
  executor.shutdownNow();
}
