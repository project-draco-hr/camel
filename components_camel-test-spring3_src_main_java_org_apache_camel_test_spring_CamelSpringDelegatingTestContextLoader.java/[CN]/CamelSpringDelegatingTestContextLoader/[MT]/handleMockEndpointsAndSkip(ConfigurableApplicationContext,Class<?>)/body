{
  if (testClass.isAnnotationPresent(MockEndpointsAndSkip.class)) {
    final String mockEndpoints=testClass.getAnnotation(MockEndpointsAndSkip.class).value();
    CamelSpringTestHelper.doToSpringCamelContexts(context,new DoToSpringCamelContextsStrategy(){
      public void execute(      String contextName,      SpringCamelContext camelContext) throws Exception {
        String mockEndpointsValue=camelContext.resolvePropertyPlaceholders(mockEndpoints);
        logger.info("Enabling auto mocking and skipping of endpoints matching pattern [{}] on CamelContext with name [{}].",mockEndpointsValue,contextName);
        camelContext.addRegisterEndpointCallback(new InterceptSendToMockEndpointStrategy(mockEndpointsValue,true));
      }
    }
);
  }
}
