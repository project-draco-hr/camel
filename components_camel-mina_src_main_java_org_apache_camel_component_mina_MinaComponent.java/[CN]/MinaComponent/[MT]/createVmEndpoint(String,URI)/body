{
  IoAcceptor acceptor=new VmPipeAcceptor();
  SocketAddress address=new VmPipeAddress(connectUri.getPort());
  IoConnector connector=new VmPipeConnector();
  configureCodecFactory("MinaProducer",connector.getDefaultConfig(),textline,encoding,codec);
  if (minaLogger) {
    connector.getFilterChain().addLast("logger",new LoggingFilter());
  }
  configureCodecFactory("MinaConsumer",acceptor.getDefaultConfig(),textline,encoding,codec);
  if (minaLogger) {
    acceptor.getFilterChain().addLast("logger",new LoggingFilter());
  }
  MinaEndpoint endpoint=new MinaEndpoint(uri,this,address,acceptor,null,connector,null,false,timeout,transferExchange,sync);
  if (encoding != null) {
    endpoint.setCharsetName(getEncodingParameter("MinaProducer",encoding).name());
  }
  if (sync) {
    endpoint.setExchangePattern(ExchangePattern.InOut);
  }
 else {
    endpoint.setExchangePattern(ExchangePattern.InOnly);
  }
  return endpoint;
}
