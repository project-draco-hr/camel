{
  MockEndpoint mock=getMockEndpoint("mock:beanio-unmarshal");
  mock.expectedMessageCount(2);
  template.sendBody("direct:unmarshal",FIXED_DATA);
  mock.assertIsSatisfied();
  List<Exchange> exchanges=mock.getExchanges();
  if (verbose) {
    for (    Exchange exchange : exchanges) {
      Object body=exchange.getIn().getBody();
      log.info("received message {} of class {}",body,body.getClass().getName());
    }
  }
  List<Map> results=new ArrayList<Map>();
  for (  Exchange exchange : exchanges) {
    Map body=exchange.getIn().getBody(Map.class);
    if (body != null) {
      results.add(body);
    }
  }
  assertRecord(results,0,"James","Strachan",22);
  assertRecord(results,1,"Claus","Ibsen",21);
}
