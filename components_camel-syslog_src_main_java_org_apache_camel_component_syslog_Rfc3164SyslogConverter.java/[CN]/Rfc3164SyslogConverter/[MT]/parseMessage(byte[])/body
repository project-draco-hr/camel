{
  ByteBuffer byteBuffer=ByteBuffer.allocate(bytes.length);
  byteBuffer.put(bytes);
  byteBuffer.rewind();
  SyslogMessage syslogMessage=new SyslogMessage();
  Character charFound=(char)byteBuffer.get();
  while (charFound != '<') {
    charFound=(char)byteBuffer.get();
  }
  char priChar=0;
  if (charFound == '<') {
    int facility=0;
    while (Character.isDigit(priChar=(char)(byteBuffer.get() & 0xff))) {
      facility*=10;
      facility+=Character.digit(priChar,10);
    }
    syslogMessage.setFacility(SyslogFacility.values()[facility >> 3]);
    syslogMessage.setSeverity(SyslogSeverity.values()[facility & 0x07]);
  }
  if (priChar != '>') {
    LOG.error("Invalid syslog message, missing a > in the Facility/Priority part");
  }
  char[] month=new char[3];
  for (int i=0; i < 3; i++) {
    month[i]=(char)(byteBuffer.get() & 0xff);
  }
  charFound=(char)byteBuffer.get();
  if (charFound != ' ') {
    LOG.error("Invalid syslog message, missing a mandatory space after month");
  }
  charFound=(char)(byteBuffer.get() & 0xff);
  int day=0;
  if (charFound == ' ') {
  }
 else {
    day*=10;
    day+=Character.digit(charFound,10);
  }
  while (Character.isDigit(charFound=(char)(byteBuffer.get() & 0xff))) {
    day*=10;
    day+=Character.digit(charFound,10);
  }
  int hour=0;
  while (Character.isDigit(charFound=(char)(byteBuffer.get() & 0xff))) {
    hour*=10;
    hour+=Character.digit(charFound,10);
  }
  int minute=0;
  while (Character.isDigit(charFound=(char)(byteBuffer.get() & 0xff))) {
    minute*=10;
    minute+=Character.digit(charFound,10);
  }
  int second=0;
  while (Character.isDigit(charFound=(char)(byteBuffer.get() & 0xff))) {
    second*=10;
    second+=Character.digit(charFound,10);
  }
  StringBuilder host=new StringBuilder();
  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {
    host.append(charFound);
  }
  syslogMessage.setHostname(host.toString());
  StringBuilder msg=new StringBuilder();
  while (byteBuffer.hasRemaining()) {
    charFound=(char)(byteBuffer.get() & 0xff);
    msg.append(charFound);
  }
  Calendar calendar=new GregorianCalendar();
  calendar.set(Calendar.MONTH,monthValueMap.get(String.valueOf(month).toLowerCase()).ordinal());
  calendar.set(Calendar.DAY_OF_MONTH,day);
  calendar.set(Calendar.HOUR_OF_DAY,hour);
  calendar.set(Calendar.MINUTE,minute);
  calendar.set(Calendar.SECOND,second);
  syslogMessage.setTimestamp(calendar.getTime());
  syslogMessage.setLogMessage(msg.toString());
  if (LOG.isTraceEnabled()) {
    LOG.trace("Syslog message : " + syslogMessage.toString());
  }
  return syslogMessage;
}
