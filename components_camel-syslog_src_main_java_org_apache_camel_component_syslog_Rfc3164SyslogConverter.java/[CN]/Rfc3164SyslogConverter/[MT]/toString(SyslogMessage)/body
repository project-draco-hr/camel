{
  StringBuilder sbr=new StringBuilder();
  sbr.append("<");
  if (message.getFacility() == null) {
    message.setFacility(SyslogFacility.USER);
  }
  if (message.getSeverity() == null) {
    message.setSeverity(SyslogSeverity.INFO);
  }
  if (message.getHostname() == null) {
    try {
      message.setHostname(InetAddress.getLocalHost().toString());
    }
 catch (    UnknownHostException e) {
      message.setHostname("UNKNOWN_HOST");
    }
  }
  sbr.append(message.getFacility().ordinal() * 8 + message.getSeverity().ordinal());
  sbr.append(">");
  if (message.getTimestamp() == null) {
    message.setTimestamp(new Date());
  }
  Calendar cal=GregorianCalendar.getInstance();
  cal.setTime(message.getTimestamp());
  String firstLetter=MONTHS.values()[cal.get(Calendar.MONTH)].toString().substring(0,1);
  String remainder=MONTHS.values()[cal.get(Calendar.MONTH)].toString().substring(1);
  String capitalized=firstLetter.toUpperCase() + remainder.toLowerCase();
  sbr.append(capitalized);
  sbr.append(" ");
  if (cal.get(Calendar.DAY_OF_MONTH) < 10) {
    sbr.append(" ").append(cal.get(Calendar.DAY_OF_MONTH));
  }
 else {
    sbr.append(cal.get(Calendar.DAY_OF_MONTH));
  }
  sbr.append(" ");
  if (cal.get(Calendar.HOUR_OF_DAY) < 10) {
    sbr.append("0").append(cal.get(Calendar.HOUR_OF_DAY));
  }
 else {
    sbr.append(cal.get(Calendar.HOUR_OF_DAY));
  }
  sbr.append(":");
  if (cal.get(Calendar.MINUTE) < 10) {
    sbr.append("0").append(cal.get(Calendar.MINUTE));
  }
 else {
    sbr.append(cal.get(Calendar.MINUTE));
  }
  sbr.append(":");
  if (cal.get(Calendar.SECOND) < 10) {
    sbr.append("0").append(cal.get(Calendar.SECOND));
  }
 else {
    sbr.append(cal.get(Calendar.SECOND));
  }
  sbr.append(" ");
  sbr.append(message.getHostname());
  sbr.append(" ");
  sbr.append(message.getLogMessage());
  return sbr.toString();
}
