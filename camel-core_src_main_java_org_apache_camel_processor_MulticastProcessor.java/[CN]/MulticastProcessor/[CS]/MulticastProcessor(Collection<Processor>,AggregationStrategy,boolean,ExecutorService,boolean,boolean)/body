{
  notNull(processors,"processors");
  this.processors=processors;
  this.aggregationStrategy=aggregationStrategy;
  this.isParallelProcessing=parallelProcessing;
  this.executorService=executorService;
  this.streaming=streaming;
  this.stopOnException=stopOnException;
  if (isParallelProcessing()) {
    if (this.executorService == null) {
      this.executorService=ExecutorServiceHelper.newScheduledThreadPool(DEFAULT_THREADPOOL_SIZE,"Multicast",true);
    }
  }
}
