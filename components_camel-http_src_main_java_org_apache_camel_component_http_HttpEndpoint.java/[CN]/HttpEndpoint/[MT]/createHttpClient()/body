{
  ObjectHelper.notNull(clientParams,"clientParams");
  ObjectHelper.notNull(httpConnectionManager,"httpConnectionManager");
  HttpClient answer=new HttpClient(getClientParams());
  if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {
    String host=getCamelContext().getProperty("http.proxyHost");
    int port=Integer.parseInt(getCamelContext().getProperty("http.proxyPort"));
    LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: {} port: {}",host,port);
    answer.getHostConfiguration().setProxy(host,port);
  }
  if (getProxyHost() != null) {
    LOG.debug("Using proxy: {}:{}",getProxyHost(),getProxyPort());
    answer.getHostConfiguration().setProxy(getProxyHost(),getProxyPort());
  }
  if (getAuthMethodPriority() != null) {
    List<String> authPrefs=new ArrayList<String>();
    Iterator<?> it=getCamelContext().getTypeConverter().convertTo(Iterator.class,getAuthMethodPriority());
    int i=1;
    while (it.hasNext()) {
      Object value=it.next();
      AuthMethod auth=getCamelContext().getTypeConverter().convertTo(AuthMethod.class,value);
      if (auth == null) {
        throw new IllegalArgumentException("Unknown authMethod: " + value + " in authMethodPriority: "+ getAuthMethodPriority());
      }
      LOG.debug("Using authSchemePriority #{}: {}",i,auth);
      authPrefs.add(auth.name());
      i++;
    }
    if (!authPrefs.isEmpty()) {
      answer.getParams().setParameter(AuthPolicy.AUTH_SCHEME_PRIORITY,authPrefs);
    }
  }
  answer.setHttpConnectionManager(httpConnectionManager);
  HttpClientConfigurer configurer=getHttpClientConfigurer();
  if (configurer != null) {
    configurer.configureHttpClient(answer);
  }
  return answer;
}
