{
  ObjectHelper.notNull(clientParams,"clientParams");
  ObjectHelper.notNull(httpConnectionManager,"httpConnectionManager");
  HttpClient answer=new HttpClient(getClientParams());
  if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {
    String host=getCamelContext().getProperties().get("http.proxyHost");
    int port=Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"));
    if (LOG.isDebugEnabled()) {
      LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: " + host + " port: "+ port);
    }
    answer.getHostConfiguration().setProxy(host,port);
  }
  if (proxyHost != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Using proxy: " + proxyHost + ":"+ proxyPort);
    }
    answer.getHostConfiguration().setProxy(proxyHost,proxyPort);
  }
  if (authMethodPriority != null) {
    List<String> authPrefs=new ArrayList<String>();
    Iterator it=getCamelContext().getTypeConverter().convertTo(Iterator.class,authMethodPriority);
    int i=1;
    while (it.hasNext()) {
      Object value=it.next();
      AuthMethod auth=getCamelContext().getTypeConverter().convertTo(AuthMethod.class,value);
      if (auth == null) {
        throw new IllegalArgumentException("Unknown authMethod: " + value + " in authMethodPriority: "+ authMethodPriority);
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Using authSchemePriority #" + i + ": "+ auth);
      }
      authPrefs.add(auth.name());
      i++;
    }
    if (!authPrefs.isEmpty()) {
      answer.getParams().setParameter(AuthPolicy.AUTH_SCHEME_PRIORITY,authPrefs);
    }
  }
  answer.setHttpConnectionManager(httpConnectionManager);
  HttpClientConfigurer configurer=getHttpClientConfigurer();
  if (configurer != null) {
    configurer.configureHttpClient(answer);
  }
  return answer;
}
