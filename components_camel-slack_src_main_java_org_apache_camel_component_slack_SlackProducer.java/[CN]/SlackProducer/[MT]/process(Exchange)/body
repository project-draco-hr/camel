{
  HttpClient client=HttpClientBuilder.create().build();
  HttpPost httpPost=new HttpPost(slackEndpoint.getWebhookUrl());
  SlackMessage slackMessage;
  Object payload=exchange.getIn().getBody();
  if (payload instanceof SlackMessage) {
    slackMessage=(SlackMessage)payload;
  }
 else {
    slackMessage=new SlackMessage();
    slackMessage.setText(exchange.getIn().getBody(String.class));
  }
  slackMessage.setChannel(slackEndpoint.getChannel());
  slackMessage.setUsername(slackEndpoint.getUsername());
  slackMessage.setIconUrl(slackEndpoint.getIconUrl());
  slackMessage.setIconEmoji(slackEndpoint.getIconEmoji());
  String charset=IOHelper.getCharsetName(exchange,true);
  String json=asJson(slackMessage);
  StringEntity body=new StringEntity(json,charset);
  httpPost.setEntity(body);
  HttpResponse response=client.execute(httpPost);
  if (response.getStatusLine().getStatusCode() < 200 || response.getStatusLine().getStatusCode() > 299) {
    throw new CamelExchangeException("Error POSTing to Slack API: " + response.toString(),exchange);
  }
}
