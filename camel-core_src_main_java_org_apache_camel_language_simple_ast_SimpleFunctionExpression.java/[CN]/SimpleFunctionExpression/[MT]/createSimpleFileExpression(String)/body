{
  if (ObjectHelper.equal(remainder,"name")) {
    return ExpressionBuilder.fileNameExpression();
  }
 else   if (ObjectHelper.equal(remainder,"name.noext")) {
    return ExpressionBuilder.fileNameNoExtensionExpression();
  }
 else   if (ObjectHelper.equal(remainder,"name.noext.single")) {
    return ExpressionBuilder.fileNameNoExtensionSingleExpression();
  }
 else   if (ObjectHelper.equal(remainder,"name.ext") || ObjectHelper.equal(remainder,"ext")) {
    return ExpressionBuilder.fileExtensionExpression();
  }
 else   if (ObjectHelper.equal(remainder,"name.ext.single")) {
    return ExpressionBuilder.fileExtensionSingleExpression();
  }
 else   if (ObjectHelper.equal(remainder,"onlyname")) {
    return ExpressionBuilder.fileOnlyNameExpression();
  }
 else   if (ObjectHelper.equal(remainder,"onlyname.noext")) {
    return ExpressionBuilder.fileOnlyNameNoExtensionExpression();
  }
 else   if (ObjectHelper.equal(remainder,"onlyname.noext.single")) {
    return ExpressionBuilder.fileOnlyNameNoExtensionSingleExpression();
  }
 else   if (ObjectHelper.equal(remainder,"parent")) {
    return ExpressionBuilder.fileParentExpression();
  }
 else   if (ObjectHelper.equal(remainder,"path")) {
    return ExpressionBuilder.filePathExpression();
  }
 else   if (ObjectHelper.equal(remainder,"absolute")) {
    return ExpressionBuilder.fileAbsoluteExpression();
  }
 else   if (ObjectHelper.equal(remainder,"absolute.path")) {
    return ExpressionBuilder.fileAbsolutePathExpression();
  }
 else   if (ObjectHelper.equal(remainder,"length") || ObjectHelper.equal(remainder,"size")) {
    return ExpressionBuilder.fileSizeExpression();
  }
 else   if (ObjectHelper.equal(remainder,"modified")) {
    return ExpressionBuilder.fileLastModifiedExpression();
  }
  throw new SimpleParserException("Unknown file language syntax: " + remainder,token.getIndex());
}
