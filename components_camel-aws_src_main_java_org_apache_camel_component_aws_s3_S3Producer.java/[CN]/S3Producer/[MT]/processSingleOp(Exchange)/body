{
  ObjectMetadata objectMetadata=determineMetadata(exchange);
  File filePayload=null;
  InputStream is=null;
  Object obj=exchange.getIn().getMandatoryBody();
  PutObjectRequest putObjectRequest=null;
  if (obj instanceof WrappedFile) {
    obj=((WrappedFile<?>)obj).getFile();
  }
  if (obj instanceof File) {
    filePayload=(File)obj;
    is=new FileInputStream(filePayload);
  }
 else {
    is=exchange.getIn().getMandatoryBody(InputStream.class);
  }
  putObjectRequest=new PutObjectRequest(getConfiguration().getBucketName(),determineKey(exchange),is,objectMetadata);
  String storageClass=determineStorageClass(exchange);
  if (storageClass != null) {
    putObjectRequest.setStorageClass(storageClass);
  }
  String cannedAcl=exchange.getIn().getHeader(S3Constants.CANNED_ACL,String.class);
  if (cannedAcl != null) {
    CannedAccessControlList objectAcl=CannedAccessControlList.valueOf(cannedAcl);
    putObjectRequest.setCannedAcl(objectAcl);
  }
  AccessControlList acl=exchange.getIn().getHeader(S3Constants.ACL,AccessControlList.class);
  if (acl != null) {
    putObjectRequest.setAccessControlList(acl);
  }
  LOG.trace("Put object [{}] from exchange [{}]...",putObjectRequest,exchange);
  PutObjectResult putObjectResult=getEndpoint().getS3Client().putObject(putObjectRequest);
  LOG.trace("Received result [{}]",putObjectResult);
  Message message=getMessageForResponse(exchange);
  message.setHeader(S3Constants.E_TAG,putObjectResult.getETag());
  if (putObjectResult.getVersionId() != null) {
    message.setHeader(S3Constants.VERSION_ID,putObjectResult.getVersionId());
  }
  if (getConfiguration().isDeleteAfterWrite() && filePayload != null) {
    IOHelper.close(putObjectRequest.getInputStream());
    IOHelper.close(is);
    FileUtil.deleteFile(filePayload);
  }
}
