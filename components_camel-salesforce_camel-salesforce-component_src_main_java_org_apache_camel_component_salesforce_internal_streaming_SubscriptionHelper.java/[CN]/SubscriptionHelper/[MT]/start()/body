{
  if (started) {
    return;
  }
  if (handshakeListener == null) {
    handshakeListener=new ClientSessionChannel.MessageListener(){
      public void onMessage(      ClientSessionChannel channel,      Message message){
        LOG.debug("[CHANNEL:META_HANDSHAKE]: {}",message);
        if (!message.isSuccessful()) {
          String error=(String)message.get(ERROR_FIELD);
          if (error != null) {
            handshakeError=error;
          }
          Exception exception=(Exception)message.get(EXCEPTION_FIELD);
          if (exception != null) {
            handshakeException=exception;
          }
        }
 else         if (!listenerMap.isEmpty()) {
          reconnecting=true;
        }
      }
    }
;
  }
  client.getChannel(META_HANDSHAKE).addListener(handshakeListener);
  if (connectListener == null) {
    connectListener=new ClientSessionChannel.MessageListener(){
      public void onMessage(      ClientSessionChannel channel,      Message message){
        LOG.debug("[CHANNEL:META_CONNECT]: {}",message);
        if (!message.isSuccessful()) {
          String error=(String)message.get(ERROR_FIELD);
          if (error != null) {
            connectError=error;
          }
        }
 else         if (reconnecting) {
          reconnecting=false;
          LOG.debug("Refreshing subscriptions to {} channels on reconnect",listenerMap.size());
          final Map<SalesforceConsumer,ClientSessionChannel.MessageListener> map=new HashMap<SalesforceConsumer,ClientSessionChannel.MessageListener>();
          map.putAll(listenerMap);
          listenerMap.clear();
          for (          Map.Entry<SalesforceConsumer,ClientSessionChannel.MessageListener> entry : map.entrySet()) {
            final SalesforceConsumer consumer=entry.getKey();
            final String topicName=consumer.getTopicName();
            try {
              subscribe(topicName,consumer);
            }
 catch (            CamelException e) {
              consumer.handleException(String.format("Error refreshing subscription to topic [%s]: %s",topicName,e.getMessage()),e);
            }
          }
        }
      }
    }
;
  }
  client.getChannel(META_CONNECT).addListener(connectListener);
  client.handshake();
  final long waitMs=MILLISECONDS.convert(CONNECT_TIMEOUT,SECONDS);
  if (!client.waitFor(waitMs,BayeuxClient.State.CONNECTED)) {
    if (handshakeException != null) {
      throw new CamelException(String.format("Exception during HANDSHAKE: %s",handshakeException.getMessage()),handshakeException);
    }
 else     if (handshakeError != null) {
      throw new CamelException(String.format("Error during HANDSHAKE: %s",handshakeError));
    }
 else     if (connectError != null) {
      throw new CamelException(String.format("Error during CONNECT: %s",connectError));
    }
 else {
      throw new CamelException(String.format("Handshake request timeout after %s seconds",CONNECT_TIMEOUT));
    }
  }
  started=true;
}
