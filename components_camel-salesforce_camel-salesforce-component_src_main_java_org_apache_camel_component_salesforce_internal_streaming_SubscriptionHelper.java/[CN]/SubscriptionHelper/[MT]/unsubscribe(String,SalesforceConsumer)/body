{
  final String channelName=getChannelName(topicName);
  final CountDownLatch latch=new CountDownLatch(1);
  final String[] unsubscribeError={null};
  final Exception[] unsubscribeFailure={null};
  final ClientSessionChannel.MessageListener unsubscribeListener=new ClientSessionChannel.MessageListener(){
    public void onMessage(    ClientSessionChannel channel,    Message message){
      LOG.debug("[CHANNEL:META_UNSUBSCRIBE]: {}",message);
      Object subscription=message.get(SUBSCRIPTION_FIELD);
      if (subscription != null) {
        String unsubscribedChannelName=subscription.toString();
        if (channelName.equals(unsubscribedChannelName)) {
          if (!message.isSuccessful()) {
            unsubscribeError[0]=(String)message.get(ERROR_FIELD);
            unsubscribeFailure[0]=getFailure(message);
          }
 else {
            LOG.info("Unsubscribed from channel {}",unsubscribedChannelName);
          }
          latch.countDown();
        }
      }
    }
  }
;
  client.getChannel(META_UNSUBSCRIBE).addListener(unsubscribeListener);
  try {
    final ClientSessionChannel.MessageListener listener=listenerMap.remove(consumer);
    if (listener != null) {
      LOG.info("Unsubscribing from channel {}...",channelName);
      final ClientSessionChannel clientChannel=client.getChannel(channelName);
      clientChannel.unsubscribe(listener);
      try {
        if (!latch.await(CHANNEL_TIMEOUT,SECONDS)) {
          String message;
          if (unsubscribeFailure[0] != null) {
            message=String.format("Error unsubscribing from topic %s: %s",topicName,unsubscribeFailure[0].getMessage());
          }
 else           if (unsubscribeError[0] != null) {
            message=String.format("Error unsubscribing from topic %s: %s",topicName,unsubscribeError[0]);
          }
 else {
            message=String.format("Timeout error unsubscribing from topic %s after %s seconds",topicName,CHANNEL_TIMEOUT);
          }
          throw new CamelException(message,unsubscribeFailure[0]);
        }
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
      }
    }
  }
  finally {
    client.getChannel(META_UNSUBSCRIBE).removeListener(unsubscribeListener);
  }
}
