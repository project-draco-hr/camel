{
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  assertEquals(0,events.size());
  notifier=new EventNotifierSupport(){
    public void notify(    EventObject event) throws Exception {
      events.add(event);
    }
    public boolean isEnabled(    EventObject event){
      return true;
    }
    @Override protected void doStart() throws Exception {
    }
    @Override protected void doStop() throws Exception {
    }
  }
;
  context.addService(notifier);
  context.getManagementStrategy().addEventNotifier(notifier);
  resetMocks();
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Bye World");
  assertMockEndpointsSatisfied();
  assertEquals(5,events.size());
  context.getManagementStrategy().removeEventNotifier(notifier);
  resetMocks();
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hi World");
  assertMockEndpointsSatisfied();
  assertEquals(5,events.size());
}
