{
  Class<?> clazz=target.getClass();
  Set<Method> setters=findSetterMethods(clazz,name,value,allowBuilderPattern);
  if (setters.isEmpty()) {
    return false;
  }
  Exception typeConversionFailed=null;
  for (  Method setter : setters) {
    try {
      return setProperty(typeConverter,target,setter,value);
    }
 catch (    NoTypeConversionAvailableException e) {
      typeConversionFailed=e;
    }
catch (    IllegalArgumentException e) {
      typeConversionFailed=e;
    }
    if (LOG.isTraceEnabled()) {
      LOG.trace("Setter \"{}\" with parameter type \"{}\" could not be used for type conversions of {}",new Object[]{setter,setter.getParameterTypes()[0],value});
    }
  }
  if (typeConversionFailed != null) {
    throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());
  }
 else {
    return false;
  }
}
