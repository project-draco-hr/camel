{
  if (LOG.isTraceEnabled()) {
    LOG.trace("Connecting using FTPClient: " + client);
  }
  String host=config.getHost();
  int port=config.getPort();
  String username=config.getUsername();
  FtpConfiguration ftpConfig=(FtpConfiguration)config;
  if (ftpConfig.getFtpClientConfig() != null) {
    LOG.trace("Configuring FTPClient with config: " + ftpConfig.getFtpClientConfig());
    client.configure(ftpConfig.getFtpClientConfig());
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Connecting to " + config.remoteServerInformation());
  }
  try {
    client.connect(host,port);
  }
 catch (  IOException e) {
    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);
  }
  if (config.isPassiveMode()) {
    LOG.trace("Using passive mode connections");
    client.enterLocalPassiveMode();
  }
  try {
    boolean login;
    if (username != null) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Attempting to login user: " + username + " using password: "+ config.getPassword());
      }
      login=client.login(username,config.getPassword());
    }
 else {
      LOG.trace("Attempting to login anonymous");
      login=client.login("anonymous",null);
    }
    if (LOG.isTraceEnabled()) {
      LOG.trace("User " + (username != null ? username : "anonymous") + " logged in: "+ login);
    }
    if (!login) {
      throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString());
    }
    client.setFileType(config.isBinary() ? FTPClient.BINARY_FILE_TYPE : FTPClient.ASCII_FILE_TYPE);
  }
 catch (  IOException e) {
    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);
  }
  return true;
}
