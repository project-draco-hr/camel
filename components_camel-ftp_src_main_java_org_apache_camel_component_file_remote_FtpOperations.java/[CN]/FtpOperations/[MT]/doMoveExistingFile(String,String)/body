{
  Exchange dummy=endpoint.createExchange();
  String parent=null;
  String onlyName=FileUtil.stripPath(targetName);
  dummy.getIn().setHeader(Exchange.FILE_NAME,targetName);
  dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY,onlyName);
  dummy.getIn().setHeader(Exchange.FILE_PARENT,parent);
  String to=endpoint.getMoveExisting().evaluate(dummy,String.class);
  to=FileUtil.stripLeadingSeparator(to);
  to=endpoint.getConfiguration().normalizePath(to);
  if (ObjectHelper.isEmpty(to)) {
    throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name);
  }
  String dir=FileUtil.onlyPath(to);
  if (dir != null) {
    buildDirectory(dir,false);
  }
  if (existsFile(to)) {
    if (endpoint.isEagerDeleteTargetFile()) {
      log.trace("Deleting existing file: {}",to);
      boolean result;
      try {
        result=client.deleteFile(to);
        if (!result) {
          throw new GenericFileOperationFailedException("Cannot delete file: " + to);
        }
      }
 catch (      IOException e) {
        throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Cannot delete file: " + to,e);
      }
    }
 else {
      throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: "+ to+ " as there already exists a file: "+ to);
    }
  }
  log.trace("Moving existing file: {} to: {}",name,to);
  if (!renameFile(targetName,to)) {
    throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: "+ to);
  }
}
