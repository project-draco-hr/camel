{
  File temp;
  File local=new File(endpoint.getLocalWorkDirectory());
  OutputStream os;
  try {
    String relativeName=exchange.getGenericFile().getRelativeFileName();
    temp=new File(local,relativeName + ".inprogress");
    local=new File(local,relativeName);
    local.mkdirs();
    if (temp.exists()) {
      if (!temp.delete()) {
        throw new RemoteFileOperationFailedException("Cannot delete existing local work file: " + temp);
      }
    }
    if (local.exists()) {
      if (!local.delete()) {
        throw new RemoteFileOperationFailedException("Cannot delete existing local work file: " + local);
      }
    }
    if (!temp.createNewFile()) {
      throw new RemoteFileOperationFailedException("Cannot create new local work file: " + temp);
    }
    os=new FileOutputStream(temp);
    exchange.getIn().setHeader("CamelFileLocalWorkPath",local.getPath());
  }
 catch (  Exception e) {
    throw new RemoteFileOperationFailedException("Cannot create new local work file: " + local);
  }
  boolean result;
  try {
    GenericFile<FTPFile> target=exchange.getGenericFile();
    target.setBody(local);
    result=client.retrieveFile(name,os);
    if (!temp.renameTo(local)) {
      throw new RemoteFileOperationFailedException("Cannot rename local work file from: " + temp + " to: "+ local);
    }
  }
 catch (  IOException e) {
    throw new RemoteFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);
  }
 finally {
    ObjectHelper.close(os,"retrieve: " + name,LOG);
  }
  return result;
}
