{
  in.setBody("Body text");
  in.setHeader("Content-Type","text/plain");
  in.setHeader("included","must be included");
  in.setHeader("excluded","should not be there");
  in.setHeader("x-foo","any value");
  in.setHeader("x-bar","also there");
  in.setHeader("xbar","should not be there");
  addAttachment("application/octet-stream","foobar","attachment.bin");
  Exchange intermediate=template.send("direct:marshalonlyinlineheaders",exchange);
  String bodyStr=intermediate.getOut().getBody(String.class);
  assertThat(bodyStr,containsString("must be included"));
  assertThat(bodyStr,not(containsString("should not be there")));
  assertThat(bodyStr,containsString("x-foo:"));
  assertThat(bodyStr,containsString("x-bar:"));
  assertThat(bodyStr,not(containsString("xbar")));
  intermediate.setIn(intermediate.getOut());
  intermediate.setOut(null);
  intermediate.getIn().removeHeaders(".*");
  intermediate.getIn().setHeader("included","should be replaced");
  Exchange out=template.send("direct:unmarshalonlyinlineheaders",intermediate);
  assertEquals("Body text",out.getOut().getBody(String.class));
  assertEquals("must be included",out.getOut().getHeader("included"));
  assertNull(out.getOut().getHeader("excluded"));
  assertEquals("any value",out.getOut().getHeader("x-foo"));
  assertEquals("also there",out.getOut().getHeader("x-bar"));
}
