{
  this.name=name;
  this.resultType=resultType;
  if (args.length % 2 != 0) {
    throw new IllegalArgumentException("Invalid parameter list, " + "must be of the form 'Class arg1, String arg1Name, Class arg2, String arg2Name...");
  }
  int nArgs=args.length / 2;
  this.argNames=new ArrayList<String>(nArgs);
  this.argTypes=new ArrayList<Class<?>>(nArgs);
  for (int i=0; i < nArgs; i++) {
    this.argTypes.add((Class<?>)args[i * 2]);
    this.argNames.add((String)args[i * 2 + 1]);
  }
  try {
    this.method=proxyType.getMethod(name,argTypes.toArray(new Class[nArgs]));
  }
 catch (  NoSuchMethodException e) {
    throw new IllegalArgumentException(String.format("Missing method %s %s",name,argTypes.toString().replace('[','(').replace(']',')')),e);
  }
}
