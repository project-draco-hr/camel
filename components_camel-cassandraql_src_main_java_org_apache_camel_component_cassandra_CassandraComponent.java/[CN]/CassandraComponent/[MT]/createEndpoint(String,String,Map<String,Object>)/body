{
  String beanRef=null;
  String hosts=null;
  String port=null;
  String keyspace=null;
  int pos=remaining.lastIndexOf("/");
  if (pos > 0) {
    keyspace=remaining.substring(pos + 1);
    remaining=remaining.substring(0,pos);
  }
  if (remaining.startsWith("bean:")) {
    beanRef=remaining.substring(5);
  }
 else {
    if (remaining.contains(":")) {
      port=ObjectHelper.after(remaining,":");
      hosts=ObjectHelper.before(remaining,":");
    }
 else {
      hosts=remaining;
    }
  }
  ResultSetConversionStrategy rs=null;
  String strategy=getAndRemoveParameter(parameters,"resultSetConversionStrategy",String.class);
  if (strategy != null) {
    rs=ResultSetConversionStrategies.fromName(strategy);
  }
  CassandraEndpoint endpoint=new CassandraEndpoint(uri,this);
  endpoint.setBeanRef(beanRef);
  endpoint.setHosts(hosts);
  if (port != null) {
    int num=CamelContextHelper.parseInteger(getCamelContext(),port);
    endpoint.setPort(num);
  }
  endpoint.setKeyspace(keyspace);
  if (rs != null) {
    endpoint.setResultSetConversionStrategy(rs);
  }
  setProperties(endpoint,parameters);
  return endpoint;
}
