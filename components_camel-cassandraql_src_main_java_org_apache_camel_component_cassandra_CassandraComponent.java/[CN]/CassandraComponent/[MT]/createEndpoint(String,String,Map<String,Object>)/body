{
  Cluster cluster;
  Session session;
  String keyspace;
  Matcher beanRefMatcher=BEAN_REF_PATTERN.matcher(remaining);
  if (beanRefMatcher.matches()) {
    String beanRefName=beanRefMatcher.group(1);
    keyspace=beanRefMatcher.group(2);
    Object bean=EndpointHelper.resolveParameter(getCamelContext(),"#" + beanRefName,Object.class);
    if (bean instanceof Session) {
      session=(Session)bean;
      cluster=session.getCluster();
      keyspace=session.getLoggedKeyspace();
    }
 else     if (bean instanceof Cluster) {
      cluster=(Cluster)bean;
      session=null;
    }
 else {
      throw new IllegalArgumentException("CQL Bean type should be of type Session or Cluster but was " + bean);
    }
  }
 else {
    cluster=clusterBuilder(remaining,parameters).build();
    session=null;
    keyspace=getAndRemoveParameter(parameters,"keyspace",String.class);
  }
  Endpoint endpoint=new CassandraEndpoint(uri,this,cluster,session,keyspace);
  setProperties(endpoint,parameters);
  return endpoint;
}
