{
  GenericFileExclusiveReadLockStrategy<File> strategy=(GenericFileExclusiveReadLockStrategy<File>)params.get("exclusiveReadLockStrategy");
  if (strategy != null) {
    return strategy;
  }
  String readLock=(String)params.get("readLock");
  if (ObjectHelper.isNotEmpty(readLock)) {
    if ("none".equals(readLock) || "false".equals(readLock)) {
      return null;
    }
 else     if ("markerFile".equals(readLock)) {
      return new MarkerFileExclusiveReadLockStrategy();
    }
 else     if ("fileLock".equals(readLock)) {
      strategy=new FileLockExclusiveReadLockStrategy();
    }
 else     if ("rename".equals(readLock)) {
      strategy=new FileRenameExclusiveReadLockStrategy();
    }
 else     if ("changed".equals(readLock)) {
      FileChangedExclusiveReadLockStrategy readLockStrategy=new FileChangedExclusiveReadLockStrategy();
      Long minLength=(Long)params.get("readLockMinLength");
      if (minLength != null) {
        readLockStrategy.setMinLength(minLength);
      }
      strategy=readLockStrategy;
    }
    if (strategy != null) {
      Long timeout=(Long)params.get("readLockTimeout");
      if (timeout != null) {
        strategy.setTimeout(timeout);
      }
      Long checkInterval=(Long)params.get("readLockCheckInterval");
      if (checkInterval != null) {
        strategy.setCheckInterval(checkInterval);
      }
      LoggingLevel readLockLoggingLevel=(LoggingLevel)params.get("readLockLoggingLevel");
      if (readLockLoggingLevel != null) {
        strategy.setReadLockLoggingLevel(readLockLoggingLevel);
      }
      Boolean readLockMarkerFile=(Boolean)params.get("readLockMarkerFile");
      if (readLockMarkerFile != null) {
        strategy.setMarkerFiler(readLockMarkerFile);
      }
    }
  }
  return strategy;
}
