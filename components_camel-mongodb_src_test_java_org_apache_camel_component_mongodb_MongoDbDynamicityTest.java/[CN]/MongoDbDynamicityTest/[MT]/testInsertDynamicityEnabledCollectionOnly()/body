{
  assertEquals(0,testCollection.count());
  mongo.getDB("otherDB").dropDatabase();
  db.getCollection("otherCollection").drop();
  assertFalse("The otherDB database should not exist",mongo.getDatabaseNames().contains("otherDB"));
  String body="{\"_id\": \"testInsertDynamicityEnabledCollectionOnly\", \"a\" : \"1\"}";
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put(MongoDbConstants.COLLECTION,"otherCollection");
  Object result=template.requestBodyAndHeaders("direct:dynamicityEnabled",body,headers);
  DBCollection dynamicCollection=db.getCollection("otherCollection");
  DBObject b=dynamicCollection.findOne("testInsertDynamicityEnabledCollectionOnly");
  assertNotNull("No record with 'testInsertDynamicityEnabledCollectionOnly' _id",b);
  b=testCollection.findOne("testInsertDynamicityEnabledDBOnly");
  assertNull("There is a record with 'testInsertDynamicityEnabledCollectionOnly' _id in the test collection",b);
  assertFalse("The otherDB database should not exist",mongo.getDatabaseNames().contains("otherDB"));
}
