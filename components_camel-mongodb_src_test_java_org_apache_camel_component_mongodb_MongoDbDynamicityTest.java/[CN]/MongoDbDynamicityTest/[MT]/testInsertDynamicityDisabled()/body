{
  assertEquals(0,testCollection.count());
  mongo.getDB("otherDB").dropDatabase();
  assertFalse("The otherDB database should not exist",mongo.getDatabaseNames().contains("otherDB"));
  String body="{\"_id\": \"testInsertDynamicityDisabled\", \"a\" : \"1\"}";
  HashMap<String,Object> headers=new HashMap<String,Object>();
  headers.put(MongoDbConstants.DATABASE,"otherDB");
  headers.put(MongoDbConstants.COLLECTION,"otherCollection");
  Object result=template.requestBodyAndHeaders("direct:noDynamicity",body,headers);
  assertEquals("Response isn't of type WriteResult",WriteResult.class,result.getClass());
  DBObject b=testCollection.findOne("testInsertDynamicityDisabled");
  assertNotNull("No record with 'testInsertDynamicityDisabled' _id",b);
  body="{\"_id\": \"testInsertDynamicityDisabledExplicitly\", \"a\" : \"1\"}";
  result=template.requestBodyAndHeaders("direct:noDynamicityExplicit",body,headers);
  assertEquals("Response isn't of type WriteResult",WriteResult.class,result.getClass());
  b=testCollection.findOne("testInsertDynamicityDisabledExplicitly");
  assertNotNull("No record with 'testInsertDynamicityDisabledExplicitly' _id",b);
  assertFalse("The otherDB database should not exist",mongo.getDatabaseNames().contains("otherDB"));
}
