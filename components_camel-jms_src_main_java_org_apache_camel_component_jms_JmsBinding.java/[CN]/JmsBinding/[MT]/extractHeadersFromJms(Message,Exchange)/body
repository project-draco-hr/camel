{
  Map<String,Object> map=new HashMap<String,Object>();
  if (jmsMessage != null) {
    try {
      map.put("JMSCorrelationID",jmsMessage.getJMSCorrelationID());
      map.put("JMSDeliveryMode",jmsMessage.getJMSDeliveryMode());
      map.put("JMSDestination",jmsMessage.getJMSDestination());
      map.put("JMSExpiration",jmsMessage.getJMSExpiration());
      map.put("JMSMessageID",jmsMessage.getJMSMessageID());
      map.put("JMSPriority",jmsMessage.getJMSPriority());
      map.put("JMSRedelivered",jmsMessage.getJMSRedelivered());
      map.put("JMSTimestamp",jmsMessage.getJMSTimestamp());
      try {
        map.put("JMSReplyTo",jmsMessage.getJMSReplyTo());
      }
 catch (      JMSException e) {
        LOG.trace("Cannot read JMSReplyTo header. Will ignore this exception.",e);
      }
      try {
        map.put("JMSType",jmsMessage.getJMSType());
      }
 catch (      JMSException e) {
        LOG.trace("Cannot read JMSType header. Will ignore this exception.",e);
      }
      map.put("JMSXGroupID",jmsMessage.getStringProperty("JMSXGroupID"));
    }
 catch (    JMSException e) {
      throw new RuntimeCamelException(e);
    }
    Enumeration names;
    try {
      names=jmsMessage.getPropertyNames();
    }
 catch (    JMSException e) {
      throw new RuntimeCamelException(e);
    }
    while (names.hasMoreElements()) {
      String name=names.nextElement().toString();
      try {
        Object value=jmsMessage.getObjectProperty(name);
        if (headerFilterStrategy != null && headerFilterStrategy.applyFilterToExternalHeaders(name,value,exchange)) {
          continue;
        }
        String key=jmsKeyFormatStrategy.decodeKey(name);
        map.put(key,value);
      }
 catch (      JMSException e) {
        throw new RuntimeCamelException(name,e);
      }
    }
  }
  return map;
}
