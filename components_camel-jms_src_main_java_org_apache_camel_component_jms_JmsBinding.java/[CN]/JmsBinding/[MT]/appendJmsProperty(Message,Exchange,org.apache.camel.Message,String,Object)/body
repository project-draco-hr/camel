{
  if (headerName.startsWith("JMS") && !headerName.startsWith("JMSX")) {
    if (headerName.equals("JMSCorrelationID")) {
      jmsMessage.setJMSCorrelationID(ExchangeHelper.convertToType(exchange,String.class,headerValue));
    }
 else     if (headerName.equals("JMSReplyTo") && headerValue != null) {
      jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));
    }
 else     if (headerName.equals("JMSType")) {
      jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));
    }
 else     if (LOG.isDebugEnabled()) {
      LOG.trace("Ignoring JMS header: " + headerName + " with value: "+ headerValue);
    }
  }
 else   if (shouldOutputHeader(in,headerName,headerValue,exchange)) {
    Object value=getValidJMSHeaderValue(headerName,headerValue);
    if (value != null) {
      String key=jmsKeyFormatStrategy.encodeKey(headerName);
      jmsMessage.setObjectProperty(key,value);
    }
 else     if (LOG.isDebugEnabled()) {
      LOG.debug("Ignoring non primitive header: " + headerName + " of class: "+ headerValue.getClass().getName()+ " with value: "+ headerValue);
    }
  }
}
