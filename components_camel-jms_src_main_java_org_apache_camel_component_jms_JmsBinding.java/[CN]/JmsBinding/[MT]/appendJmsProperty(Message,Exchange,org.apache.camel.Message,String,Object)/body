{
  if (isStandardJMSHeader(headerName)) {
    if (headerName.equals("JMSCorrelationID")) {
      jmsMessage.setJMSCorrelationID(ExchangeHelper.convertToType(exchange,String.class,headerValue));
    }
 else     if (headerName.equals("JMSReplyTo") && headerValue != null) {
      if (headerValue instanceof String) {
        headerValue=normalizeDestinationName((String)headerValue);
      }
      Destination replyTo=ExchangeHelper.convertToType(exchange,Destination.class,headerValue);
      JmsMessageHelper.setJMSReplyTo(jmsMessage,replyTo);
    }
 else     if (headerName.equals("JMSType")) {
      jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));
    }
 else     if (headerName.equals("JMSPriority")) {
      jmsMessage.setJMSPriority(ExchangeHelper.convertToType(exchange,Integer.class,headerValue));
    }
 else     if (headerName.equals("JMSDeliveryMode")) {
      Integer deliveryMode=ExchangeHelper.convertToType(exchange,Integer.class,headerValue);
      jmsMessage.setJMSDeliveryMode(deliveryMode);
      jmsMessage.setIntProperty(JmsConstants.JMS_DELIVERY_MODE,deliveryMode);
    }
 else     if (headerName.equals("JMSExpiration")) {
      jmsMessage.setJMSExpiration(ExchangeHelper.convertToType(exchange,Long.class,headerValue));
    }
 else {
      LOG.trace("Ignoring JMS header: {} with value: {}",headerName,headerValue);
    }
  }
 else   if (shouldOutputHeader(in,headerName,headerValue,exchange)) {
    Object value=getValidJMSHeaderValue(headerName,headerValue);
    if (value != null) {
      String key=jmsKeyFormatStrategy.encodeKey(headerName);
      JmsMessageHelper.setProperty(jmsMessage,key,value);
    }
 else     if (LOG.isDebugEnabled()) {
      LOG.debug("Ignoring non primitive header: {} of class: {} with value: {}",new Object[]{headerName,headerValue.getClass().getName(),headerValue});
    }
  }
}
