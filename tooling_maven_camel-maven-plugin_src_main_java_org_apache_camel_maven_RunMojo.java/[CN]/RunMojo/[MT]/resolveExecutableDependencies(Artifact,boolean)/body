{
  Set<Artifact> executableDependencies=null;
  try {
    MavenProject executableProject=this.projectBuilder.buildFromRepository(executablePomArtifact,this.remoteRepositories,this.localRepository);
    List<Artifact> dependencies=CastUtils.cast(executableProject.getDependencies());
    Set<Artifact> dependencyArtifacts=CastUtils.cast(MavenMetadataSource.createArtifacts(this.artifactFactory,dependencies,null,null,null));
    dependencyArtifacts.add(executableProject.getArtifact());
    ArtifactResolutionResult result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,new ScopeArtifactFilter(DefaultArtifact.SCOPE_RUNTIME),Collections.emptyList());
    executableDependencies=CastUtils.cast(result.getArtifacts());
  }
 catch (  Exception ex) {
    if (ignoreFailures) {
      getLog().debug("Ignoring maven resolving dependencies failure " + ex.getMessage());
    }
 else {
      throw new MojoExecutionException("Encountered problems resolving dependencies of the executable " + "in preparation for its execution.",ex);
    }
  }
  return executableDependencies;
}
