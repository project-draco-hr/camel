{
  task=new TimerTask(){
    private final AtomicLong counter=new AtomicLong();
    @Override public void run(){
      if (!isTaskRunAllowed()) {
        return;
      }
      try {
        long count=counter.incrementAndGet();
        boolean fire=endpoint.getRepeatCount() <= 0 || count <= endpoint.getRepeatCount();
        if (fire) {
          sendTimerExchange(count);
        }
 else {
          LOG.debug("Cancelling {} timer as repeat count limit reached after {} counts.",endpoint.getTimerName(),endpoint.getRepeatCount());
          cancel();
        }
      }
 catch (      Throwable e) {
        LOG.warn("Error processing exchange. This exception will be ignored, to let the timer be able to trigger again.",e);
      }
    }
  }
;
  Timer timer=endpoint.getTimer();
  configureTask(task,timer);
}
