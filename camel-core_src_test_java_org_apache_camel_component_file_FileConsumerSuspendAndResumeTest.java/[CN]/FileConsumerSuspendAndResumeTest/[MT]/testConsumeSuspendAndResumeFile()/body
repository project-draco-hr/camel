{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  template.sendBodyAndHeader("file://target/suspended","Bye World",Exchange.FILE_NAME,"bye.txt");
  template.sendBodyAndHeader("file://target/suspended","Hello World",Exchange.FILE_NAME,"hello.txt");
  assertMockEndpointsSatisfied();
  oneExchangeDone.matchesMockWaitTime();
  String[] files=new File("target/suspended/").getAbsoluteFile().list();
  assertNotNull(files);
  assertEquals("The file should exists",1,files.length);
  oneExchangeDone.reset();
  mock.reset();
  mock.expectedMessageCount(1);
  myPolicy.resumeConsumer();
  assertMockEndpointsSatisfied();
  oneExchangeDone.matchesMockWaitTime();
  files=new File("target/suspended/").getAbsoluteFile().list();
  assertNotNull(files);
  assertEquals("The file should exists",0,files.length);
}
