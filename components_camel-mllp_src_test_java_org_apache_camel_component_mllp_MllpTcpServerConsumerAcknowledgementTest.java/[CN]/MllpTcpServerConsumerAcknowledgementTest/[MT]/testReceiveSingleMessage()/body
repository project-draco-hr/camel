{
  final String testMessage="MSH|^~\\&|APP_A|FAC_A|^org^sys||||ADT^A04^ADT_A04|||2.6" + '\r' + "PID|1||1100832^^^^PI||TEST^FIG||98765432|U||R|435 MAIN STREET^^LONGMONT^CO^80503||123-456-7890|||S"+ '\r'+ '\r'+ '\n';
  final String expectedAcknowledgement="MSH|^~\\&|^org^sys||APP_A|FAC_A|||ACK^A04^ADT_A04|||2.6" + '\r' + "MSA|AA|"+ '\r'+ '\n';
  result.expectedMessageCount(1);
  result.expectedHeaderReceived(MLLP_SENDING_APPLICATION,"APP_A");
  result.expectedHeaderReceived(MLLP_SENDING_FACILITY,"FAC_A");
  result.expectedHeaderReceived(MLLP_RECEIVING_APPLICATION,"^org^sys");
  result.expectedHeaderReceived(MLLP_EVENT_TYPE,"ADT");
  result.expectedHeaderReceived(MLLP_TRIGGER_EVENT,"A04");
  result.expectedHeaderReceived(MLLP_VERSION_ID,"2.6");
  mllpClient.connect();
  String acknowledgement=mllpClient.sendMessageAndWaitForAcknowledgement(testMessage,10000);
  assertEquals("Unexpected Acknowledgement",expectedAcknowledgement,acknowledgement);
  assertMockEndpointsSatisfied(10,TimeUnit.SECONDS);
}
