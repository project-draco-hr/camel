{
  ExchangePattern pattern;
  if (isOneWay) {
    pattern=ExchangePattern.InOnly;
  }
 else {
    pattern=ExchangePattern.InOut;
  }
  LOG.debug("send the message to endpoint {}",this.targetCamelEndpointUri);
  final org.apache.camel.Exchange exchange=this.producer.createExchange(pattern);
  exchange.setProperty(Exchange.TO_ENDPOINT,this.targetCamelEndpointUri);
  CachedOutputStream outputStream=(CachedOutputStream)outMessage.getContent(OutputStream.class);
  CxfHeaderHelper.propagateCxfToCamel(this.headerFilterStrategy,outMessage,exchange.getIn().getHeaders(),exchange);
  exchange.getIn().setBody(outputStream.getInputStream());
  LOG.debug("template sending request: ",exchange.getIn());
  if (outMessage.getExchange().isSynchronous()) {
    syncInvoke(exchange);
  }
 else {
    asyncInvokeFromWorkQueue(exchange);
  }
}
