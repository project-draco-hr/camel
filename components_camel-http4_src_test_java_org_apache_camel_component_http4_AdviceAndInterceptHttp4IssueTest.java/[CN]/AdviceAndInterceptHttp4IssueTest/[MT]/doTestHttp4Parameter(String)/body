{
  messageIntercepted=false;
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").to(provider).to("mock:result");
    }
  }
);
  context.getRouteDefinitions().get(0).adviceWith(context,new AdviceWithRouteBuilder(){
    @Override public void configure() throws Exception {
      interceptSendToEndpoint("http4:fakeHTTPADDRESS.com:80*").skipSendToOriginalEndpoint().process(new Processor(){
        @Override public void process(        Exchange exchange) throws Exception {
          messageIntercepted=true;
        }
      }
).to("mock:advised");
    }
  }
);
  context.start();
  getMockEndpoint("mock:advised").expectedMessageCount(1);
  getMockEndpoint("mock:result").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  assertTrue(messageIntercepted);
}
