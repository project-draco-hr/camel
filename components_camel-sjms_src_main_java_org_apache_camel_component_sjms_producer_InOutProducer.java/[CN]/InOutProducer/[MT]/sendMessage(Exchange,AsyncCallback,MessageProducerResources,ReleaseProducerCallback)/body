{
  Message request=getEndpoint().getBinding().makeJmsMessage(exchange,producer.getSession());
  String correlationId=exchange.getIn().getHeader(JmsConstants.JMS_CORRELATION_ID,String.class);
  if (correlationId == null) {
    correlationId=GENERATED_CORRELATION_ID_PREFIX + getUuidGenerator().generateUuid();
  }
  Object responseObject=null;
  Exchanger<Object> messageExchanger=new Exchanger<Object>();
  JmsMessageHelper.setCorrelationId(request,correlationId);
  EXCHANGERS.put(correlationId,messageExchanger);
  MessageConsumerResources consumer=consumers.borrowObject();
  JmsMessageHelper.setJMSReplyTo(request,consumer.getReplyToDestination());
  consumers.returnObject(consumer);
  producer.getMessageProducer().send(request);
  try {
    releaseProducerCallback.release(producer);
  }
 catch (  Exception exception) {
  }
  try {
    responseObject=messageExchanger.exchange(null,getResponseTimeOut(),TimeUnit.MILLISECONDS);
    EXCHANGERS.remove(correlationId);
  }
 catch (  InterruptedException e) {
    log.debug("Exchanger was interrupted while waiting on response",e);
    exchange.setException(e);
  }
catch (  TimeoutException e) {
    log.debug("Exchanger timed out while waiting on response",e);
    exchange.setException(e);
  }
  if (exchange.getException() == null) {
    if (responseObject instanceof Throwable) {
      exchange.setException((Throwable)responseObject);
    }
 else     if (responseObject instanceof Message) {
      Message message=(Message)responseObject;
      SjmsMessage response=new SjmsMessage(message,consumer.getSession(),getEndpoint().getBinding());
      exchange.setOut(response);
    }
 else {
      exchange.setException(new CamelException("Unknown response type: " + responseObject));
    }
  }
  callback.done(isSynchronous());
}
