{
  boolean sync;
  List<Processor> processors=getProcessors();
  if (processors.isEmpty()) {
    throw new IllegalStateException("No processors available to process " + exchange);
  }
  final AtomicInteger index=new AtomicInteger();
  final AtomicInteger attempts=new AtomicInteger();
  if (isRoundRobin()) {
    if (counter.incrementAndGet() >= processors.size()) {
      counter.set(0);
    }
    index.set(counter.get());
  }
  if (log.isDebugEnabled()) {
    log.debug("Failover starting with endpoint index " + index);
  }
  Processor processor=processors.get(index.get());
  sync=processExchange(processor,exchange,attempts,index,callback,processors);
  if (!sync) {
    if (log.isTraceEnabled()) {
      log.trace("Processing exchangeId: " + exchange.getExchangeId() + " is continued being processed asynchronously");
    }
    return false;
  }
  callback.done(true);
  return true;
}
