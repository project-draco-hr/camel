{
  for (  AnnotatedType<?> pat : patRouteBuilders) {
    final Set<Bean<?>> beans=beanManager.getBeans(pat.getJavaClass());
    final Bean<?> bean=beanManager.resolve(beans);
    routeBuilderBeans.add(bean);
  }
  patRouteBuilders.clear();
  for (  Bean<?> bean : routeBuilderBeans) {
    CreationalContext<?> createContext=beanManager.createCreationalContext(bean);
    Class<?> beanClass=bean.getBeanClass();
    Set<Type> types=bean.getTypes();
    for (    Type type : types) {
      if (type instanceof Class<?>) {
        beanClass=(Class<?>)type;
        break;
      }
    }
    Object reference=beanManager.getReference(bean,beanClass,createContext);
    ObjectHelper.notNull(reference,"Could not instantiate bean of type: " + beanClass.getName() + " for "+ bean);
    try {
      if (reference instanceof RoutesBuilder) {
        RoutesBuilder routeBuilder=(RoutesBuilder)reference;
        camelContext.addRoutes(routeBuilder);
      }
 else       if (reference instanceof RouteContainer) {
        RouteContainer routeContainer=(RouteContainer)reference;
        camelContext.addRouteDefinitions(routeContainer.getRoutes());
      }
 else {
        throw new IllegalArgumentException("Invalid route builder of type: " + beanClass.getName() + ". Should be RoutesBuilder or RoutesContainer");
      }
    }
 catch (    Exception e) {
      throw new RuntimeCamelException("Error adding route builder of type: " + beanClass.getName() + " to CamelContext: "+ camelContext.getName()+ " due "+ e.getMessage(),e);
    }
  }
}
