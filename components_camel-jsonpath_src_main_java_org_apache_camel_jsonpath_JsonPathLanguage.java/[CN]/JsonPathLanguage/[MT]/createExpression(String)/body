{
  final JSonPathEngine engine;
  try {
    engine=new JSonPathEngine(expression);
  }
 catch (  Exception e) {
    throw new ExpressionIllegalSyntaxException(expression,e);
  }
  return new ExpressionAdapter(){
    @Override public Object evaluate(    Exchange exchange){
      try {
        return evaluateJsonPath(exchange,engine);
      }
 catch (      Exception e) {
        throw new ExpressionEvaluationException(this,exchange,e);
      }
    }
    @Override public String toString(){
      return "jsonpath[" + expression + "]";
    }
  }
;
}
