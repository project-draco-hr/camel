{
  boolean isNoop=params.get("noop") != null;
  boolean isDelete=params.get("delete") != null;
  String moveNamePrefix=(String)params.get("moveNamePrefix");
  String moveNamePostfix=(String)params.get("moveNamePostfix");
  String preMoveNamePrefix=(String)params.get("preMoveNamePrefix");
  String preMoveNamePostfix=(String)params.get("preMoveNamePostfix");
  Expression expression=(Expression)params.get("expression");
  Expression preMoveExpression=(Expression)params.get("preMoveExpression");
  boolean move=moveNamePrefix != null || moveNamePostfix != null;
  boolean preMove=preMoveNamePrefix != null || preMoveNamePostfix != null;
  if (isNoop) {
    GenericFileNoOpProcessStrategy<File> strategy=new GenericFileNoOpProcessStrategy<File>();
    strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));
    return strategy;
  }
 else   if (isDelete) {
    GenericFileDeleteProcessStrategy<File> strategy=new GenericFileDeleteProcessStrategy<File>();
    strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));
    return strategy;
  }
 else   if (move || preMove) {
    GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();
    strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));
    if (move) {
      strategy.setCommitRenamer(new GenericFileDefaultRenamer<File>(moveNamePrefix,moveNamePostfix));
    }
    if (preMove) {
      strategy.setBeginRenamer(new GenericFileDefaultRenamer<File>(preMoveNamePrefix,preMoveNamePostfix));
    }
    return strategy;
  }
 else   if (expression != null || preMoveExpression != null) {
    GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();
    strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));
    if (expression != null) {
      GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();
      renamer.setExpression(expression);
      strategy.setCommitRenamer(renamer);
    }
    if (preMoveExpression != null) {
      GenericFileExpressionRenamer<File> renamer=new GenericFileExpressionRenamer<File>();
      renamer.setExpression(preMoveExpression);
      strategy.setBeginRenamer(renamer);
    }
    return strategy;
  }
 else {
    GenericFileRenameProcessStrategy<File> strategy=new GenericFileRenameProcessStrategy<File>();
    strategy.setExclusiveReadLockStrategy(getExclusiveReadLockStrategy(params));
    strategy.setCommitRenamer(new GenericFileDefaultRenamer<File>(".camel/",""));
    return strategy;
  }
}
