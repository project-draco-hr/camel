{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      XmlJsonDataFormat format=new XmlJsonDataFormat();
      format.setEncoding("UTF-8");
      format.setForceTopLevelObject(true);
      format.setTrimSpaces(true);
      format.setRootName("newRoot");
      format.setSkipNamespaces(true);
      format.setRemoveNamespacePrefixes(true);
      format.setExpandableProperties(Arrays.asList("d","e"));
      from("direct:marshal").marshal(format).to("mock:json");
      from("direct:unmarshal").unmarshal(format).to("mock:xml");
      XmlJsonDataFormat namespacesFormat=new XmlJsonDataFormat();
      List<XmlJsonDataFormat.NamespacesPerElementMapping> namespaces=new ArrayList<XmlJsonDataFormat.NamespacesPerElementMapping>();
      namespaces.add(new XmlJsonDataFormat.NamespacesPerElementMapping("","|ns1|http://camel.apache.org/test1||http://camel.apache.org/default|"));
      namespaces.add(new XmlJsonDataFormat.NamespacesPerElementMapping("surname","|ns2|http://camel.apache.org/personalData|ns3|http://camel.apache.org/personalData2|"));
      namespacesFormat.setNamespaceMappings(namespaces);
      namespacesFormat.setTrimSpaces(true);
      from("direct:marshalNS").marshal(namespacesFormat).to("mock:jsonNS");
      from("direct:unmarshalNS").unmarshal(namespacesFormat).to("mock:xmlNS");
      XmlJsonDataFormat typeHintsFormat=new XmlJsonDataFormat();
      typeHintsFormat.setForceTopLevelObject(true);
      typeHintsFormat.setTypeHints("YES");
      from("direct:marshalTypeHints").marshal(typeHintsFormat).to("mock:jsonTypeHints");
      from("direct:unmarshalTypeHints").unmarshal(typeHintsFormat).to("mock:xmlTypeHints");
      XmlJsonDataFormat prefixedTypeHintsFormat=new XmlJsonDataFormat();
      prefixedTypeHintsFormat.setForceTopLevelObject(true);
      prefixedTypeHintsFormat.setTypeHints("WITH_PREFIX");
      from("direct:marshalPrefixedTypeHints").marshal(prefixedTypeHintsFormat).to("mock:jsonPrefixedTypeHints");
    }
  }
;
}
