{
  String classDoc=processingEnv.getElementUtils().getDocComment(classElement);
  if (!isNullOrEmpty(classDoc)) {
    classDoc=classDoc.replaceFirst("\\@version","");
    classDoc=classDoc.trim();
    writer.println("<p>" + classDoc + "</p>");
  }
  Set<EndpointPath> endpointPaths=new LinkedHashSet<EndpointPath>();
  Set<EndpointOption> endpointOptions=new LinkedHashSet<EndpointOption>();
  findClassProperties(writer,roundEnv,endpointPaths,endpointOptions,classElement,prefix);
  if (!endpointOptions.isEmpty() || !endpointPaths.isEmpty()) {
    writer.println("<table class='table'>");
    writer.println("  <tr>");
    writer.println("    <th>Name</th>");
    writer.println("    <th>Kind</th>");
    writer.println("    <th>Type</th>");
    writer.println("    <th>Deprecated</th>");
    writer.println("    <th>Default Value</th>");
    writer.println("    <th>Enum Values</th>");
    writer.println("    <th>Description</th>");
    writer.println("  </tr>");
    for (    EndpointPath path : endpointPaths) {
      writer.println("  <tr>");
      writer.println("    <td>" + path.getName() + "</td>");
      writer.println("    <td>" + "path" + "</td>");
      writer.println("    <td>" + path.getType() + "</td>");
      writer.println("    <td>" + path.isDeprecated() + "</td>");
      writer.println("    <td>" + path.getEnumValuesAsHtml() + "</td>");
      writer.println("    <td>" + path.getDocumentation() + "</td>");
      writer.println("  </tr>");
    }
    for (    EndpointOption option : endpointOptions) {
      writer.println("  <tr>");
      writer.println("    <td>" + option.getName() + "</td>");
      writer.println("    <td>" + "parameter" + "</td>");
      writer.println("    <td>" + option.getType() + "</td>");
      writer.println("    <td>" + option.isDeprecated() + "</td>");
      writer.println("    <td>" + option.getDefaultValue() + "</td>");
      writer.println("    <td>" + option.getEnumValuesAsHtml() + "</td>");
      writer.println("    <td>" + option.getDocumentationWithNotes() + "</td>");
      writer.println("  </tr>");
    }
    writer.println("</table>");
  }
}
