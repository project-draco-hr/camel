{
  ComponentModel componentModel=findComponentProperties(roundEnv,uriEndpoint,classElement,title,scheme,extendsScheme,label);
  String syntax=componentModel.getSyntax();
  String alternativeSyntax=componentModel.getAlternativeSyntax();
  String description=componentModel.getDescription();
  writer.println("<html>");
  writer.println("<header>");
  writer.println("<title>" + title + "</title>");
  writer.println("</header>");
  writer.println("<body>");
  writer.println("<h1>" + title + "</h1>");
  writer.println("<b>Scheme:</b> " + scheme + "<br/>");
  writer.println("<b>Syntax:</b> " + syntax + "<br/>");
  if (alternativeSyntax != null) {
    writer.println("<b>Alternative Syntax:</b> " + alternativeSyntax + "<br/>");
  }
  writer.println("<b>Description:</b> " + description + "<br/>");
  writer.println("<b>Deprecated:</b>" + componentModel.isDeprecated() + "<br/>");
  if (componentModel.isConsumerOnly()) {
    writer.println("<b>ConsumerOnly:</b>" + "true" + "<br/>");
  }
  if (componentModel.isProducerOnly()) {
    writer.println("<b>ProducerOnly:</b>" + "true" + "<br/>");
  }
  writer.println("<b>Async:</b>" + componentModel.isAsync() + "<br/>");
  writer.println("<b>Maven:</b> " + componentModel.getGroupId() + "/"+ componentModel.getArtifactId()+ "/"+ componentModel.getVersionId()+ "<br/>");
  writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,classElement,"",uriEndpoint.excludeProperties());
  TypeMirror consumerType=null;
  try {
    uriEndpoint.consumerClass();
  }
 catch (  MirroredTypeException mte) {
    consumerType=mte.getTypeMirror();
  }
  boolean found=false;
  String consumerClassName=null;
  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");
  if (consumerType != null) {
    consumerClassName=consumerType.toString();
    TypeElement consumerElement=findTypeElement(roundEnv,consumerClassName);
    if (consumerElement != null) {
      writer.println("<h2>" + scheme + " consumer"+ "</h2>");
      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());
      found=true;
    }
  }
  if (!found && consumerClassName != null) {
    warning("APT could not find consumer class " + consumerClassName);
  }
  writer.println("</body>");
  writer.println("</html>");
}
