{
  if (original != null) {
    original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);
  }
  aggregated.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);
  if (original != null) {
    aggregationRepository.remove(aggregated.getContext(),key,original);
  }
  if (!fromTimeout && timeoutMap != null) {
    LOG.trace("Removing correlation key {} from timeout",key);
    timeoutMap.remove(key);
  }
  if (closedCorrelationKeys != null) {
    closedCorrelationKeys.put(key,key);
  }
  if (fromTimeout) {
    AggregationStrategy strategy=aggregationStrategy;
    if (strategy instanceof DelegateAggregationStrategy) {
      strategy=((DelegateAggregationStrategy)strategy).getDelegate();
    }
    if (strategy instanceof TimeoutAwareAggregationStrategy) {
      long timeout=getCompletionTimeout() > 0 ? getCompletionTimeout() : -1;
      ((TimeoutAwareAggregationStrategy)strategy).timeout(aggregated,-1,-1,timeout);
    }
  }
  Exchange answer;
  if (fromTimeout && isDiscardOnCompletionTimeout()) {
    LOG.debug("Aggregation for correlation key {} discarding aggregated exchange: {}",key,aggregated);
    aggregationRepository.confirm(aggregated.getContext(),aggregated.getExchangeId());
    redeliveryState.remove(aggregated.getExchangeId());
    answer=null;
  }
 else {
    answer=aggregated;
  }
  return answer;
}
