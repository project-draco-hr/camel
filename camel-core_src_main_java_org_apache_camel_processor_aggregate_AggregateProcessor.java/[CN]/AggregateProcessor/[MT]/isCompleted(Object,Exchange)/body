{
  if (getCompletionPredicate() != null) {
    boolean answer=getCompletionPredicate().matches(exchange);
    if (answer) {
      return "predicate";
    }
  }
  if (getCompletionSizeExpression() != null) {
    Integer value=getCompletionSizeExpression().evaluate(exchange,Integer.class);
    if (value != null && value > 0) {
      int size=exchange.getProperty(Exchange.AGGREGATED_SIZE,1,Integer.class);
      if (size >= value) {
        return "size";
      }
    }
  }
  if (getCompletionSize() > 0) {
    int size=exchange.getProperty(Exchange.AGGREGATED_SIZE,1,Integer.class);
    if (size >= getCompletionSize()) {
      return "size";
    }
  }
  boolean timeoutSet=false;
  if (getCompletionTimeoutExpression() != null) {
    Long value=getCompletionTimeoutExpression().evaluate(exchange,Long.class);
    if (value != null && value > 0) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Updating correlation key " + key + " to timeout after "+ value+ " ms. as exchange received: "+ exchange);
      }
      timeoutMap.put(key,exchange.getExchangeId(),value);
      timeoutSet=true;
    }
  }
  if (!timeoutSet && getCompletionTimeout() > 0) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Updating correlation key " + key + " to timeout after "+ getCompletionTimeout()+ " ms. as exchange received: "+ exchange);
    }
    timeoutMap.put(key,exchange.getExchangeId(),getCompletionTimeout());
  }
  if (isCompletionFromBatchConsumer()) {
    batchConsumerCorrelationKeys.add(key);
    batchConsumerCounter.incrementAndGet();
    int size=exchange.getProperty(Exchange.BATCH_SIZE,0,Integer.class);
    if (size > 0 && batchConsumerCounter.intValue() >= size) {
      batchConsumerCounter.set(0);
      return "consumer";
    }
  }
  return null;
}
