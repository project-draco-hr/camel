{
  if (!camelContext.getStatus().isStarted()) {
    LOG.trace("Recover check cannot start due CamelContext({}) has not been started yet",camelContext.getName());
    return;
  }
  LOG.trace("Starting recover check");
  Set<String> exchangeIds=recoverable.scan(camelContext);
  for (  String exchangeId : exchangeIds) {
    if (!isRunAllowed()) {
      LOG.info("We are shutting down so stop recovering");
      return;
    }
    boolean inProgress=inProgressCompleteExchanges.contains(exchangeId);
    if (inProgress) {
      LOG.trace("Aggregated exchange with id: {} is already in progress.",exchangeId);
    }
 else {
      LOG.debug("Loading aggregated exchange with id: {} to be recovered.",exchangeId);
      Exchange exchange=recoverable.recover(camelContext,exchangeId);
      if (exchange != null) {
        String key=exchange.getProperty(Exchange.AGGREGATED_CORRELATION_KEY,String.class);
        exchange.getIn().setHeader(Exchange.REDELIVERED,Boolean.TRUE);
        RedeliveryData data=redeliveryState.get(exchange.getExchangeId());
        if (data != null && recoverable.getMaximumRedeliveries() > 0 && data.redeliveryCounter >= recoverable.getMaximumRedeliveries()) {
          LOG.warn("The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri());
          try {
            exchange.getIn().setHeader(Exchange.REDELIVERY_COUNTER,data.redeliveryCounter);
            exchange.getIn().setHeader(Exchange.REDELIVERY_EXHAUSTED,Boolean.TRUE);
            deadLetterProcessor.process(exchange);
          }
 catch (          Throwable e) {
            exchange.setException(e);
          }
          if (exchange.getException() != null) {
            getExceptionHandler().handleException("Failed to move recovered Exchange to dead letter channel: " + recoverable.getDeadLetterUri(),exchange.getException());
          }
 else {
            recoverable.confirm(camelContext,exchangeId);
          }
        }
 else {
          if (data == null) {
            data=new RedeliveryData();
            redeliveryState.put(exchange.getExchangeId(),data);
          }
          data.redeliveryCounter++;
          exchange.getIn().setHeader(Exchange.REDELIVERY_COUNTER,data.redeliveryCounter);
          if (recoverable.getMaximumRedeliveries() > 0) {
            exchange.getIn().setHeader(Exchange.REDELIVERY_MAX_COUNTER,recoverable.getMaximumRedeliveries());
          }
          LOG.debug("Delivery attempt: {} to recover aggregated exchange with id: {}",data.redeliveryCounter,exchangeId);
          onSubmitCompletion(key,exchange);
        }
      }
    }
  }
  LOG.trace("Recover check complete");
}
