{
  if (!camelContext.getStatus().isStarted()) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Recover check cannot start due CamelContext(" + camelContext.getName() + ") has not been started yet");
    }
    return;
  }
  LOG.trace("Starting recover check");
  Set<String> exchangeIds=recoverable.scan(camelContext);
  for (  String exchangeId : exchangeIds) {
    if (!isRunAllowed()) {
      LOG.info("We are shutting down so stop recovering");
      return;
    }
    boolean inProgress=inProgressCompleteExchanges.contains(exchangeId);
    if (inProgress) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Aggregated exchange with id " + exchangeId + " is already in progress.");
      }
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Recovering aggregated exchange with id " + exchangeId);
      }
      Exchange exchange=recoverable.recover(camelContext,exchangeId);
      if (exchange != null) {
        String key=exchange.getProperty(Exchange.AGGREGATED_CORRELATION_KEY,String.class);
        exchange.getIn().setHeader(Exchange.REDELIVERED,Boolean.TRUE);
        RedeliveryData data=redeliveryState.get(exchange.getExchangeId());
        if (data == null) {
          data=new RedeliveryData();
          redeliveryState.put(exchange.getExchangeId(),data);
        }
        data.redeliveryCounter++;
        exchange.getIn().setHeader(Exchange.REDELIVERY_COUNTER,data.redeliveryCounter);
        try {
          lock.lock();
          onSubmitCompletion(key,exchange);
        }
  finally {
          lock.unlock();
        }
      }
    }
  }
  LOG.trace("Recover check complete");
}
