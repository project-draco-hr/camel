{
  WeightedLoadBalancer loadBalancer;
  List<Integer> distributionRatioList=new ArrayList<Integer>();
  try {
    if (distributionRatioDelimiter == null) {
      distributionRatioDelimiter=",";
    }
    String[] ratios=distributionRatio.split(distributionRatioDelimiter);
    for (    String ratio : ratios) {
      distributionRatioList.add(new Integer(ratio.trim()));
    }
    boolean isRoundRobin=getRoundRobin() != null && getRoundRobin();
    if (isRoundRobin) {
      loadBalancer=new WeightedRoundRobinLoadBalancer(distributionRatioList);
    }
 else {
      loadBalancer=new WeightedRandomLoadBalancer(distributionRatioList);
    }
  }
 catch (  Exception e) {
    throw ObjectHelper.wrapRuntimeCamelException(e);
  }
  return loadBalancer;
}
