{
  JndiRegistry registry=super.createRegistry();
  registry.bind("accessor",getKeyAccessor(keyPair.getPrivate()));
  registry.bind("canonicalizationMethod1",getCanonicalizationMethod());
  registry.bind("selector",KeySelector.singletonKeySelector(keyPair.getPublic()));
  registry.bind("selectorKeyValue",getKeyValueKeySelector());
  registry.bind("transformsXPath2",getTransformsXPath2());
  registry.bind("transformsXsltXPath",getTransformsXsltXpath());
  registry.bind("uriDereferencer",getSameDocumentUriDereferencer());
  registry.bind("baseUri",getBaseUri());
  registry.bind("cryptoContextProperties",getCrytoContextProperties());
  registry.bind("keyAccessorDefault",getDefaultKeyAccessor());
  registry.bind("keySelectorDefault",getDefaultKeySelector());
  registry.bind("envelopingSignatureChecker",getEnvelopingXmlSignatureChecker());
  registry.bind("xmlSignature2MessageWithTimestampProperty",getXmlSignature2MessageWithTimestampdProperty());
  registry.bind("validationFailedHandlerIgnoreManifestFailures",getValidationFailedHandlerIgnoreManifestFailures());
  registry.bind("signatureProperties",getSignatureProperties());
  registry.bind("nodesearchxpath",getNodeSerachXPath());
  Map<String,String> namespaceMap=Collections.singletonMap("ns","http://test");
  List<XPathFilterParameterSpec> xpaths=Collections.singletonList(XmlSignatureHelper.getXpathFilter("/ns:root/a/@ID",namespaceMap));
  registry.bind("xpathsToIdAttributes",xpaths);
  return registry;
}
