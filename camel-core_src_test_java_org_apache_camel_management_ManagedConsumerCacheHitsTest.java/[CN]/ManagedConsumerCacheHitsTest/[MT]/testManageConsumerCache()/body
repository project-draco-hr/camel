{
  if (isPlatform("aix")) {
    return;
  }
  context.getManagementStrategy().getManagementAgent().setRegisterAlways(true);
  ConsumerCache cache=new ConsumerCache(this,context);
  context.addService(cache);
  template.sendBody("seda:a","Hello World");
  Exchange out=cache.getConsumer(context.getEndpoint("seda:a")).receive(3000);
  assertNotNull("Should got an exchange",out);
  assertEquals("Hello World",out.getIn().getBody());
  MBeanServer mbeanServer=getMBeanServer();
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=services,*"),null);
  List<ObjectName> list=new ArrayList<ObjectName>(set);
  ObjectName on=null;
  for (  ObjectName name : list) {
    if (name.getCanonicalName().contains("ConsumerCache")) {
      on=name;
      break;
    }
  }
  assertNotNull("Should have found ConsumerCache",on);
  Integer max=(Integer)mbeanServer.getAttribute(on,"MaximumCacheSize");
  assertEquals(1000,max.intValue());
  Integer current=(Integer)mbeanServer.getAttribute(on,"Size");
  assertEquals(1,current.intValue());
  Long hits=(Long)mbeanServer.getAttribute(on,"Hits");
  assertEquals(0,hits.longValue());
  Long misses=(Long)mbeanServer.getAttribute(on,"Misses");
  assertEquals(1,misses.longValue());
  template.sendBody("seda:b","Hello World");
  template.sendBody("seda:c","Hello World");
  out=cache.getConsumer(context.getEndpoint("seda:b")).receive(3000);
  assertNotNull(out);
  out=cache.getConsumer(context.getEndpoint("seda:c")).receive(3000);
  assertNotNull(out);
  hits=(Long)mbeanServer.getAttribute(on,"Hits");
  assertEquals(0,hits.longValue());
  misses=(Long)mbeanServer.getAttribute(on,"Misses");
  assertEquals(3,misses.longValue());
  template.sendBody("seda:a","Bye World");
  template.sendBody("seda:b","Bye World");
  out=cache.getConsumer(context.getEndpoint("seda:a")).receive(3000);
  assertNotNull(out);
  out=cache.getConsumer(context.getEndpoint("seda:b")).receive(3000);
  assertNotNull(out);
  hits=(Long)mbeanServer.getAttribute(on,"Hits");
  assertEquals(2,hits.longValue());
  misses=(Long)mbeanServer.getAttribute(on,"Misses");
  assertEquals(3,misses.longValue());
  mbeanServer.invoke(on,"resetStatistics",null,null);
  hits=(Long)mbeanServer.getAttribute(on,"Hits");
  assertEquals(0,hits.longValue());
  misses=(Long)mbeanServer.getAttribute(on,"Misses");
  assertEquals(0,misses.longValue());
}
