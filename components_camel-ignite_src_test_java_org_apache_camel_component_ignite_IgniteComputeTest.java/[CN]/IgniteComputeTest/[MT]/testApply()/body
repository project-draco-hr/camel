{
  TestIgniteComputeResources.COUNTER.set(0);
  String result=template.requestBodyAndHeader("ignite:compute:abc?executionType=APPLY",TestIgniteComputeResources.TEST_CLOSURE,IgniteConstants.IGNITE_COMPUTE_PARAMS,"Camel",String.class);
  assert_().that(result).isEqualTo("hello Camel");
  Collection<String> colResult=template.requestBodyAndHeader("ignite:compute:abc?executionType=APPLY",TestIgniteComputeResources.TEST_CLOSURE,IgniteConstants.IGNITE_COMPUTE_PARAMS,Lists.newArrayList("Camel1","Camel2","Camel3"),Collection.class);
  assert_().that(colResult).containsAllOf("hello Camel1","hello Camel2","hello Camel3");
  Map<String,Object> headers=ImmutableMap.<String,Object>of(IgniteConstants.IGNITE_COMPUTE_PARAMS,Lists.newArrayList("Camel1","Camel2","Camel3"),IgniteConstants.IGNITE_COMPUTE_REDUCER,TestIgniteComputeResources.STRING_JOIN_REDUCER);
  result=template.requestBodyAndHeaders("ignite:compute:abc?executionType=APPLY",TestIgniteComputeResources.TEST_CLOSURE,headers,String.class);
  assert_().that(result).isEqualTo("hello Camel1hello Camel2hello Camel3");
}
