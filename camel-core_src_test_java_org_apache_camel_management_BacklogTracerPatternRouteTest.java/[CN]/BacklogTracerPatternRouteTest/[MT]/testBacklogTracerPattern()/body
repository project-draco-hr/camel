{
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=new ObjectName("org.apache.camel:context=localhost/camel-1,type=tracer,name=BacklogTracer");
  assertNotNull(on);
  mbeanServer.isRegistered(on);
  Boolean enabled=(Boolean)mbeanServer.getAttribute(on,"Enabled");
  assertEquals("Should not be enabled",Boolean.FALSE,enabled);
  Integer size=(Integer)mbeanServer.getAttribute(on,"BacklogSize");
  assertEquals("Should be 10",10,size.intValue());
  mbeanServer.setAttribute(on,new Attribute("TracePattern","coolRoute"));
  mbeanServer.setAttribute(on,new Attribute("Enabled",Boolean.TRUE));
  getMockEndpoint("mock:foo").expectedMessageCount(2);
  getMockEndpoint("mock:bar").expectedMessageCount(2);
  template.sendBody("direct:start","Hello World");
  template.sendBody("direct:start","Bye World");
  assertMockEndpointsSatisfied();
  List<BacklogTracerEventMessage> events=(List<BacklogTracerEventMessage>)mbeanServer.invoke(on,"dumpTracedMessages",new Object[]{"foo"},new String[]{"java.lang.String"});
  assertNotNull(events);
  assertEquals(2,events.size());
  events=(List<BacklogTracerEventMessage>)mbeanServer.invoke(on,"dumpTracedMessages",new Object[]{"bar"},new String[]{"java.lang.String"});
  assertNotNull(events);
  assertEquals(2,events.size());
  events=(List<BacklogTracerEventMessage>)mbeanServer.invoke(on,"dumpTracedMessages",new Object[]{"beer"},new String[]{"java.lang.String"});
  assertNotNull(events);
  assertEquals(0,events.size());
}
