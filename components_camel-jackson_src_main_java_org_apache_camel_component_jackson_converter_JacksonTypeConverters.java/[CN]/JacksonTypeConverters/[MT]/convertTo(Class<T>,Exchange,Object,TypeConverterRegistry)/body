{
  if (!init && exchange != null) {
    String text=exchange.getContext().getProperties().get(JacksonConstants.ENABLE_TYPE_CONVERTER);
    if (text != null) {
      text=exchange.getContext().resolvePropertyPlaceholders(text);
      enabled="true".equalsIgnoreCase(text);
    }
    text=exchange.getContext().getProperties().get(JacksonConstants.TYPE_CONVERTER_TO_POJO);
    if (text != null) {
      text=exchange.getContext().resolvePropertyPlaceholders(text);
      toPojo="true".equalsIgnoreCase(text);
    }
    init=true;
  }
  if (!enabled) {
    return null;
  }
  if (!toPojo && isNotPojoType(type)) {
    return null;
  }
  if (exchange != null) {
    ObjectMapper mapper=resolveObjectMapper(exchange.getContext().getRegistry());
    if (String.class.isAssignableFrom(type)) {
      String out=mapper.writeValueAsString(value);
      return type.cast(out);
    }
 else     if (byte[].class.isAssignableFrom(type)) {
      byte[] out=mapper.writeValueAsBytes(value);
      return type.cast(out);
    }
 else     if (mapper.canSerialize(type)) {
      if (String.class.isAssignableFrom(value.getClass())) {
        return mapper.readValue((String)value,type);
      }
 else       if (byte[].class.isAssignableFrom(value.getClass())) {
        return mapper.readValue((byte[])value,type);
      }
 else       if (File.class.isAssignableFrom(value.getClass())) {
        return mapper.readValue((File)value,type);
      }
 else       if (InputStream.class.isAssignableFrom(value.getClass())) {
        return mapper.readValue((InputStream)value,type);
      }
 else       if (Reader.class.isAssignableFrom(value.getClass())) {
        return mapper.readValue((Reader)value,type);
      }
 else {
        return mapper.convertValue(value,type);
      }
    }
  }
  return null;
}
