{
  MockEndpoint mockEP=getMockEndpoint("mock:result");
  mockEP.setExpectedMessageCount(10);
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=getRouteObjectName(mbeanServer);
  String state=(String)mbeanServer.getAttribute(on,"State");
  assertEquals("route should be started",ServiceStatus.Started.name(),state);
  for (int i=0; i < 5; i++) {
    template.sendBody("seda:start","message-" + i);
  }
  Long timeout=new Long(2);
  Boolean abortAfterTimeout=Boolean.TRUE;
  Object[] params={timeout,abortAfterTimeout};
  String[] sig={"java.lang.Long","java.lang.Boolean"};
  Boolean stopRouteResponse=(Boolean)mbeanServer.invoke(on,"stop",params,sig);
  state=(String)mbeanServer.getAttribute(on,"State");
  assertFalse("stopRoute response should be False",stopRouteResponse);
  assertEquals("route should still be started",ServiceStatus.Started.name(),state);
  for (int i=5; i < 10; i++) {
    template.sendBody("seda:start","message-" + i);
  }
  mockEP.assertIsSatisfied();
}
