{
  context.getManagementStrategy().getManagementAgent().setRegisterAlways(true);
  MockEndpoint x=getMockEndpoint("mock:x");
  MockEndpoint y=getMockEndpoint("mock:y");
  MockEndpoint z=getMockEndpoint("mock:z");
  x.expectedBodiesReceived("answer");
  y.expectedBodiesReceived("answer");
  z.expectedBodiesReceived("answer");
  sendBody();
  assertMockEndpointsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=endpoints,name=\"direct://a\"");
  assertTrue("Should be registered",mbeanServer.isRegistered(name));
  name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=endpoints,name=\"mock://x\"");
  assertTrue("Should be registered",mbeanServer.isRegistered(name));
  name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=endpoints,name=\"mock://y\"");
  assertTrue("Should be registered",mbeanServer.isRegistered(name));
  name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=endpoints,name=\"mock://z\"");
  assertTrue("Should be registered",mbeanServer.isRegistered(name));
  name=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=components,name=\"mock\"");
  assertTrue("Should be registered",mbeanServer.isRegistered(name));
}
