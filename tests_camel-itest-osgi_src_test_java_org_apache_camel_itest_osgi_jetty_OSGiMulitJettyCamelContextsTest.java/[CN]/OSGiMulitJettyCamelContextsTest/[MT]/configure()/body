{
  Option[] options=options(profile("spring.dm").version("1.2.0"),org.ops4j.pax.exam.CoreOptions.systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test","camel-jetty"),provision(newBundle().add("META-INF/spring/CamelContext1.xml",OSGiMulitJettyCamelContextsTest.class.getResource("CamelContext1.xml")).add(JettyProcessor.class).set(Constants.BUNDLE_SYMBOLICNAME,"org.apache.camel.itest.osgi.CamelContextBundle1").set(Constants.BUNDLE_NAME,"CamelContext1").set(Constants.DYNAMICIMPORT_PACKAGE,"*").build()),provision(newBundle().add("META-INF/spring/CamelContext2.xml",OSGiMulitJettyCamelContextsTest.class.getResource("CamelContext2.xml")).add(JettyProcessor.class).set(Constants.BUNDLE_SYMBOLICNAME,"org.apache.camel.itest.osgi.CamelContextBundle2").set(Constants.DYNAMICIMPORT_PACKAGE,"*").set(Constants.BUNDLE_NAME,"CamelContext2").build()),workingDirectory("target/paxrunner/"),equinox(),felix());
  return options;
}
