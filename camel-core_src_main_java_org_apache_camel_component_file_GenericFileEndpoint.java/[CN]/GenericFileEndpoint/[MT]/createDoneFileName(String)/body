{
  String pattern=getDoneFileName();
  ObjectHelper.notEmpty(pattern,"doneFileName",pattern);
  String path=FileUtil.onlyPath(fileName);
  String onlyName=FileUtil.stripPath(fileName);
  pattern=pattern.replaceFirst("\\$\\{file:name\\}",onlyName);
  pattern=pattern.replaceFirst("\\$simple\\{file:name\\}",onlyName);
  pattern=pattern.replaceFirst("\\$\\{file:name.noext\\}",FileUtil.stripExt(onlyName));
  pattern=pattern.replaceFirst("\\$simple\\{file:name.noext\\}",FileUtil.stripExt(onlyName));
  if (StringHelper.hasStartToken(pattern,"simple")) {
    throw new ExpressionIllegalSyntaxException(fileName + ". Cannot resolve reminder: " + pattern);
  }
  String answer=pattern;
  if (ObjectHelper.isNotEmpty(path) && ObjectHelper.isNotEmpty(pattern)) {
    answer=path + getFileSeparator() + pattern;
    answer=path + File.separator + pattern;
  }
  if (getConfiguration().needToNormalize()) {
    answer=FileUtil.normalizePath(answer);
  }
  return answer;
}
