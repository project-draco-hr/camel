{
  Class<?> factory=null;
  try {
    FactoryFinder finder=getCamelContext().getFactoryFinder("META-INF/services/org/apache/camel/component/");
    if (log.isTraceEnabled()) {
      log.trace("Using FactoryFinder: " + finder);
    }
    factory=finder.findClass(getScheme(),"strategy.factory.");
  }
 catch (  ClassNotFoundException e) {
    if (log.isTraceEnabled()) {
      log.trace("'strategy.factory.class' not found",e);
    }
  }
catch (  IOException e) {
    if (log.isTraceEnabled()) {
      log.trace("No strategy factory defined in 'META-INF/services/org/apache/camel/component/'",e);
    }
  }
  if (factory == null) {
    try {
      if (log.isTraceEnabled()) {
        log.trace("Using ClassResolver to resolve class: " + DEFAULT_STRATEGYFACTORY_CLASS);
      }
      factory=this.getCamelContext().getClassResolver().resolveClass(DEFAULT_STRATEGYFACTORY_CLASS);
    }
 catch (    Exception e) {
      if (log.isTraceEnabled()) {
        log.trace("Cannot load class: " + DEFAULT_STRATEGYFACTORY_CLASS,e);
      }
    }
    try {
      if (log.isTraceEnabled()) {
        log.trace("Using classloader: " + this.getClass().getClassLoader() + " to resolve class: "+ DEFAULT_STRATEGYFACTORY_CLASS);
      }
      factory=this.getCamelContext().getClassResolver().resolveClass(DEFAULT_STRATEGYFACTORY_CLASS,this.getClass().getClassLoader());
    }
 catch (    Exception e) {
      if (log.isTraceEnabled()) {
        log.trace("Cannot load class: " + DEFAULT_STRATEGYFACTORY_CLASS + " using classloader: "+ this.getClass().getClassLoader(),e);
      }
    }
    if (factory == null) {
      throw new TypeNotPresentException(DEFAULT_STRATEGYFACTORY_CLASS + " class not found",null);
    }
  }
  try {
    Method factoryMethod=factory.getMethod("createGenericFileProcessStrategy",CamelContext.class,Map.class);
    return (GenericFileProcessStrategy<T>)ObjectHelper.invokeMethod(factoryMethod,null,getCamelContext(),getParamsAsMap());
  }
 catch (  NoSuchMethodException e) {
    throw new TypeNotPresentException(factory.getSimpleName() + ".createGenericFileProcessStrategy method not found",e);
  }
}
