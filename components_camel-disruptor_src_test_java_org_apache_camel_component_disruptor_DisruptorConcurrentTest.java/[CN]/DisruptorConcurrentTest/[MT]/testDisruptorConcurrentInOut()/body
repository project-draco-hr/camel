{
  final MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(20);
  mock.allMessages().body().startsWith("Bye");
  mock.setMinimumResultWaitTime(3000);
  final ExecutorService executors=Executors.newFixedThreadPool(10);
  final List<Object> replies=new ArrayList<Object>(20);
  for (int i=0; i < 20; i++) {
    final int num=i;
    final Object out=executors.submit(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return template.requestBody("disruptor:bar","Message " + num);
      }
    }
);
    replies.add(out);
  }
  assertMockEndpointsSatisfied();
  assertEquals(20,replies.size());
  executors.shutdownNow();
}
