{
  final String path="/camel/" + UUID.randomUUID().toString();
  final String value=UUID.randomUUID().toString();
  final EtcdClient client=getClient();
  final Map<String,Object> headers=new HashMap<>();
  headers.clear();
  headers.put(EtcdConstants.ETCD_ACTION,EtcdConstants.ETCD_KEYS_ACTION_SET);
  headers.put(EtcdConstants.ETCD_PATH,path);
  sendBody("direct:keys-set",value,headers);
  MockEndpoint mockSet=getMockEndpoint("mock:result-set");
  mockSet.expectedMinimumMessageCount(1);
  mockSet.expectedHeaderReceived(EtcdConstants.ETCD_NAMESPACE,EtcdNamespace.keys.name());
  mockSet.expectedHeaderReceived(EtcdConstants.ETCD_PATH,path);
  mockSet.assertIsSatisfied();
  headers.clear();
  headers.put(EtcdConstants.ETCD_ACTION,EtcdConstants.ETCD_KEYS_ACTION_GET);
  headers.put(EtcdConstants.ETCD_PATH,path);
  sendBody("direct:keys-get",value,headers);
  MockEndpoint mockGet=getMockEndpoint("mock:result-get");
  mockGet.expectedMinimumMessageCount(1);
  mockSet.expectedHeaderReceived(EtcdConstants.ETCD_NAMESPACE,EtcdNamespace.keys.name());
  mockGet.expectedHeaderReceived(EtcdConstants.ETCD_PATH,path);
  mockGet.expectedMessagesMatches(new Predicate(){
    @Override public boolean matches(    Exchange exchange){
      EtcdKeysResponse keysResponse=exchange.getIn().getBody(EtcdKeysResponse.class);
      assertNotNull(keysResponse);
      assertNotNull(keysResponse.node);
      assertNotNull(keysResponse.node.value);
      return keysResponse.node.value.equals(value);
    }
  }
);
  mockGet.assertIsSatisfied();
  headers.clear();
  headers.put(EtcdConstants.ETCD_ACTION,EtcdConstants.ETCD_KEYS_ACTION_DELETE);
  headers.put(EtcdConstants.ETCD_PATH,path);
  sendBody("direct:keys-del","value",headers);
  MockEndpoint mockDel=getMockEndpoint("mock:result-del");
  mockDel.expectedMinimumMessageCount(1);
  mockSet.expectedHeaderReceived(EtcdConstants.ETCD_NAMESPACE,EtcdNamespace.keys.name());
  mockDel.expectedHeaderReceived(EtcdConstants.ETCD_PATH,path);
  mockDel.assertIsSatisfied();
  client.get(path).send().get();
  fail("EtcdException should have been thrown");
}
