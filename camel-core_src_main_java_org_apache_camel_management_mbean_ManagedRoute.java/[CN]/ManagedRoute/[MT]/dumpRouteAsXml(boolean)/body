{
  String id=route.getId();
  RouteDefinition def=context.getRouteDefinition(id);
  if (def != null) {
    String xml=ModelHelper.dumpModelAsXml(context,def);
    if (resolvePlaceholders) {
      final AtomicBoolean changed=new AtomicBoolean();
      InputStream is=new ByteArrayInputStream(xml.getBytes());
      Document dom=XmlLineNumberParser.parseXml(is,new XmlLineNumberParser.XmlTextTransformer(){
        @Override public String transform(        String text){
          try {
            String after=getContext().resolvePropertyPlaceholders(text);
            if (!changed.get()) {
              changed.set(!text.equals(after));
            }
            return after;
          }
 catch (          Exception e) {
            return text;
          }
        }
      }
);
      if (changed.get()) {
        xml=context.getTypeConverter().mandatoryConvertTo(String.class,dom);
        RouteDefinition copy=ModelHelper.createModelFromXml(context,xml,RouteDefinition.class);
        xml=ModelHelper.dumpModelAsXml(context,copy);
      }
    }
    return xml;
  }
  return null;
}
