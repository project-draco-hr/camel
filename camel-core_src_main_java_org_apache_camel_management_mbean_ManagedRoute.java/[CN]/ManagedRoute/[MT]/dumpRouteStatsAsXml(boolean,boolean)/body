{
  StringBuilder sb=new StringBuilder();
  Long processorAccumulatedTime=0L;
  if (includeProcessors) {
    sb.append("  <processorStats>\n");
    MBeanServer server=getContext().getManagementStrategy().getManagementAgent().getMBeanServer();
    if (server != null) {
      String prefix=getContext().getManagementStrategy().getManagementAgent().getIncludeHostName() ? "*/" : "";
      ObjectName query=ObjectName.getInstance("org.apache.camel:context=" + prefix + getContext().getManagementName()+ ",type=processors,*");
      Set<ObjectName> names=server.queryNames(query,null);
      List<ManagedProcessorMBean> mps=new ArrayList<ManagedProcessorMBean>();
      for (      ObjectName on : names) {
        ManagedProcessorMBean processor=MBeanServerInvocationHandler.newProxyInstance(server,on,ManagedProcessorMBean.class,true);
        if (getRouteId().equals(processor.getRouteId())) {
          mps.add(processor);
        }
      }
      Collections.sort(mps,new OrderProcessorMBeans());
      Map<String,Long> accumulatedTimes=new HashMap<String,Long>();
      Collections.reverse(mps);
      for (      ManagedProcessorMBean processor : mps) {
        processorAccumulatedTime+=processor.getTotalProcessingTime();
        accumulatedTimes.put(processor.getProcessorId(),processorAccumulatedTime);
      }
      Collections.reverse(mps);
      for (      ManagedProcessorMBean processor : mps) {
        sb.append("    <processorStat").append(String.format(" id=\"%s\" index=\"%s\"",processor.getProcessorId(),processor.getIndex()));
        Long accTime=accumulatedTimes.get(processor.getProcessorId());
        if (accTime != null) {
          sb.append(" accumulatedProcessingTime=\"").append(accTime).append("\"");
        }
        sb.append(" ").append(processor.dumpStatsAsXml(fullStats).substring(7)).append("\n");
      }
    }
    sb.append("  </processorStats>\n");
  }
  long routeSelfTime=getTotalProcessingTime() - processorAccumulatedTime;
  if (routeSelfTime < 0) {
    routeSelfTime=0;
  }
  StringBuilder answer=new StringBuilder();
  answer.append("<routeStat").append(String.format(" id=\"%s\"",route.getId()));
  String stat=dumpStatsAsXml(fullStats);
  answer.append(" selfProcessingTime=\"").append(routeSelfTime).append("\"");
  answer.append(" ").append(stat.substring(7,stat.length() - 2)).append(">\n");
  if (includeProcessors) {
    answer.append(sb);
  }
  answer.append("</routeStat>");
  return answer.toString();
}
