{
  getMockEndpoint("mock:foo").expectedMessageCount(5);
  getMockEndpoint("mock:bar").expectedMessageCount(5);
  getMockEndpoint("mock:baz").expectedMessageCount(5);
  for (int i=0; i < 10; i++) {
    if (i % 2 == 0) {
      template.sendBody("seda:foo","Hello " + i);
    }
 else {
      template.sendBody("seda:bar","Hello " + i);
    }
  }
  assertMockEndpointsSatisfied();
  MetricRegistry registry=context.getRegistry().findByType(MetricRegistry.class).iterator().next();
  assertEquals(3,registry.getNames().size());
  MetricsMessageHistoryService service=context.hasService(MetricsMessageHistoryService.class);
  assertNotNull(service);
  String json=service.dumpStatisticsAsJson();
  assertNotNull(json);
  log.info(json);
  assertTrue(json.contains("foo.history"));
  assertTrue(json.contains("bar.history"));
  assertTrue(json.contains("baz.history"));
}
