{
  DataSource target=null;
  DataSource ds=resolveAndRemoveReferenceParameter(parameters,"dataSource",DataSource.class);
  if (ds != null) {
    target=ds;
  }
  String dataSourceRef=getAndRemoveParameter(parameters,"dataSourceRef",String.class);
  if (target == null && dataSourceRef != null) {
    target=CamelContextHelper.mandatoryLookup(getCamelContext(),dataSourceRef,DataSource.class);
  }
  if (target == null) {
    target=getDataSource();
  }
  if (target == null) {
    throw new IllegalArgumentException("DataSource must be configured");
  }
  NamedParameterJdbcTemplate jdbcTemplate=new NamedParameterJdbcTemplate(target);
  IntrospectionSupport.setProperties(jdbcTemplate,parameters,"template.");
  String elsqlName=remaining;
  String resUri=resourceUri;
  String[] part=remaining.split(":");
  if (part.length == 2) {
    elsqlName=part[0];
    resUri=part[1];
  }
 else   if (part.length > 2) {
    throw new IllegalArgumentException("Invalid uri. Must by elsql:elsqlName:resourceUri, was: " + uri);
  }
  String onConsume=getAndRemoveParameter(parameters,"consumer.onConsume",String.class);
  if (onConsume == null) {
    onConsume=getAndRemoveParameter(parameters,"onConsume",String.class);
  }
  String onConsumeFailed=getAndRemoveParameter(parameters,"consumer.onConsumeFailed",String.class);
  if (onConsumeFailed == null) {
    onConsumeFailed=getAndRemoveParameter(parameters,"onConsumeFailed",String.class);
  }
  String onConsumeBatchComplete=getAndRemoveParameter(parameters,"consumer.onConsumeBatchComplete",String.class);
  if (onConsumeBatchComplete == null) {
    onConsumeBatchComplete=getAndRemoveParameter(parameters,"onConsumeBatchComplete",String.class);
  }
  ElsqlEndpoint endpoint=new ElsqlEndpoint(uri,this,jdbcTemplate,elsqlName,resUri);
  endpoint.setElSqlConfig(elSqlConfig);
  endpoint.setDatabaseVendor(databaseVendor);
  endpoint.setDataSource(ds);
  endpoint.setDataSourceRef(dataSourceRef);
  endpoint.setOnConsume(onConsume);
  endpoint.setOnConsumeFailed(onConsumeFailed);
  endpoint.setOnConsumeBatchComplete(onConsumeBatchComplete);
  return endpoint;
}
