{
  if (!canTest()) {
    return;
  }
  Throttler throttler=new Throttler(context,null,constant(1),1000,null,false,true);
  AsyncCallback callback=new AsyncCallback(){
    @Override public void done(    boolean doneSync){
    }
  }
;
  throttler.calculateDelay(new DefaultExchange(context));
  boolean exceptionThrown=false;
  DefaultExchange exchange=null;
  try {
    long delay=throttler.calculateDelay(new DefaultExchange(context));
    exchange=new DefaultExchange(context);
    throttler.processDelay(exchange,callback,delay);
  }
 catch (  ThrottlerRejectedExecutionException e) {
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown || exchange.getException().getClass() == ThrottlerRejectedExecutionException.class);
}
