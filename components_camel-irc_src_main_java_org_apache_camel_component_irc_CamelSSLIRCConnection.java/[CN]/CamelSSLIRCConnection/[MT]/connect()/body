{
  if (sslContextParameters == null) {
    super.connect();
  }
 else {
    if (level != 0) {
      throw new SocketException("Socket closed or already open (" + level + ")");
    }
    IOException exception=null;
    final SSLContext sslContext;
    try {
      sslContext=sslContextParameters.createSSLContext(camelContext);
    }
 catch (    GeneralSecurityException e) {
      throw new RuntimeCamelException("Error in SSLContextParameters configuration or instantiation.",e);
    }
    final SSLSocketFactory sf=sslContext.getSocketFactory();
    SSLSocket s=null;
    for (int i=0; i < ports.length && s == null; i++) {
      try {
        s=(SSLSocket)sf.createSocket(host,ports[i]);
        s.startHandshake();
        exception=null;
      }
 catch (      SSLNotSupportedException exc) {
        if (s != null) {
          s.close();
        }
        s=null;
        throw exc;
      }
catch (      IOException exc) {
        if (s != null) {
          s.close();
        }
        s=null;
        exception=exc;
      }
    }
    if (exception != null) {
      throw exception;
    }
    prepare(s);
  }
}
