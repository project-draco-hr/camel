{
  replyEndpoint.expectedBodiesReceived("Hello Willem","Hello Jonathan","Hello Freeman");
  reply2Endpoint.expectedBodiesReceived("Bye Claus","Bye Jonathan","Bye Freeman");
  outputEndpoint.expectedBodiesReceived("Hello Willem","Bye Claus","Bye Jonathan","Hello Freeman");
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put(CxfConstants.OPERATION_NAME,"greetMe");
  headers.put("foo","cxf:bean:clientEndpoint?address=http://localhost:9002/SoapContext/SoapPort");
  Object out=template.requestBodyAndHeaders("direct:start","Willem",headers,String.class);
  assertEquals("Hello Willem",out);
  headers.put("foo","cxf:bean:clientEndpoint?address=http://localhost:9003/SoapContext/SoapPort");
  String out2=template.requestBodyAndHeaders("direct:start","Claus",headers,String.class);
  assertEquals("Bye Claus",out2);
  headers.put("foo","cxf:bean:clientEndpoint?address=http://localhost:9002/SoapContext/SoapPort" + ",cxf:bean:clientEndpoint?address=http://localhost:9003/SoapContext/SoapPort");
  String out3=template.requestBodyAndHeaders("direct:start","Jonathan",headers,String.class);
  assertEquals("Bye Jonathan",out3);
  headers.put("foo","cxf:bean:clientEndpoint?address=http://localhost:9003/SoapContext/SoapPort" + ",cxf:bean:clientEndpoint?address=http://localhost:9002/SoapContext/SoapPort");
  String out4=template.requestBodyAndHeaders("direct:start","Freeman",headers,String.class);
  assertEquals("Hello Freeman",out4);
  replyEndpoint.assertIsSatisfied();
  reply2Endpoint.assertIsSatisfied();
  outputEndpoint.assertIsSatisfied();
}
