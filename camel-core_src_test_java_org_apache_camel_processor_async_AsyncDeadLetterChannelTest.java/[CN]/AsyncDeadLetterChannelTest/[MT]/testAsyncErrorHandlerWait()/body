{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).delay(0).logStackTrace(false));
      from("direct:in").async(2).to("mock:foo").process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          throw new Exception("Forced exception by unit test");
        }
      }
);
    }
  }
);
  context.start();
  getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World");
  MockEndpoint mock=getMockEndpoint("mock:dead");
  mock.expectedMessageCount(1);
  mock.message(0).header(Exchange.REDELIVERED).isEqualTo(Boolean.TRUE);
  mock.message(0).header(Exchange.REDELIVERY_COUNTER).isEqualTo(2);
  try {
    template.sendBody("direct:in","Hello World");
    fail("Should have thrown a CamelExecutionException");
  }
 catch (  CamelExecutionException e) {
    assertEquals("Forced exception by unit test",e.getCause().getMessage());
  }
  assertMockEndpointsSatisfied();
}
