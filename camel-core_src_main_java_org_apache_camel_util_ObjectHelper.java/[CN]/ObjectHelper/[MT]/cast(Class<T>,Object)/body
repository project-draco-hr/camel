{
  if (toType == boolean.class) {
    return (T)cast(Boolean.class,value);
  }
 else   if (toType.isPrimitive()) {
    Class<?> newType=convertPrimitiveTypeToWrapperType(toType);
    if (newType != toType) {
      return (T)cast(newType,value);
    }
  }
  try {
    return toType.cast(value);
  }
 catch (  ClassCastException e) {
    throw new IllegalArgumentException("Failed to convert: " + value + " to type: "+ toType.getName()+ " due to: "+ e,e);
  }
}
