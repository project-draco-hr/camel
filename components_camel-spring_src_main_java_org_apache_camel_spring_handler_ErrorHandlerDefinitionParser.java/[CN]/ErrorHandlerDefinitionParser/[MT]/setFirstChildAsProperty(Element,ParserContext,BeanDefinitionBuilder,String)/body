{
  Element first=getFirstElement(element);
  if (first == null) {
    throw new IllegalStateException(propertyName + " property must have child elements!");
  }
  String id;
  BeanDefinition child;
  if (first.getNamespaceURI().equals(BeanDefinitionParserDelegate.BEANS_NAMESPACE_URI)) {
    String name=first.getLocalName();
    if ("ref".equals(name)) {
      id=first.getAttribute("bean");
      if (id == null) {
        throw new IllegalStateException("<ref> elements must have a \"bean\" attribute!");
      }
      bean.addPropertyReference(propertyName,id);
      return;
    }
 else     if ("bean".equals(name)) {
      BeanDefinitionHolder bdh=ctx.getDelegate().parseBeanDefinitionElement(first);
      child=bdh.getBeanDefinition();
      bean.addPropertyValue(propertyName,child);
      return;
    }
 else {
      throw new UnsupportedOperationException("Elements with the name " + name + " are not currently "+ "supported as sub elements of "+ element.getLocalName());
    }
  }
  child=ctx.getDelegate().parseCustomElement(first,bean.getBeanDefinition());
  bean.addPropertyValue(propertyName,child);
}
