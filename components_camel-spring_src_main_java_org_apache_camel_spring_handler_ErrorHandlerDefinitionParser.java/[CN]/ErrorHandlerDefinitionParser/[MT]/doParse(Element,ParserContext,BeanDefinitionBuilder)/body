{
  super.doParse(element,parserContext,builder);
  ErrorHandlerType type=ErrorHandlerType.DefaultErrorHandler;
  if (ObjectHelper.isNotEmpty(element.getAttribute("type"))) {
    type=ErrorHandlerType.valueOf(element.getAttribute("type"));
  }
  if (type.equals(ErrorHandlerType.NoErrorHandler) || type.equals(ErrorHandlerType.LoggingErrorHandler)) {
    return;
  }
  if (type.equals(ErrorHandlerType.DefaultErrorHandler) || type.equals(ErrorHandlerType.DeadLetterChannel) || type.equals(ErrorHandlerType.TransactionErrorHandler)) {
    NodeList list=element.getChildNodes();
    int size=list.getLength();
    for (int i=0; i < size; i++) {
      Node child=list.item(i);
      if (child instanceof Element) {
        Element childElement=(Element)child;
        String localName=child.getLocalName();
        if (localName.equals("redeliveryPolicy")) {
          BeanDefinition redeliveryPolicyDefinition=redeliveryPolicyParser.parse(childElement,parserContext);
          builder.addPropertyValue(localName,redeliveryPolicyDefinition);
        }
      }
    }
    parserRefAttribute(element,"onRedeliveryRef","onRedelivery",builder);
  }
  if (type.equals(ErrorHandlerType.TransactionErrorHandler)) {
    parserRefAttribute(element,"transactionTemplateRef","transactionTemplate",builder);
    parserRefAttribute(element,"transactionManagerRef","transactionManager",builder);
  }
}
