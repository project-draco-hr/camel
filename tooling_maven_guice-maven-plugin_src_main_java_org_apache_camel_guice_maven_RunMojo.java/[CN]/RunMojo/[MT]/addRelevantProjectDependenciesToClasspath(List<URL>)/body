{
  if (this.includeProjectDependencies) {
    try {
      getLog().debug("Project Dependencies will be included.");
      URL mainClasses=new File(project.getBuild().getOutputDirectory()).toURI().toURL();
      getLog().debug("Adding to classpath : " + mainClasses);
      path.add(mainClasses);
      Set<Artifact> dependencies=CastUtils.cast(project.getArtifacts());
      dependencies.addAll(getAllNonTestScopedDependencies());
      Iterator iter=dependencies.iterator();
      while (iter.hasNext()) {
        Artifact classPathElement=(Artifact)iter.next();
        getLog().debug("Adding project dependency artifact: " + classPathElement.getArtifactId() + " to classpath");
        File file=classPathElement.getFile();
        if (file != null) {
          path.add(file.toURI().toURL());
        }
      }
    }
 catch (    MalformedURLException e) {
      throw new MojoExecutionException("Error during setting up classpath",e);
    }
  }
 else {
    getLog().debug("Project Dependencies will be excluded.");
  }
}
