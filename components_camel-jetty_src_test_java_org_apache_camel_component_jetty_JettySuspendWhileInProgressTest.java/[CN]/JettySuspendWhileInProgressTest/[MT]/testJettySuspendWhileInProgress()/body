{
  context.getShutdownStrategy().setTimeout(50);
  Future<String> reply=template.asyncRequestBodyAndHeader(serverUri,null,"name","Camel",String.class);
  Executors.newSingleThreadExecutor().execute(new Runnable(){
    public void run(){
      try {
        Thread.sleep(2000);
        context.stop();
      }
 catch (      Exception e) {
      }
    }
  }
);
  Thread.sleep(5000);
  Future<String> reply2=template.asyncRequestBodyAndHeader(serverUri,null,"name","Tiger",String.class);
  assertEquals("Bye Camel",reply.get(20,TimeUnit.SECONDS));
  try {
    reply2.get(20,TimeUnit.SECONDS);
    fail("Should throw exception");
  }
 catch (  Exception e) {
    RuntimeCamelException rce=assertIsInstanceOf(RuntimeCamelException.class,e.getCause());
    HttpOperationFailedException hofe=assertIsInstanceOf(HttpOperationFailedException.class,rce.getCause());
    assertEquals(503,hofe.getStatusCode());
  }
}
