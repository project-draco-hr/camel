{
  FluentProducerTemplate template=FluentProducerTemplate.on(context);
  final Integer expectedResult=new Integer(123);
  assertEquals(expectedResult,template.clearBody().clearHeaders().withBody("Hello").to("direct:inout").request(Integer.class));
  assertEquals(expectedResult,template.clearBody().clearHeaders().withHeader("foo","bar").withBody("Hello").to("direct:inout").request(Integer.class));
  assertEquals(expectedResult,template.clearBody().clearHeaders().withBody("Hello").to("direct:inout").request(Integer.class));
  assertEquals(expectedResult,template.clearBody().clearHeaders().withBody("Hello").to(context.getEndpoint("direct:inout")).request(Integer.class));
  assertEquals(expectedResult,template.clearBody().clearHeaders().withHeader("foo","bar").withBody("Hello").to(context.getEndpoint("direct:inout")).request(Integer.class));
  assertEquals(expectedResult,template.clearBody().clearHeaders().withBody("Hello").to(context.getEndpoint("direct:inout")).request(Integer.class));
}
