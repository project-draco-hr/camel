{
  String serviceName;
  if (name.contains("/")) {
    serviceName=ObjectHelper.before(name,"/");
    this.contextPath=ObjectHelper.after(name,"/");
  }
 else   if (name.contains("?")) {
    serviceName=ObjectHelper.before(name,"?");
    this.contextPath=ObjectHelper.after(name,"?");
  }
 else {
    serviceName=name;
    this.contextPath=null;
  }
  if (serviceName.contains(":")) {
    this.scheme=ObjectHelper.before(serviceName,":");
    this.name=ObjectHelper.after(serviceName,":");
  }
 else {
    this.scheme=scheme;
    this.name=serviceName;
  }
  if (namespace == null) {
    this.namespace=System.getenv("KUBERNETES_NAMESPACE");
  }
 else {
    this.namespace=namespace;
  }
  this.uri=uri;
  this.exchangePattern=exchangePattern;
  this.dnsDomain=dnsDomain;
  this.serviceCallExpression=new KubernetesServiceCallExpression(this.name,this.scheme,this.contextPath,this.uri);
}
