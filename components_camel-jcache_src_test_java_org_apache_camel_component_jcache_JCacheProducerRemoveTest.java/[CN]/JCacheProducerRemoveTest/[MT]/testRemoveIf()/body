{
  final Map<String,Object> headers=new HashMap<>();
  final Cache<Object,Object> cache=getCacheFromEndpoint("jcache://test-cache");
  final String key=randomString();
  final String val=randomString();
  cache.put(key,val);
  headers.clear();
  headers.put(JCacheConstants.ACTION,"REMOVE");
  headers.put(JCacheConstants.KEY,key);
  headers.put(JCacheConstants.OLD_VALUE,val);
  sendBody("direct:remove-if",null,headers);
  MockEndpoint mock=getMockEndpoint("mock:remove-if");
  mock.expectedMinimumMessageCount(1);
  mock.expectedHeaderReceived(JCacheConstants.KEY,key);
  mock.expectedHeaderReceived(JCacheConstants.RESULT,true);
  mock.assertIsSatisfied();
  assertFalse(cache.containsKey(key));
}
