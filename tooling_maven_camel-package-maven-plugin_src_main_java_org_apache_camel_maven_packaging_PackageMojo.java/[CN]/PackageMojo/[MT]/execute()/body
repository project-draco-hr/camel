{
  File camelMetaDir=new File(outDir,"META-INF/services/org/apache/camel");
  File componentMetaDir=new File(camelMetaDir,"component");
  if (!componentMetaDir.exists()) {
    getLog().warn("No " + componentMetaDir + " directory found. Are you sure you have created a Camel component?");
  }
 else {
    File[] files=componentMetaDir.listFiles();
    if (files != null) {
      Properties properties=new Properties();
      StringBuilder buffer=new StringBuilder();
      for (      File file : files) {
        String name=file.getName();
        if (buffer.length() > 0) {
          buffer.append(" ");
        }
        buffer.append(name);
      }
      String names=buffer.toString();
      properties.put("components",names);
      properties.put("groupId",project.getGroupId());
      properties.put("artifactId",project.getArtifactId());
      properties.put("version",project.getVersion());
      properties.put("projectName",project.getName());
      properties.put("projectDescription",project.getDescription());
      File outFile=new File(camelMetaDir,"component.properties");
      try {
        properties.store(new FileWriter(outFile),"Generated by camel-package-maven-plugin");
        getLog().info("Generated " + outFile + " containing the Camel "+ (files.length > 1 ? "components " : "component ")+ names);
        if (projectHelper != null) {
          List<String> includes=new ArrayList<String>();
          includes.add("**/component.properties");
          projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>());
          projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);
        }
      }
 catch (      IOException e) {
        throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);
      }
    }
  }
}
