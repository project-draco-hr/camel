{
  HystrixCommandProperties.Setter commandDefaults=HystrixCommandProperties.Setter();
  setter.andCommandPropertiesDefaults(commandDefaults);
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_COMMAND_KEY,configuration.getCommandKey(),String.class) != null) {
    setter.andCommandKey(HystrixCommandKey.Factory.asKey(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_COMMAND_KEY,configuration.getCommandKey(),String.class)));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_ENABLED,configuration.getCircuitBreakerEnabled(),Boolean.class) != null) {
    commandDefaults.withCircuitBreakerEnabled(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_ENABLED,configuration.getCircuitBreakerEnabled(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_ERROR_THRESHOLD_PERCENTAGE,configuration.getCircuitBreakerErrorThresholdPercentage(),Integer.class) != null) {
    commandDefaults.withCircuitBreakerErrorThresholdPercentage(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_ERROR_THRESHOLD_PERCENTAGE,configuration.getCircuitBreakerErrorThresholdPercentage(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_FORCE_CLOSED,configuration.getCircuitBreakerForceClosed(),Boolean.class) != null) {
    commandDefaults.withCircuitBreakerForceClosed(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_FORCE_CLOSED,configuration.getCircuitBreakerForceClosed(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_FORCE_OPEN,configuration.getCircuitBreakerForceOpen(),Boolean.class) != null) {
    commandDefaults.withCircuitBreakerForceOpen(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_FORCE_OPEN,configuration.getCircuitBreakerForceOpen(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_REQUEST_VOLUME_THRESHOLD,configuration.getCircuitBreakerRequestVolumeThreshold(),Integer.class) != null) {
    commandDefaults.withCircuitBreakerRequestVolumeThreshold(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_REQUEST_VOLUME_THRESHOLD,configuration.getCircuitBreakerRequestVolumeThreshold(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_SLEEP_WINDOW_IN_MILLISECONDS,configuration.getCircuitBreakerSleepWindowInMilliseconds(),Integer.class) != null) {
    commandDefaults.withCircuitBreakerSleepWindowInMilliseconds(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_CIRCUIT_BREAKER_SLEEP_WINDOW_IN_MILLISECONDS,configuration.getCircuitBreakerSleepWindowInMilliseconds(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_ISOLATION_SEMAPHORE_MAX_CONCURRENT_REQUESTS,configuration.getExecutionIsolationSemaphoreMaxConcurrentRequests(),Integer.class) != null) {
    commandDefaults.withExecutionIsolationSemaphoreMaxConcurrentRequests(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_ISOLATION_SEMAPHORE_MAX_CONCURRENT_REQUESTS,configuration.getExecutionIsolationSemaphoreMaxConcurrentRequests(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_ISOLATION_STRATEGY,configuration.getExecutionIsolationStrategy(),String.class) != null) {
    commandDefaults.withExecutionIsolationStrategy(HystrixCommandProperties.ExecutionIsolationStrategy.valueOf(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_ISOLATION_STRATEGY,configuration.getExecutionIsolationStrategy(),String.class)));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_ISOLATION_THREAD_INTERRUPTION_ON_TIMEOUT,configuration.getExecutionIsolationThreadInterruptOnTimeout(),Boolean.class) != null) {
    commandDefaults.withExecutionIsolationThreadInterruptOnTimeout(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_ISOLATION_THREAD_INTERRUPTION_ON_TIMEOUT,configuration.getExecutionIsolationThreadInterruptOnTimeout(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_TIMEOUT_IN_MILLISECONDS,configuration.getExecutionTimeoutInMilliseconds(),Integer.class) != null) {
    commandDefaults.withExecutionTimeoutInMilliseconds(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_TIMEOUT_IN_MILLISECONDS,configuration.getExecutionTimeoutInMilliseconds(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_TIMEOUT_ENABLED,configuration.getExecutionTimeoutEnabled(),Boolean.class) != null) {
    commandDefaults.withExecutionTimeoutEnabled(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_EXECUTION_TIMEOUT_ENABLED,configuration.getExecutionTimeoutEnabled(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_FALLBACK_ISOLATION_SEMAPHORE_MAX_CONCURRENT_REQUESTS,configuration.getFallbackIsolationSemaphoreMaxConcurrentRequests(),Integer.class) != null) {
    commandDefaults.withFallbackIsolationSemaphoreMaxConcurrentRequests(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_FALLBACK_ISOLATION_SEMAPHORE_MAX_CONCURRENT_REQUESTS,configuration.getFallbackIsolationSemaphoreMaxConcurrentRequests(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_FALLBACK_ENABLED,configuration.getFallbackEnabled(),Boolean.class) != null) {
    commandDefaults.withFallbackEnabled(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_FALLBACK_ENABLED,configuration.getFallbackEnabled(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_HEALTH_SNAPSHOT_INTERVAL_IN_MILLISECONDS,configuration.getMetricsHealthSnapshotIntervalInMilliseconds(),Integer.class) != null) {
    commandDefaults.withMetricsHealthSnapshotIntervalInMilliseconds(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_HEALTH_SNAPSHOT_INTERVAL_IN_MILLISECONDS,configuration.getMetricsHealthSnapshotIntervalInMilliseconds(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_BUCKET_SIZE,configuration.getMetricsRollingPercentileBucketSize(),Integer.class) != null) {
    commandDefaults.withMetricsRollingPercentileBucketSize(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_BUCKET_SIZE,configuration.getMetricsRollingPercentileBucketSize(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_ENABLED,configuration.getMetricsRollingPercentileEnabled(),Boolean.class) != null) {
    commandDefaults.withMetricsRollingPercentileEnabled(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_ENABLED,configuration.getMetricsRollingPercentileEnabled(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_WINDOW_IN_MILLISECONDS,configuration.getMetricsRollingPercentileWindowInMilliseconds(),Integer.class) != null) {
    commandDefaults.withMetricsRollingPercentileWindowInMilliseconds(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_WINDOW_IN_MILLISECONDS,configuration.getMetricsRollingPercentileWindowInMilliseconds(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_WINDOW_BUCKETS,configuration.getMetricsRollingPercentileWindowBuckets(),Integer.class) != null) {
    commandDefaults.withMetricsRollingPercentileWindowBuckets(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_PERCENTILE_WINDOW_BUCKETS,configuration.getMetricsRollingPercentileWindowBuckets(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_STATISTICAL_WINDOW_IN_MILLISECONDS,configuration.getMetricsRollingStatisticalWindowInMilliseconds(),Integer.class) != null) {
    commandDefaults.withMetricsRollingStatisticalWindowInMilliseconds(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_STATISTICAL_WINDOW_IN_MILLISECONDS,configuration.getMetricsRollingStatisticalWindowInMilliseconds(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_STATISTICAL_WINDOW_BUCKETS,configuration.getMetricsRollingStatisticalWindowBuckets(),Integer.class) != null) {
    commandDefaults.withMetricsRollingStatisticalWindowBuckets(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_METRICS_ROLLING_STATISTICAL_WINDOW_BUCKETS,configuration.getMetricsRollingStatisticalWindowBuckets(),Integer.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_REQUEST_CACHE_ENABLED,configuration.getRequestCacheEnabled(),Boolean.class) != null) {
    commandDefaults.withRequestCacheEnabled(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_REQUEST_CACHE_ENABLED,configuration.getRequestCacheEnabled(),Boolean.class));
  }
  if (exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_REQUEST_LOG_ENABLED,configuration.getRequestLogEnabled(),Boolean.class) != null) {
    commandDefaults.withRequestLogEnabled(exchange.getIn().getHeader(HystrixConstants.CAMEL_HYSTRIX_REQUEST_LOG_ENABLED,configuration.getRequestLogEnabled(),Boolean.class));
  }
}
