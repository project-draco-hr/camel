{
  String operation;
  if (ObjectHelper.isEmpty(endpoint.getOperation())) {
    operation=exchange.getIn().getHeader(GitConstants.GIT_OPERATION,String.class);
  }
 else {
    operation=endpoint.getOperation();
  }
  if (ObjectHelper.isEmpty(endpoint.getLocalPath())) {
    throw new IllegalArgumentException("Local path must specified to execute " + operation);
  }
switch (operation) {
case GitOperation.CLONE_OPERATION:
    doClone(exchange,operation);
  break;
case GitOperation.INIT_OPERATION:
doInit(exchange,operation);
break;
case GitOperation.ADD_OPERATION:
doAdd(exchange,operation);
break;
case GitOperation.REMOVE_OPERATION:
doRemove(exchange,operation);
break;
case GitOperation.COMMIT_OPERATION:
doCommit(exchange,operation);
break;
case GitOperation.COMMIT_ALL_OPERATION:
doCommitAll(exchange,operation);
break;
case GitOperation.CREATE_BRANCH_OPERATION:
doCreateBranch(exchange,operation);
break;
case GitOperation.DELETE_BRANCH_OPERATION:
doDeleteBranch(exchange,operation);
break;
case GitOperation.STATUS_OPERATION:
doStatus(exchange,operation);
break;
case GitOperation.LOG_OPERATION:
doLog(exchange,operation);
break;
case GitOperation.PUSH_OPERATION:
doPush(exchange,operation);
break;
case GitOperation.PULL_OPERATION:
doPull(exchange,operation);
break;
case GitOperation.CREATE_TAG_OPERATION:
doCreateTag(exchange,operation);
break;
case GitOperation.DELETE_TAG_OPERATION:
doDeleteTag(exchange,operation);
break;
default :
throw new IllegalArgumentException("Local path must specified to execute " + operation);
}
}
