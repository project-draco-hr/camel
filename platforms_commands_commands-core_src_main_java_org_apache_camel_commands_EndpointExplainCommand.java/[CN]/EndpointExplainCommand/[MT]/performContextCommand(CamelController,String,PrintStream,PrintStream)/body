{
  List<Map<String,String>> endpoints=camelController.getEndpoints(contextName);
  if (endpoints == null || endpoints.isEmpty()) {
    return null;
  }
  if (filter != null) {
    Iterator<Map<String,String>> it=endpoints.iterator();
    while (it.hasNext()) {
      Map<String,String> row=it.next();
      if (!EndpointHelper.matchPattern(row.get("uri"),filter)) {
        it.remove();
      }
    }
  }
  for (  Map<String,String> row : endpoints) {
    String json=camelController.explainEndpointAsJSon(context,row.get("uri"),verbose);
    if (json == null) {
      continue;
    }
    out.println("Context:       " + context);
    String uri=URISupport.sanitizeUri(row.get("uri"));
    String header="Uri:           " + uri;
    out.println(header);
    for (int i=0; i < header.length(); i++) {
      out.print('-');
    }
    out.println();
    List<Map<String,String>> options=JsonSchemaHelper.parseJsonSchema("properties",json,true);
    Collections.sort(options,new Comparator<Map<String,String>>(){
      @Override public int compare(      Map<String,String> o1,      Map<String,String> o2){
        int answer=-1 * o1.get("kind").compareTo(o2.get("kind"));
        if (answer == 0) {
          answer=o1.get("name").compareTo(o2.get("name"));
        }
        return answer;
      }
    }
);
    for (    Map<String,String> option : options) {
      out.print("Option:        ");
      out.println(option.get("name"));
      out.print("Kind:          ");
      out.println(option.get("kind"));
      String type=option.get("type");
      if (type != null) {
        out.print("Type:          ");
        out.println(type);
      }
      String javaType=option.get("javaType");
      if (javaType != null) {
        out.print("Java Type:     ");
        out.println(javaType);
      }
      String value=option.get("value");
      if (value != null) {
        out.print("Value:         ");
        out.println(value);
      }
      String defaultValue=option.get("defaultValue");
      if (defaultValue != null) {
        out.print("Default Value: ");
        out.println(defaultValue);
      }
      String description=option.get("description");
      if (description != null) {
        out.print("Description:   ");
        out.println(description);
      }
      out.println();
    }
    if (options.isEmpty()) {
      out.println();
    }
  }
  return null;
}
