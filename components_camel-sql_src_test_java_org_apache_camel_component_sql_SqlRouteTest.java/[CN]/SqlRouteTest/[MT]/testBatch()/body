{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(1);
  List<?> data=Arrays.asList(Arrays.asList(6,"abc","def"),Arrays.asList(7,"ghi","jkl"),Arrays.asList(8,"mno","pqr"));
  template.sendBody("direct:batch",data);
  mock.assertIsSatisfied();
  Number received=assertIsInstanceOf(Number.class,mock.getReceivedExchanges().get(0).getIn().getHeader(SqlConstants.SQL_UPDATE_COUNT));
  assertEquals(3,received.intValue());
  assertEquals("abc",jdbcTemplate.queryForObject("select project from projects where id = 6",String.class));
  assertEquals("def",jdbcTemplate.queryForObject("select license from projects where id = 6",String.class));
  assertEquals("ghi",jdbcTemplate.queryForObject("select project from projects where id = 7",String.class));
  assertEquals("jkl",jdbcTemplate.queryForObject("select license from projects where id = 7",String.class));
  assertEquals("mno",jdbcTemplate.queryForObject("select project from projects where id = 8",String.class));
  assertEquals("pqr",jdbcTemplate.queryForObject("select license from projects where id = 8",String.class));
}
