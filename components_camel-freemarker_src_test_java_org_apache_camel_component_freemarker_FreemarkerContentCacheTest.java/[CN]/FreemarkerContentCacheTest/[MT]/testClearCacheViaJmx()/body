{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedBodiesReceived("Hello London");
  template.sendBodyAndHeader("direct:b","Body","name","London");
  mock.assertIsSatisfied();
  template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/freemarker?fileExist=Override","Bye ${headers.name}",Exchange.FILE_NAME,"hello.ftl");
  mock.reset();
  mock.expectedBodiesReceived("Hello Paris");
  template.sendBodyAndHeader("direct:b","Body","name","Paris");
  mock.assertIsSatisfied();
  MBeanServer mbeanServer=context.getManagementStrategy().getManagementAgent().getMBeanServer();
  Set<ObjectName> objNameSet=mbeanServer.queryNames(new ObjectName("org.apache.camel:type=endpoints,name=\"freemarker:*contentCache=true*\",*"),null);
  ObjectName managedObjName=new ArrayList<ObjectName>(objNameSet).get(0);
  mbeanServer.invoke(managedObjName,"clearContentCache",null,null);
  template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/freemarker?fileExist=Override","Bye ${headers.name}",Exchange.FILE_NAME,"hello.ftl");
  mock.reset();
  mock.expectedBodiesReceived("Bye Paris");
  template.sendBodyAndHeader("direct:b","Body","name","Paris");
  mock.assertIsSatisfied();
  template.sendBodyAndHeader("file://target/test-classes/org/apache/camel/component/freemarker?fileExist=Override","Hello ${headers.name}",Exchange.FILE_NAME,"hello.ftl");
  mock.reset();
  mock.expectedBodiesReceived("Bye Paris");
  template.sendBodyAndHeader("direct:b","Body","name","Paris");
  mock.assertIsSatisfied();
}
