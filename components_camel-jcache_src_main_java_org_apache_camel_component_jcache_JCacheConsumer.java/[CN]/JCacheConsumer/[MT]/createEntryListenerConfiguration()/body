{
  return new MutableCacheEntryListenerConfiguration<>(new Factory<CacheEntryListener<Object,Object>>(){
    @Override public CacheEntryListener<Object,Object> create(){
      return new JCacheEntryEventListener(){
        @Override protected void onEvents(        Iterable<CacheEntryEvent<?,?>> events){
          for (          CacheEntryEvent<?,?> event : events) {
            Exchange exchange=getEndpoint().createExchange();
            Message message=exchange.getIn();
            message.setHeader(JCacheConstants.EVENT_TYPE,event.getEventType().name());
            message.setHeader(JCacheConstants.KEY,event.getKey());
            message.setBody(event.getValue());
            if (event.isOldValueAvailable()) {
              message.setHeader(JCacheConstants.OLD_VALUE,event.getOldValue());
            }
            try {
              getProcessor().process(exchange);
            }
 catch (            Exception e) {
              LOGGER.error("Error processing event ",e);
            }
          }
        }
      }
;
    }
  }
,new Factory<CacheEntryEventFilter<Object,Object>>(){
    @Override public CacheEntryEventFilter<Object,Object> create(){
      return getJCacheEndpoint().getManager().getEventFilter();
    }
  }
,getJCacheEndpoint().getManager().getConfiguration().isOldValueRequired(),getJCacheEndpoint().getManager().getConfiguration().isSynchronous());
}
