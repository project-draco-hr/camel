{
  boolean result=false;
  ExchangePattern pattern;
  if (isExpectReply()) {
    pattern=ExchangePattern.InOut;
  }
 else {
    pattern=ExchangePattern.InOnly;
  }
  Exchange inExchange=new DefaultExchange(getCamelContext(),pattern);
  SpringIntegrationBinding.storeToCamelMessage(message,inExchange.getIn());
  Exchange outExchange=getCamelTemplate().send(getCamelEndpointUri(),inExchange);
  org.apache.camel.Message camelMsg=outExchange.hasOut() ? outExchange.getOut() : outExchange.getIn();
  if (camelMsg.isFault()) {
    result=true;
  }
  Message<?> response;
  if (isExpectReply()) {
    response=SpringIntegrationBinding.storeToSpringIntegrationMessage(outExchange.getOut());
    if (replyChannel == null) {
      MessageChannel messageReplyChannel=(MessageChannel)message.getHeaders().get(MessageHeaders.REPLY_CHANNEL);
      if (messageReplyChannel != null) {
        result=messageReplyChannel.send(response);
      }
 else {
        throw new MessageDeliveryException(response,"Cannot resolve ReplyChannel from message: " + message);
      }
    }
 else {
      result=replyChannel.send(response);
    }
  }
  return result;
}
