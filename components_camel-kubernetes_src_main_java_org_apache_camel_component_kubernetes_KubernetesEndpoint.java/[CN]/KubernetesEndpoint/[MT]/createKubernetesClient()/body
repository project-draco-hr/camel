{
  LOG.debug("Create Kubernetes client with the following Configuration: " + configuration.toString());
  DefaultKubernetesClient kubeClient=new DefaultKubernetesClient();
  ConfigBuilder builder=new ConfigBuilder();
  builder.withMasterUrl(configuration.getMasterUrl());
  if ((ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword())) && ObjectHelper.isEmpty(configuration.getOauthToken())) {
    builder.withUsername(configuration.getUsername());
    builder.withPassword(configuration.getPassword());
  }
 else {
    builder.withOauthToken(configuration.getOauthToken());
  }
  if (ObjectHelper.isNotEmpty(configuration.getCaCertData())) {
    builder.withCaCertData(configuration.getCaCertData());
  }
  if (ObjectHelper.isNotEmpty(configuration.getCaCertFile())) {
    builder.withCaCertFile(configuration.getCaCertFile());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientCertData())) {
    builder.withClientCertData(configuration.getClientCertData());
  }
  if (ObjectHelper.isNotEmpty(configuration.getClientCertFile())) {
    builder.withClientCertFile(configuration.getClientCertFile());
  }
  Config conf=builder.build();
  kubeClient=new DefaultKubernetesClient(conf);
  return kubeClient;
}
