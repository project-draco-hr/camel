{
  assertEquals(0,repo.getExchange().size());
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").idempotentConsumer(header("messageId"),repo).to("mock:result");
    }
  }
);
  context.start();
  resultEndpoint.expectedBodiesReceived("one","two","three");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("3","three");
  assertMockEndpointsSatisfied();
  assertEquals(6,repo.getExchange().size());
  for (  Exchange exchange : resultEndpoint.getExchanges()) {
    assertTrue("Should contain the exchange",repo.getExchange().contains(exchange.getExchangeId()));
  }
}
