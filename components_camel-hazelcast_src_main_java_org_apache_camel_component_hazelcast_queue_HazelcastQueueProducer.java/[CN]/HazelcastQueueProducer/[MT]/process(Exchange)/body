{
  Map<String,Object> headers=exchange.getIn().getHeaders();
  Object draintToCollection=null;
  if (headers.containsKey(HazelcastConstants.DRAIN_TO_COLLECTION)) {
    draintToCollection=headers.get(HazelcastConstants.DRAIN_TO_COLLECTION);
  }
  final int operation=lookupOperationNumber(exchange);
switch (operation) {
case -1:
case HazelcastConstants.ADD_OPERATION:
    this.add(exchange);
  break;
case HazelcastConstants.PUT_OPERATION:
this.put(exchange);
break;
case HazelcastConstants.POLL_OPERATION:
this.poll(exchange);
break;
case HazelcastConstants.PEEK_OPERATION:
this.peek(exchange);
break;
case HazelcastConstants.OFFER_OPERATION:
this.offer(exchange);
break;
case HazelcastConstants.REMOVEVALUE_OPERATION:
this.remove(exchange);
break;
case HazelcastConstants.REMAINING_CAPACITY_OPERATION:
this.remainingCapacity(exchange);
break;
case HazelcastConstants.DRAIN_TO_OPERATION:
if (ObjectHelper.isNotEmpty(draintToCollection)) {
this.drainTo((Collection)draintToCollection,exchange);
}
 else {
throw new IllegalArgumentException("Drain to collection header must be specified");
}
break;
default :
throw new IllegalArgumentException(String.format("The value '%s' is not allowed for parameter '%s' on the QUEUE cache.",operation,HazelcastConstants.OPERATION));
}
HazelcastComponentHelper.copyHeaders(exchange);
}
