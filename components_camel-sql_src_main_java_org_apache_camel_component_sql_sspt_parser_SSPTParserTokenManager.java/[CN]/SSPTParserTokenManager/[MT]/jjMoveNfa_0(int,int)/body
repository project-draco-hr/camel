{
  int startsAt=0;
  jjnewStateCnt=6;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 3:
          if (curChar == 36)           jjstateSet[jjnewStateCnt++]=0;
        break;
case 1:
      if ((0x3ff408100000000L & l) != 0L)       jjAddStates(0,1);
    break;
case 5:
  if ((0x3ff400000000000L & l) == 0L)   break;
if (kind > 9) kind=9;
jjstateSet[jjnewStateCnt++]=5;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 3:
case 5:
if ((0x7fffffe07fffffeL & l) == 0L) break;
if (kind > 9) kind=9;
jjCheckNAdd(5);
break;
case 0:
if (curChar == 123) jjCheckNAddTwoStates(1,2);
break;
case 1:
if ((0x7fffffe07fffffeL & l) != 0L) jjCheckNAddTwoStates(1,2);
break;
case 2:
if (curChar == 125) kind=8;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=6 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
