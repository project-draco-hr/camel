{
  return new Iterator<ProcessorDefinition>(){
    private int current;
    private boolean done;
    @Override public boolean hasNext(){
      if (list.isEmpty() || done) {
        return false;
      }
      if (selectFirst) {
        done=true;
        current=0;
        return true;
      }
      if (selectLast) {
        done=true;
        current=list.size() - 1;
        return true;
      }
      if (selectFrom >= 0 && selectTo >= 0) {
        if (selectFrom >= list.size() || selectTo >= list.size()) {
          return false;
        }
        if (current < selectFrom) {
          current=selectFrom;
        }
        return current >= selectFrom && current <= selectTo;
      }
      return current < list.size();
    }
    @Override public ProcessorDefinition next(){
      ProcessorDefinition answer=list.get(current);
      current++;
      return answer;
    }
    @Override public void remove(){
    }
  }
;
}
