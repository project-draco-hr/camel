{
  LOG.trace("Creating KeyStore instance from KeyStoreParameters [{}].",this);
  String ksType=this.parsePropertyValue(this.type);
  if (ksType == null) {
    ksType=KeyStore.getDefaultType();
  }
  char[] ksPassword=null;
  if (this.password != null) {
    ksPassword=this.parsePropertyValue(this.password).toCharArray();
  }
  KeyStore ks;
  if (this.provider == null) {
    ks=KeyStore.getInstance(ksType);
  }
 else {
    ks=KeyStore.getInstance(ksType,this.parsePropertyValue(this.provider));
  }
  if (this.resource == null) {
    ks.load(null,ksPassword);
  }
 else {
    InputStream is=this.resolveResource(this.parsePropertyValue(this.resource));
    ks.load(is,ksPassword);
  }
  if (LOG.isDebugEnabled()) {
    List<String> aliases=new LinkedList<String>();
    Enumeration<String> aliasEnum=ks.aliases();
    while (aliasEnum.hasMoreElements()) {
      aliases.add(aliasEnum.nextElement());
    }
    LOG.debug("KeyStore [{}], initialized from [{}], is using provider [{}], has type [{}], and contains aliases {}.",new Object[]{ks,this,ks.getProvider(),ks.getType(),aliases});
  }
  return ks;
}
