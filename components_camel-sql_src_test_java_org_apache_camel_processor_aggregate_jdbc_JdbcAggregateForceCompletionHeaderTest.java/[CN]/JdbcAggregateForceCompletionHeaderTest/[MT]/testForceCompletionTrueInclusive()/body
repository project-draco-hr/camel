{
  getMockEndpoint("mock:aggregated").expectedMessageCount(0);
  template.sendBodyAndHeader("direct:start","test1","id","1");
  template.sendBodyAndHeader("direct:start","test2","id","2");
  template.sendBodyAndHeader("direct:start","test3","id","1");
  template.sendBodyAndHeader("direct:start","test4","id","2");
  assertMockEndpointsSatisfied();
  getMockEndpoint("mock:aggregated").expectedMessageCount(3);
  getMockEndpoint("mock:aggregated").expectedBodiesReceivedInAnyOrder("test1test3","test2test4","test5");
  getMockEndpoint("mock:aggregated").expectedPropertyReceived(Exchange.AGGREGATED_COMPLETED_BY,"force");
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put("id","3");
  headers.put(Exchange.AGGREGATION_COMPLETE_ALL_GROUPS_INCLUSIVE,true);
  template.sendBodyAndHeaders("direct:start","test5",headers);
  assertMockEndpointsSatisfied();
}
