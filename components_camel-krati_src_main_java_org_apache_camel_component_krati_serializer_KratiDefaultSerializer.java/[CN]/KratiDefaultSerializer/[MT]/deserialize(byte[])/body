{
  T result=null;
  ObjectInputStream ois=null;
  if (binary == null) {
    return null;
  }
  ByteArrayInputStream bais=new ByteArrayInputStream(binary);
  final ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
  try {
    ois=new ObjectInputStream(bais){
      @Override public Class<?> resolveClass(      ObjectStreamClass desc) throws IOException, ClassNotFoundException {
        try {
          return classLoader.loadClass(desc.getName());
        }
 catch (        Exception e) {
        }
        return super.resolveClass(desc);
      }
    }
;
    result=(T)ois.readObject();
  }
 catch (  IOException e) {
    LOG.warn("Error while deserializing object. Null will be used.",e);
  }
catch (  ClassNotFoundException e) {
    LOG.warn("Could not find class while deserializing object. Null will be used.",e);
  }
 finally {
    IOHelper.close(ois);
    IOHelper.close(bais);
  }
  return result;
}
