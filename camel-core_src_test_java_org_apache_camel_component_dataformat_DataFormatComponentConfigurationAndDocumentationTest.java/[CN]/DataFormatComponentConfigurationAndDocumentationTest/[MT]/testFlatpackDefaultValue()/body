{
  CamelContext context=new DefaultCamelContext();
  String json=context.getEipParameterJsonSchema("flatpack");
  assertNotNull(json);
  assertTrue(json.contains("\"name\": \"flatpack"));
  assertTrue(json.contains("\"textQualifier\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"defaultValue\": \"\\\"\""));
  List<Map<String,String>> rows=JsonSchemaHelper.parseJsonSchema("properties",json,true);
  assertEquals(9,rows.size());
  Map<String,String> found=null;
  for (  Map<String,String> row : rows) {
    if ("textQualifier".equals(row.get("name"))) {
      found=row;
      break;
    }
  }
  assertNotNull(found);
  assertEquals("textQualifier",found.get("name"));
  assertEquals("attribute",found.get("kind"));
  assertEquals("false",found.get("required"));
  assertEquals("string",found.get("type"));
  assertEquals("java.lang.String",found.get("javaType"));
  assertEquals("false",found.get("deprecated"));
  assertEquals("\"",found.get("defaultValue"));
  assertEquals("If the text is qualified with a char such as \"",found.get("description"));
}
