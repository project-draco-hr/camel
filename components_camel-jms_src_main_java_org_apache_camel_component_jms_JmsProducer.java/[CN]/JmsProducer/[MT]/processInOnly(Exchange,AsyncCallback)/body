{
  final org.apache.camel.Message in=exchange.getIn();
  String destinationName=in.getHeader(JmsConstants.JMS_DESTINATION_NAME,String.class);
  if (destinationName != null) {
    in.removeHeader(JmsConstants.JMS_DESTINATION_NAME);
  }
  if (destinationName == null) {
    destinationName=endpoint.getDestinationName();
  }
  Destination destination=in.getHeader(JmsConstants.JMS_DESTINATION,Destination.class);
  if (destination != null) {
    in.removeHeader(JmsConstants.JMS_DESTINATION);
  }
  if (destination == null) {
    destination=endpoint.getDestination();
  }
  if (destination != null) {
    destinationName=null;
  }
  final String to=destinationName != null ? destinationName : "" + destination;
  MessageCreator messageCreator=new MessageCreator(){
    public Message createMessage(    Session session) throws JMSException {
      Message answer=endpoint.getBinding().makeJmsMessage(exchange,in,session,null);
      Object jmsReplyTo=JmsMessageHelper.getJMSReplyTo(answer);
      if (endpoint.isDisableReplyTo()) {
        LOG.trace("ReplyTo is disabled on endpoint: {}",endpoint);
        JmsMessageHelper.setJMSReplyTo(answer,null);
      }
 else {
        if (jmsReplyTo == null) {
          jmsReplyTo=exchange.getIn().getHeader("JMSReplyTo",String.class);
          if (jmsReplyTo == null) {
            jmsReplyTo=endpoint.getReplyTo();
          }
        }
      }
      if (jmsReplyTo != null && !(endpoint.isPreserveMessageQos() || endpoint.isExplicitQosEnabled())) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Disabling JMSReplyTo: {} for destination: {}. Use preserveMessageQos=true to force Camel to keep the JMSReplyTo on endpoint: {}",new Object[]{jmsReplyTo,to,endpoint});
        }
        jmsReplyTo=null;
      }
      if (jmsReplyTo != null && jmsReplyTo instanceof String) {
        String replyTo=normalizeDestinationName((String)jmsReplyTo);
        jmsReplyTo=null;
        if (endpoint.getDestinationResolver() != null) {
          jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain());
        }
        if (jmsReplyTo == null) {
          if (endpoint.isPubSubDomain()) {
            LOG.debug("Creating JMSReplyTo topic: {}",replyTo);
            jmsReplyTo=session.createTopic(replyTo);
          }
 else {
            LOG.debug("Creating JMSReplyTo queue: {}",replyTo);
            jmsReplyTo=session.createQueue(replyTo);
          }
        }
      }
      Destination replyTo=null;
      if (jmsReplyTo instanceof Destination) {
        replyTo=(Destination)jmsReplyTo;
      }
      if (replyTo != null) {
        LOG.debug("Using JMSReplyTo destination: {}",replyTo);
        JmsMessageHelper.setJMSReplyTo(answer,replyTo);
      }
 else {
        JmsMessageHelper.setJMSReplyTo(answer,null);
      }
      return answer;
    }
  }
;
  doSend(false,destinationName,destination,messageCreator,null);
  setMessageId(exchange);
  callback.done(true);
  return true;
}
