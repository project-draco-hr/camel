{
  final org.apache.camel.Message in=exchange.getIn();
  String destinationName=in.getHeader(JmsConstants.JMS_DESTINATION_NAME,String.class);
  in.removeHeader(JmsConstants.JMS_DESTINATION_NAME);
  if (destinationName == null) {
    destinationName=endpoint.getDestinationName();
  }
  Destination destination=in.getHeader(JmsConstants.JMS_DESTINATION,Destination.class);
  in.removeHeader(JmsConstants.JMS_DESTINATION);
  if (destination == null) {
    destination=endpoint.getDestination();
  }
  if (destination != null) {
    destinationName=null;
  }
  initReplyManager();
  final long timeout=exchange.getIn().getHeader(JmsConstants.JMS_REQUEST_TIMEOUT,endpoint.getRequestTimeout(),long.class);
  final boolean msgIdAsCorrId=endpoint.getConfiguration().isUseMessageIDAsCorrelationID();
  final String provisionalCorrelationId=msgIdAsCorrId ? getUuidGenerator().generateUuid() : null;
  MessageSentCallback messageSentCallback=null;
  if (msgIdAsCorrId) {
    messageSentCallback=new UseMessageIdAsCorrelationIdMessageSentCallback(replyManager,provisionalCorrelationId,timeout);
  }
  final String originalCorrelationId=in.getHeader("JMSCorrelationID",String.class);
  boolean generateFreshCorrId=(ObjectHelper.isEmpty(originalCorrelationId) && !msgIdAsCorrId) || (originalCorrelationId != null && originalCorrelationId.startsWith(GENERATED_CORRELATION_ID_PREFIX));
  if (generateFreshCorrId) {
    in.setHeader("JMSCorrelationID",GENERATED_CORRELATION_ID_PREFIX + getUuidGenerator().generateUuid());
  }
  MessageCreator messageCreator=new MessageCreator(){
    public Message createMessage(    Session session) throws JMSException {
      Message answer=endpoint.getBinding().makeJmsMessage(exchange,in,session,null);
      Destination replyTo=null;
      String replyToOverride=endpoint.getConfiguration().getReplyToOverride();
      if (replyToOverride != null) {
        replyTo=resolveOrCreateDestination(replyToOverride,session);
      }
 else {
        replyTo=replyManager.getReplyTo();
      }
      if (replyTo == null) {
        throw new RuntimeExchangeException("Failed to resolve replyTo destination",exchange);
      }
      JmsMessageHelper.setJMSReplyTo(answer,replyTo);
      replyManager.setReplyToSelectorHeader(in,answer);
      String correlationId=determineCorrelationId(answer,provisionalCorrelationId);
      replyManager.registerReply(replyManager,exchange,callback,originalCorrelationId,correlationId,timeout);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Using JMSCorrelationID: {}, JMSReplyTo destination: {}, with request timeout: {} ms.",new Object[]{correlationId,replyTo,timeout});
      }
      LOG.trace("Created javax.jms.Message: {}",answer);
      return answer;
    }
  }
;
  doSend(true,destinationName,destination,messageCreator,messageSentCallback);
  setMessageId(exchange);
  return false;
}
