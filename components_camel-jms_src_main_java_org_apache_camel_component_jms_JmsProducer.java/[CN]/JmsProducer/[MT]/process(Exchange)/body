{
  final org.apache.camel.Message in=exchange.getIn();
  if (exchange.getPattern().isOutCapable()) {
    Requestor requestor;
    try {
      requestor=endpoint.getRequestor();
    }
 catch (    Exception e) {
      throw new RuntimeExchangeException(e,exchange);
    }
    final Destination replyTo=requestor.getReplyTo();
    String correlationId=in.getHeader("JMSCorrelationID",String.class);
    if (correlationId == null) {
      correlationId=getUuidGenerator().generateId();
      in.setHeader("JMSCorrelationID",correlationId);
    }
    long requestTimeout=endpoint.getRequestTimeout();
    FutureTask future=requestor.getReceiveFuture(correlationId,requestTimeout);
    getInOutTemplate().send(endpoint.getDestination(),new MessageCreator(){
      public Message createMessage(      Session session) throws JMSException {
        Message message=endpoint.getBinding().makeJmsMessage(exchange,in,session);
        message.setJMSReplyTo(replyTo);
        if (LOG.isDebugEnabled()) {
          LOG.debug(endpoint + " sending JMS message: " + message);
        }
        return message;
      }
    }
);
    try {
      Message message;
      if (requestTimeout < 0) {
        message=(Message)future.get();
      }
 else {
        message=(Message)future.get(requestTimeout,TimeUnit.MILLISECONDS);
      }
      if (message != null) {
        exchange.setOut(new JmsMessage(message,endpoint.getBinding()));
      }
 else {
        exchange.setException(new ExchangeTimedOutException(exchange,requestTimeout));
      }
    }
 catch (    Exception e) {
      exchange.setException(e);
    }
  }
 else {
    getInOnlyTemplate().send(endpoint.getDestination(),new MessageCreator(){
      public Message createMessage(      Session session) throws JMSException {
        Message message=endpoint.getBinding().makeJmsMessage(exchange,in,session);
        if (LOG.isDebugEnabled()) {
          LOG.debug(endpoint + " sending JMS message: " + message);
        }
        return message;
      }
    }
);
  }
}
