{
  if (!started.get()) {
synchronized (this) {
      if (started.get()) {
        return;
      }
      ClassLoader current=Thread.currentThread().getContextClassLoader();
      ClassLoader ac=endpoint.getCamelContext().getApplicationContextClassLoader();
      try {
        if (ac != null) {
          Thread.currentThread().setContextClassLoader(ac);
        }
        if (endpoint.getReplyToType() != null) {
          if (endpoint.getReplyTo() != null && endpoint.getReplyToType().equals(ReplyToType.Temporary.name())) {
            throw new IllegalArgumentException("ReplyToType " + ReplyToType.Temporary + " is not supported when replyTo "+ endpoint.getReplyTo()+ " is also configured.");
          }
        }
        if (endpoint.getReplyTo() != null) {
          replyManager=createReplyManager(endpoint.getReplyTo());
          if (LOG.isDebugEnabled()) {
            LOG.debug("Using JmsReplyManager: {} to process replies from: {}",replyManager,endpoint.getReplyTo());
          }
        }
 else {
          replyManager=createReplyManager();
          LOG.debug("Using JmsReplyManager: {} to process replies from temporary queue",replyManager);
        }
      }
 catch (      Exception e) {
        throw new FailedToCreateProducerException(endpoint,e);
      }
 finally {
        if (ac != null) {
          Thread.currentThread().setContextClassLoader(current);
        }
      }
      started.set(true);
    }
  }
}
