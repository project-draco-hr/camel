{
  MockEndpoint mock=getMockEndpoint("mock:aggregateToTarEntry");
  mock.expectedMessageCount(1);
  mock.expectedHeaderReceived("foo","bar");
  assertMockEndpointsSatisfied();
  Thread.sleep(500);
  File[] files=new File("target/out").listFiles();
  assertTrue(files != null);
  assertTrue("Should be a file in target/out directory",files.length > 0);
  File resultFile=files[0];
  TarArchiveInputStream tin=new TarArchiveInputStream(new FileInputStream(resultFile));
  try {
    int fileCount=0;
    for (TarArchiveEntry te=tin.getNextTarEntry(); te != null; te=tin.getNextTarEntry()) {
      fileCount=fileCount + 1;
    }
    assertEquals("Tar file should contains " + TarAggregationStrategyTest.EXPECTED_NO_FILES + " files",TarAggregationStrategyTest.EXPECTED_NO_FILES,fileCount);
  }
  finally {
    IOHelper.close(tin);
  }
}
