{
  try {
    XMLEventReader reader;
    if (isNamespaceAware) {
      reader=exchange.getIn().getMandatoryBody(XMLEventReader.class);
    }
 else {
      InputStream inputStream=exchange.getIn().getMandatoryBody(InputStream.class);
      XMLInputFactory xmlInputFactory=XMLInputFactory.newInstance();
      xmlInputFactory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE,false);
      reader=xmlInputFactory.createXMLEventReader(inputStream);
    }
    Class<T> clazz=handled;
    if (clazz == null && handledName != null) {
      clazz=(Class<T>)exchange.getContext().getClassResolver().resolveMandatoryClass(handledName);
    }
    return createIterator(reader,clazz);
  }
 catch (  InvalidPayloadException e) {
    exchange.setException(e);
    return null;
  }
catch (  JAXBException e) {
    exchange.setException(e);
    return null;
  }
catch (  ClassNotFoundException e) {
    exchange.setException(e);
    return null;
  }
catch (  XMLStreamException e) {
    exchange.setException(e);
    return null;
  }
}
