{
  String message="12345678901234567890123456789012345678901234567890123456789012345678901";
  Charset charset=Charset.forName("UTF-16BE");
  SmppUcs2Splitter splitter=new SmppUcs2Splitter(message.length());
  SmppSplitter.resetCurrentReferenceNumber();
  byte[][] result=splitter.split(message.getBytes(charset));
  assertEquals(2,result.length);
  assertArrayEquals(new byte[]{SmppSplitter.UDHIE_HEADER_LENGTH,SmppSplitter.UDHIE_IDENTIFIER_SAR,SmppSplitter.UDHIE_SAR_LENGTH,1,2,1,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55},result[0]);
  assertArrayEquals(new byte[]{SmppSplitter.UDHIE_HEADER_LENGTH,SmppSplitter.UDHIE_IDENTIFIER_SAR,SmppSplitter.UDHIE_SAR_LENGTH,1,2,2,0,56,0,57,0,48,0,49},result[1]);
  String firstShortMessage=new String(result[0],SmppSplitter.UDHIE_HEADER_REAL_LENGTH,result[0].length - SmppSplitter.UDHIE_HEADER_REAL_LENGTH,charset);
  String secondShortMessage=new String(result[1],SmppSplitter.UDHIE_HEADER_REAL_LENGTH,result[1].length - SmppSplitter.UDHIE_HEADER_REAL_LENGTH,charset);
  assertEquals(message,firstShortMessage + secondShortMessage);
}
