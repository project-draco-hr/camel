{
  final JSch jsch=new JSch();
  String privateKeyFile=getConfiguration().getPrivateKeyFile();
  if (isNotEmpty(privateKeyFile)) {
    log.debug("Using private keyfile: " + privateKeyFile);
    String privateKeyFilePassphrase=getConfiguration().getPrivateKeyFilePassphrase();
    if (isNotEmpty(privateKeyFilePassphrase)) {
      jsch.addIdentity(privateKeyFile,privateKeyFilePassphrase);
    }
 else {
      jsch.addIdentity(privateKeyFile);
    }
  }
  String knownHostsFile=getConfiguration().getKnownHosts();
  if (isNotEmpty(knownHostsFile)) {
    log.debug("Using knownHosts: " + knownHostsFile);
    jsch.setKnownHosts(knownHostsFile);
  }
  final Session session=jsch.getSession(getConfiguration().getUsername(),getConfiguration().getHost(),getConfiguration().getPort());
  session.setUserInfo(new UserInfo(){
    public String getPassphrase(){
      return null;
    }
    public String getPassword(){
      return getConfiguration().getPassword();
    }
    public boolean promptPassword(    String string){
      return true;
    }
    public boolean promptPassphrase(    String string){
      return true;
    }
    public boolean promptYesNo(    String string){
      log.error(string);
      return false;
    }
    public void showMessage(    String string){
    }
  }
);
  return session;
}
