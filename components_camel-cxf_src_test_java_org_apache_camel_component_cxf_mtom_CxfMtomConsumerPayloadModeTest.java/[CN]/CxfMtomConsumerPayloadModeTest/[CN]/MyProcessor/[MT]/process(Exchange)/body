{
  CxfPayload<SoapHeader> in=exchange.getIn().getBody(CxfPayload.class);
  Assert.assertEquals(1,in.getBody().size());
  Map<String,String> ns=new HashMap<String,String>();
  ns.put("ns",MtomTestHelper.SERVICE_TYPES_NS);
  ns.put("xop",MtomTestHelper.XOP_NS);
  XPathUtils xu=new XPathUtils(ns);
  Element body=new XmlConverter().toDOMElement(in.getBody().get(0));
  Element ele=(Element)xu.getValue("//ns:Detail/ns:photo/xop:Include",body,XPathConstants.NODE);
  String photoId=ele.getAttribute("href").substring(4);
  Assert.assertEquals(MtomTestHelper.REQ_PHOTO_CID,photoId);
  ele=(Element)xu.getValue("//ns:Detail/ns:image/xop:Include",body,XPathConstants.NODE);
  String imageId=ele.getAttribute("href").substring(4);
  Assert.assertEquals(MtomTestHelper.REQ_IMAGE_CID,imageId);
  DataHandler dr=exchange.getIn().getAttachment(photoId);
  Assert.assertEquals("application/octet-stream",dr.getContentType());
  MtomTestHelper.assertEquals(MtomTestHelper.REQ_PHOTO_DATA,IOUtils.readBytesFromStream(dr.getInputStream()));
  dr=exchange.getIn().getAttachment(imageId);
  Assert.assertEquals("image/jpeg",dr.getContentType());
  MtomTestHelper.assertEquals(MtomTestHelper.requestJpeg,IOUtils.readBytesFromStream(dr.getInputStream()));
  List<Source> elements=new ArrayList<Source>();
  elements.add(new DOMSource(DOMUtils.readXml(new StringReader(MtomTestHelper.RESP_MESSAGE)).getDocumentElement()));
  CxfPayload<SoapHeader> sbody=new CxfPayload<SoapHeader>(new ArrayList<SoapHeader>(),elements,null);
  exchange.getOut().setBody(sbody);
  exchange.getOut().addAttachment(MtomTestHelper.RESP_PHOTO_CID,new DataHandler(new ByteArrayDataSource(MtomTestHelper.RESP_PHOTO_DATA,"application/octet-stream")));
  exchange.getOut().addAttachment(MtomTestHelper.RESP_IMAGE_CID,new DataHandler(new ByteArrayDataSource(MtomTestHelper.responseJpeg,"image/jpeg")));
}
