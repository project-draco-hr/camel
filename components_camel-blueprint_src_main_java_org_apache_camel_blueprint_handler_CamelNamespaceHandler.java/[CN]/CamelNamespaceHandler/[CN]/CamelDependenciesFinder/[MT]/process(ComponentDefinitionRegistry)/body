{
  CamelContextFactoryBean ccfb=(CamelContextFactoryBean)blueprintContainer.getComponentInstance(".camelBlueprint.factory." + camelContextName);
  CamelContext camelContext=ccfb.getContext();
  Set<String> components=new HashSet<String>();
  Set<String> languages=new HashSet<String>();
  Set<String> dataformats=new HashSet<String>();
  for (  RouteDefinition rd : camelContext.getRouteDefinitions()) {
    findInputComponents(rd.getInputs(),components,languages,dataformats);
    findOutputComponents(rd.getOutputs(),components,languages,dataformats);
  }
  for (  RestDefinition rd : camelContext.getRestDefinitions()) {
    for (    VerbDefinition vd : rd.getVerbs()) {
      Object o=vd.getToOrRoute();
      if (o instanceof RouteDefinition) {
        RouteDefinition route=(RouteDefinition)o;
        findInputComponents(route.getInputs(),components,languages,dataformats);
        findOutputComponents(route.getOutputs(),components,languages,dataformats);
      }
 else       if (o instanceof ToDefinition) {
        findUriComponent(((ToDefinition)o).getUri(),components);
      }
    }
  }
  if (ccfb.getRestConfiguration() != null) {
    String component=ccfb.getRestConfiguration().getComponent();
    if (component != null) {
      components.add(component);
    }
    component=ccfb.getRestConfiguration().getApiComponent();
    if (component != null) {
      components.add(component);
    }
    RestBindingMode mode=ccfb.getRestConfiguration().getBindingMode();
    String json=ccfb.getRestConfiguration().getJsonDataFormat();
    if (json == null && mode != null) {
      if (RestBindingMode.json.equals(mode) || RestBindingMode.json_xml.equals(mode)) {
        json="json-jackson";
      }
    }
    if (json != null) {
      dataformats.add(json);
    }
    String xml=ccfb.getRestConfiguration().getXmlDataFormat();
    if (xml == null && mode != null) {
      if (RestBindingMode.xml.equals(mode) || RestBindingMode.json_xml.equals(mode)) {
        dataformats.add("jaxb");
      }
    }
    if (xml != null) {
      dataformats.add(xml);
    }
  }
  try {
    for (    String component : components) {
      getComponentResolverReference(context,component);
    }
    for (    String language : languages) {
      getLanguageResolverReference(context,language);
    }
    for (    String dataformat : dataformats) {
      getDataformatResolverReference(context,dataformat);
    }
  }
 catch (  UnsupportedOperationException e) {
    LOG.warn("Unable to add dependencies to Camel components OSGi services. " + "The Apache Aries blueprint implementation used is too old and the blueprint bundle can not see the org.apache.camel.spi package.");
    components.clear();
    languages.clear();
    dataformats.clear();
  }
}
