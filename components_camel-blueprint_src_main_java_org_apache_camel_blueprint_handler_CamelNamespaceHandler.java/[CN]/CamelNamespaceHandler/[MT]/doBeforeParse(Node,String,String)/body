{
  if (node.getNodeType() == Node.ELEMENT_NODE) {
    Document doc=node.getOwnerDocument();
    if (node.getNamespaceURI().equals(fromNamespace)) {
      doc.renameNode(node,toNamespace,node.getLocalName());
    }
    NamedNodeMap map=node.getAttributes();
    for (int i=0; i < map.getLength(); i++) {
      Node att=map.item(i);
      if (att.getNodeName().equals("uri") || att.getNodeName().endsWith("Uri")) {
        final String value=att.getNodeValue();
        String before=ObjectHelper.before(value,"?");
        String after=ObjectHelper.after(value,"?");
        if (before != null && after != null) {
          String changed=after.replaceAll("\\s{2,}","");
          if (!after.equals(changed)) {
            String newAtr=before.trim() + "?" + changed.trim();
            LOG.debug("Removed whitespace noise from attribute {} -> {}",value,newAtr);
            att.setNodeValue(newAtr);
          }
        }
      }
    }
  }
  NodeList list=node.getChildNodes();
  for (int i=0; i < list.getLength(); ++i) {
    doBeforeParse(list.item(i),fromNamespace,toNamespace);
  }
}
