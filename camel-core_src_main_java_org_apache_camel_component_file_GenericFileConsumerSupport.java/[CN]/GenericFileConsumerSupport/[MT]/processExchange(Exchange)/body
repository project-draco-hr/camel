{
  GenericFile<T> file=getExchangeFileProperty(exchange);
  log.trace("Processing file: {}",file);
  String absoluteFileName=file.getAbsoluteFilePath();
  try {
    final GenericFileProcessStrategy<T> processStrategy=consumer.getEndpoint().getGenericFileProcessStrategy();
    boolean begin=processStrategy.begin(consumer.getOperations(),consumer.getEndpoint(),exchange,file);
    if (!begin) {
      log.debug(consumer.getEndpoint() + " cannot begin processing file: {}",file);
      consumer.getEndpoint().getInProgressRepository().remove(absoluteFileName);
      return;
    }
  }
 catch (  Exception e) {
    if (log.isDebugEnabled()) {
      log.debug(consumer.getEndpoint() + " cannot begin processing file: " + file+ " due to: "+ e.getMessage(),e);
    }
    consumer.getEndpoint().getInProgressRepository().remove(absoluteFileName);
    return;
  }
  final GenericFile<T> target=getExchangeFileProperty(exchange);
  final String name=target.getAbsoluteFilePath();
  try {
    log.trace("Retrieving file: {} from: {}",name,consumer.getEndpoint());
    boolean retrieved=consumer.getOperations().retrieveFile(name,exchange);
    if (!retrieved) {
      throw new GenericFileOperationFailedException("Cannot retrieve file: " + file + " from: "+ consumer.getEndpoint());
    }
    log.trace("Retrieved file: {} from: {}",name,consumer.getEndpoint());
    exchange.addOnCompletion(new GenericFileOnCompletion<T>(consumer.getEndpoint(),consumer.getOperations(),target,absoluteFileName));
    log.debug("About to process file: {} using exchange: {}",target,exchange);
    processFileStrategy(exchange);
  }
 catch (  Exception e) {
    consumer.getEndpoint().getInProgressRepository().remove(absoluteFileName);
    handleExceptionStrategy(e);
  }
}
