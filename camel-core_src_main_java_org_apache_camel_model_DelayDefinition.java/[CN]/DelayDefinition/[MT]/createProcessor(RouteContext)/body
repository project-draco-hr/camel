{
  Processor childProcessor=this.createChildProcessor(routeContext,false);
  Expression delay=createAbsoluteTimeDelayExpression(routeContext);
  boolean async=getAsyncDelayed() != null && getAsyncDelayed();
  boolean shutdownThreadPool=ProcessorDefinitionHelper.willCreateNewThreadPool(routeContext,this,async);
  ScheduledExecutorService threadPool=ProcessorDefinitionHelper.getConfiguredScheduledExecutorService(routeContext,"Delay",this,async);
  Delayer answer=new Delayer(routeContext.getCamelContext(),childProcessor,delay,threadPool,shutdownThreadPool);
  if (getAsyncDelayed() != null) {
    answer.setAsyncDelayed(getAsyncDelayed());
  }
  if (getCallerRunsWhenRejected() == null) {
    answer.setCallerRunsWhenRejected(true);
  }
 else {
    answer.setCallerRunsWhenRejected(getCallerRunsWhenRejected());
  }
  return answer;
}
