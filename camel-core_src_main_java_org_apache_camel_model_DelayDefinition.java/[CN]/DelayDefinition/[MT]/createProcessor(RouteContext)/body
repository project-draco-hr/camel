{
  Processor childProcessor=this.createChildProcessor(routeContext,false);
  Expression delay=createAbsoluteTimeDelayExpression(routeContext);
  ScheduledExecutorService scheduled=null;
  if (getAsyncDelayed() != null && getAsyncDelayed()) {
    ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager();
    scheduled=manager.getScheduledExecutorService(executorServiceRef,this);
  }
  Delayer answer=new Delayer(childProcessor,delay,scheduled);
  if (getAsyncDelayed() != null) {
    answer.setAsyncDelayed(getAsyncDelayed());
  }
  if (getCallerRunsWhenRejected() == null) {
    answer.setCallerRunsWhenRejected(true);
  }
 else {
    answer.setCallerRunsWhenRejected(getCallerRunsWhenRejected());
  }
  return answer;
}
