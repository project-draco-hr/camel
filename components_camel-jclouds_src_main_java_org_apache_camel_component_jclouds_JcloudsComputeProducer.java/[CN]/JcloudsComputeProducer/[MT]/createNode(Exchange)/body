{
  String group=getGroup(exchange);
  String imageId=getImageId(exchange);
  String locationId=getLocationId(exchange);
  String hardwareId=getHardwareId(exchange);
  if (ObjectHelper.isEmpty(group)) {
    throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.",exchange);
  }
  TemplateBuilder builder=computeService.templateBuilder();
  builder.any();
  if (ObjectHelper.isNotEmpty(locationId)) {
    builder.locationId(locationId);
  }
  if (ObjectHelper.isNotEmpty(imageId)) {
    builder.imageId(imageId);
  }
  if (ObjectHelper.isNotEmpty(hardwareId)) {
    builder.hardwareId(hardwareId);
  }
  try {
    Set<? extends NodeMetadata> nodeMetadatas=computeService.createNodesInGroup(group,1,builder.build());
    exchange.getOut().setBody(nodeMetadatas);
    exchange.getOut().setHeaders(exchange.getIn().getHeaders());
  }
 catch (  RunNodesException e) {
    throw new CamelExchangeException("Error creating jclouds node.",exchange,e);
  }
}
