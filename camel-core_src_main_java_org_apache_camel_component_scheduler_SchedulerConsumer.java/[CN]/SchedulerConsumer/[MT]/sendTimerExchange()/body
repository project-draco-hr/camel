{
  final Exchange exchange=getEndpoint().createExchange();
  exchange.setProperty(Exchange.TIMER_NAME,getEndpoint().getName());
  Date now=new Date();
  exchange.setProperty(Exchange.TIMER_FIRED_TIME,now);
  if (log.isTraceEnabled()) {
    log.trace("Timer {} is firing",getEndpoint().getName());
  }
  if (!getEndpoint().isSynchronous()) {
    getAsyncProcessor().process(exchange,new AsyncCallback(){
      @Override public void done(      boolean doneSync){
        if (exchange.getException() != null) {
          getExceptionHandler().handleException("Error processing exchange",exchange,exchange.getException());
        }
      }
    }
);
  }
 else {
    try {
      getProcessor().process(exchange);
    }
 catch (    Exception e) {
      exchange.setException(e);
    }
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange",exchange,exchange.getException());
    }
  }
  boolean polled=exchange.getProperty(Exchange.SCHEDULER_POLLED_MESSAGES,true,boolean.class);
  return polled ? 1 : 0;
}
