{
  if (!prePollCheck()) {
    log.debug("Skipping pool as pre poll check returned false");
  }
  List<GenericFile<T>> files=new ArrayList<GenericFile<T>>();
  String name=endpoint.getConfiguration().getFile();
  boolean isDirectory=endpoint.isDirectory();
  if (isDirectory) {
    pollDirectory(name,files);
  }
 else {
    pollFile(name,files);
  }
  if (endpoint.getSorter() != null) {
    Collections.sort(files,endpoint.getSorter());
  }
  List<GenericFileExchange<T>> exchanges=new ArrayList<GenericFileExchange<T>>(files.size());
  for (  GenericFile<T> file : files) {
    GenericFileExchange<T> exchange=endpoint.createExchange(file);
    endpoint.configureMessage(file,exchange.getIn());
    exchanges.add(exchange);
  }
  if (endpoint.getSortBy() != null) {
    Collections.sort(exchanges,endpoint.getSortBy());
  }
  int total=exchanges.size();
  if (total > 0 && log.isDebugEnabled()) {
    log.debug("Total " + total + " files to consume");
  }
  for (int index=0; index < total; index++) {
    GenericFileExchange<T> exchange=exchanges.get(index);
    exchange.getIn().setHeader(FileComponent.HEADER_FILE_BATCH_INDEX,index);
    exchange.getIn().setHeader(FileComponent.HEADER_FILE_BATCH_TOTAL,total);
    exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_BATCH_INDEX,index);
    exchange.getIn().setHeader(NewFileComponent.HEADER_FILE_BATCH_TOTAL,total);
    processExchange(exchange);
  }
}
