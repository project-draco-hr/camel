{
  GenericFile<T> file=getExchangeFileProperty(exchange);
  log.trace("Processing file: {}",file);
  String absoluteFileName=file.getAbsoluteFilePath();
  final GenericFileProcessStrategy<T> processStrategy=endpoint.getGenericFileProcessStrategy();
  Exception beginCause=null;
  boolean begin=false;
  try {
    begin=processStrategy.begin(operations,endpoint,exchange,file);
  }
 catch (  Exception e) {
    beginCause=e;
  }
  if (!begin) {
    Exception abortCause=null;
    log.debug("{} cannot begin processing file: {}",endpoint,file);
    try {
      processStrategy.abort(operations,endpoint,exchange,file);
    }
 catch (    Exception e) {
      abortCause=e;
    }
 finally {
      endpoint.getInProgressRepository().remove(absoluteFileName);
    }
    if (beginCause != null) {
      String msg=endpoint + " cannot begin processing file: " + file+ " due to: "+ beginCause.getMessage();
      handleException(msg,beginCause);
    }
    if (abortCause != null) {
      String msg2=endpoint + " cannot abort processing file: " + file+ " due to: "+ abortCause.getMessage();
      handleException(msg2,abortCause);
    }
    return false;
  }
  final GenericFile<T> target=getExchangeFileProperty(exchange);
  updateFileHeaders(target,exchange.getIn());
  final String name=target.getAbsoluteFilePath();
  try {
    if (isRetrieveFile()) {
      log.trace("Retrieving file: {} from: {}",name,endpoint);
      boolean retrieved;
      Exception cause=null;
      try {
        retrieved=operations.retrieveFile(name,exchange);
      }
 catch (      Exception e) {
        retrieved=false;
        cause=e;
      }
      if (!retrieved) {
        if (ignoreCannotRetrieveFile(name,exchange,cause)) {
          log.trace("Cannot retrieve file {} maybe it does not exists. Ignoring.",name);
          endpoint.getInProgressRepository().remove(absoluteFileName);
          return false;
        }
 else {
          if (cause != null && cause instanceof GenericFileOperationFailedException) {
            throw cause;
          }
 else {
            throw new GenericFileOperationFailedException("Cannot retrieve file: " + file + " from: "+ endpoint,cause);
          }
        }
      }
      log.trace("Retrieved file: {} from: {}",name,endpoint);
    }
 else {
      log.trace("Skipped retrieval of file: {} from: {}",name,endpoint);
      exchange.getIn().setBody(null);
    }
    exchange.addOnCompletion(new GenericFileOnCompletion<T>(endpoint,operations,target,absoluteFileName));
    log.debug("About to process file: {} using exchange: {}",target,exchange);
    if (endpoint.isSynchronous()) {
      getProcessor().process(exchange);
    }
 else {
      getAsyncProcessor().process(exchange,new AsyncCallback(){
        public void done(        boolean doneSync){
          if (log.isTraceEnabled()) {
            log.trace("Done processing file: {} {}",target,doneSync ? "synchronously" : "asynchronously");
          }
        }
      }
);
    }
  }
 catch (  Exception e) {
    endpoint.getInProgressRepository().remove(absoluteFileName);
    String msg="Error processing file " + file + " due to "+ e.getMessage();
    handleException(msg,e);
  }
  return true;
}
