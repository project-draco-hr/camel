{
  Map<String,Object> headers=exchange.getIn().getHeaders();
  long expectedValue=0L;
  if (headers.containsKey(HazelcastConstants.EXPECTED_VALUE)) {
    expectedValue=(long)headers.get(HazelcastConstants.EXPECTED_VALUE);
  }
  int operation=lookupOperationNumber(exchange);
switch (operation) {
case HazelcastConstants.INCREMENT_OPERATION:
    this.increment(exchange);
  break;
case HazelcastConstants.DECREMENT_OPERATION:
this.decrement(exchange);
break;
case HazelcastConstants.COMPARE_AND_SET_OPERATION:
this.compare(expectedValue,exchange);
break;
case HazelcastConstants.GET_AND_ADD_OPERATION:
this.getAndAdd(exchange);
break;
case HazelcastConstants.SETVALUE_OPERATION:
this.set(exchange);
break;
case HazelcastConstants.GET_OPERATION:
this.get(exchange);
break;
case HazelcastConstants.DESTROY_OPERATION:
this.destroy();
break;
default :
throw new IllegalArgumentException(String.format("The value '%s' is not allowed for parameter '%s' on the ATOMICNUMBER.",operation,HazelcastConstants.OPERATION));
}
HazelcastComponentHelper.copyHeaders(exchange);
}
