{
  RouteBuilder builder=new RouteBuilder(){
    public void configure(){
      from("seda:a").errorHandler(loggingErrorHandler("FOO.BAR")).filter(body().isInstanceOf(String.class)).to("seda:b");
    }
  }
;
  List<Route> routes=getRouteList(builder);
  assertEquals("Number routes created",1,routes.size());
  for (  Route route : routes) {
    Endpoint key=route.getEndpoint();
    assertEquals("From endpoint","seda:a",key.getEndpointUri());
    EventDrivenConsumerRoute consumerRoute=assertIsInstanceOf(EventDrivenConsumerRoute.class,route);
    Processor processor=unwrap(consumerRoute.getProcessor());
    LoggingErrorHandler loggingProcessor=assertIsInstanceOf(LoggingErrorHandler.class,processor);
    if (Boolean.getBoolean(JmxSystemPropertyKeys.DISABLED)) {
      StreamCachingInterceptor cache=assertIsInstanceOf(StreamCachingInterceptor.class,loggingProcessor.getOutput());
      processor=cache.getProcessor();
    }
 else {
      InstrumentationProcessor interceptor=assertIsInstanceOf(InstrumentationProcessor.class,loggingProcessor.getOutput());
      StreamCachingInterceptor cache=assertIsInstanceOf(StreamCachingInterceptor.class,interceptor.getProcessor());
      processor=cache.getProcessor();
    }
    FilterProcessor filterProcessor=assertIsInstanceOf(FilterProcessor.class,processor);
    LoggingErrorHandler logging=assertIsInstanceOf(LoggingErrorHandler.class,filterProcessor.getProcessor());
    StreamCachingInterceptor cache=assertIsInstanceOf(StreamCachingInterceptor.class,logging.getOutput());
    SendProcessor sendProcessor=assertIsInstanceOf(SendProcessor.class,cache.getProcessor());
    log.debug("Found sendProcessor: " + sendProcessor);
  }
}
