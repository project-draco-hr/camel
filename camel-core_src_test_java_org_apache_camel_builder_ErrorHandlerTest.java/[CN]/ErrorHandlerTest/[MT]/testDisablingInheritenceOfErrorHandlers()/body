{
  RouteBuilder<Exchange> builder=new RouteBuilder<Exchange>(){
    public void configure(){
      inheritErrorHandler(false);
      from("queue:a").errorHandler(loggingErrorHandler("FOO.BAR")).filter(body().isInstanceOf(String.class)).to("queue:b");
    }
  }
;
  Map<Endpoint<Exchange>,Processor<Exchange>> routeMap=builder.getRouteMap();
  Set<Map.Entry<Endpoint<Exchange>,Processor<Exchange>>> routes=routeMap.entrySet();
  assertEquals("Number routes created",1,routes.size());
  for (  Map.Entry<Endpoint<Exchange>,Processor<Exchange>> route : routes) {
    Endpoint<Exchange> key=route.getKey();
    assertEquals("From endpoint","queue:a",key.getEndpointUri());
    Processor processor=route.getValue();
    LoggingErrorHandler loggingProcessor=assertIsInstanceOf(LoggingErrorHandler.class,processor);
    FilterProcessor filterProcessor=assertIsInstanceOf(FilterProcessor.class,loggingProcessor.getOutput());
    SendProcessor sendProcessor=assertIsInstanceOf(SendProcessor.class,filterProcessor.getProcessor());
  }
}
