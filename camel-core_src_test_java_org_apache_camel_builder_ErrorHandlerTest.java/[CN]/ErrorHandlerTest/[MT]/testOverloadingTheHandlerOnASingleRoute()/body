{
  RouteBuilder<Exchange> builder1=new RouteBuilder<Exchange>(){
    public void configure(){
      from("queue:a").errorHandler(loggingErrorHandler("FOO.BAR")).to("queue:b");
      from("queue:b").to("queue:c");
    }
  }
;
  RouteBuilder<Exchange> builder=builder1;
  Map<Endpoint<Exchange>,Processor<Exchange>> routeMap=builder.getRouteMap();
  log.info(routeMap);
  Set<Map.Entry<Endpoint<Exchange>,Processor<Exchange>>> routes=routeMap.entrySet();
  assertEquals("Number routes created",2,routes.size());
  for (  Map.Entry<Endpoint<Exchange>,Processor<Exchange>> route : routes) {
    Endpoint<Exchange> key=route.getKey();
    String endpointUri=key.getEndpointUri();
    Processor processor=route.getValue();
    if (endpointUri.equals("queue:a")) {
      LoggingErrorHandler loggingProcessor=assertIsInstanceOf(LoggingErrorHandler.class,processor);
      Processor outputProcessor=loggingProcessor.getOutput();
      SendProcessor sendProcessor=assertIsInstanceOf(SendProcessor.class,outputProcessor);
    }
 else {
      assertEquals("From endpoint","queue:b",endpointUri);
      DeadLetterChannel deadLetterChannel=assertIsInstanceOf(DeadLetterChannel.class,processor);
      Processor outputProcessor=deadLetterChannel.getOutput();
      SendProcessor sendProcessor=assertIsInstanceOf(SendProcessor.class,outputProcessor);
    }
  }
}
