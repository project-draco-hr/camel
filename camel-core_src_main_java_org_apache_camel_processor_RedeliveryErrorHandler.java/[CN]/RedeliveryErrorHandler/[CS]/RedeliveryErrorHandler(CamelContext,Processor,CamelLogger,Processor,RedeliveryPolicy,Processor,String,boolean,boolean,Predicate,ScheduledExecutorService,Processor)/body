{
  ObjectHelper.notNull(camelContext,"CamelContext",this);
  ObjectHelper.notNull(redeliveryPolicy,"RedeliveryPolicy",this);
  this.camelContext=camelContext;
  this.redeliveryProcessor=redeliveryProcessor;
  this.deadLetter=deadLetter;
  this.output=output;
  this.outputAsync=AsyncProcessorConverterHelper.convert(output);
  this.redeliveryPolicy=redeliveryPolicy;
  this.logger=logger;
  this.deadLetterUri=deadLetterUri;
  this.deadLetterHandleNewException=deadLetterHandleNewException;
  this.useOriginalMessagePolicy=useOriginalMessagePolicy;
  this.retryWhilePolicy=retryWhile;
  this.executorService=executorService;
  this.onPrepare=onPrepare;
  if (ObjectHelper.isNotEmpty(redeliveryPolicy.getExchangeFormatterRef())) {
    ExchangeFormatter formatter=camelContext.getRegistry().lookupByNameAndType(redeliveryPolicy.getExchangeFormatterRef(),ExchangeFormatter.class);
    if (formatter != null) {
      this.exchangeFormatter=formatter;
    }
 else {
      throw new IllegalArgumentException("Cannot find the exchangeFormatter by using reference id " + redeliveryPolicy.getExchangeFormatterRef());
    }
  }
 else {
    DefaultExchangeFormatter formatter=new DefaultExchangeFormatter();
    formatter.setShowExchangeId(true);
    formatter.setMultiline(true);
    formatter.setShowHeaders(true);
    formatter.setStyle(DefaultExchangeFormatter.OutputStyle.Fixed);
    try {
      Integer maxChars=CamelContextHelper.parseInteger(camelContext,camelContext.getProperty(Exchange.LOG_DEBUG_BODY_MAX_CHARS));
      if (maxChars != null) {
        formatter.setMaxChars(maxChars);
      }
    }
 catch (    Exception e) {
      throw ObjectHelper.wrapRuntimeCamelException(e);
    }
    this.exchangeFormatter=formatter;
  }
}
