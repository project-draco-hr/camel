{
  Exception e=exchange.getException();
  exchange.setProperty(Exchange.EXCEPTION_CAUGHT,e);
  OnExceptionDefinition exceptionPolicy=getExceptionPolicy(exchange,e);
  if (exceptionPolicy != null) {
    data.currentRedeliveryPolicy=exceptionPolicy.createRedeliveryPolicy(exchange.getContext(),data.currentRedeliveryPolicy);
    data.handledPredicate=exceptionPolicy.getHandledPolicy();
    data.continuedPredicate=exceptionPolicy.getContinuedPolicy();
    data.retryWhilePredicate=exceptionPolicy.getRetryWhilePolicy();
    data.useOriginalInMessage=exceptionPolicy.isUseOriginalMessage();
    data.asyncDelayedRedelivery=exceptionPolicy.isAsyncDelayedRedelivery(exchange.getContext());
    Processor processor=exceptionPolicy.getErrorHandler();
    if (processor != null) {
      data.failureProcessor=processor;
    }
    processor=exceptionPolicy.getOnRedelivery();
    if (processor != null) {
      data.onRedeliveryProcessor=processor;
    }
  }
  if (!ExchangeHelper.isFailureHandled(exchange) && !ExchangeHelper.isUnitOfWorkExhausted(exchange)) {
    String msg="Failed delivery for exchangeId: " + exchange.getExchangeId() + ". On delivery attempt: "+ data.redeliveryCounter+ " caught: "+ e;
    logFailedDelivery(true,false,false,exchange,msg,data,e);
  }
  data.redeliveryCounter=incrementRedeliveryCounter(exchange,e,data);
}
