{
  Exception caught=exchange.getException();
  exchange.setException(null);
  boolean handled=false;
  if (data.handledPredicate != null && data.handledPredicate.matches(exchange)) {
    exchange.getIn().removeHeader(Exchange.REDELIVERED);
    exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);
    handled=true;
  }
 else {
    decrementRedeliveryCounter(exchange);
  }
  MessageHelper.resetStreamCache(exchange.getIn());
  if (processor != null) {
    if (data.useOriginalInMessage) {
      if (log.isTraceEnabled()) {
        log.trace("Using the original IN message instead of current");
      }
      Message original=exchange.getUnitOfWork().getOriginalInMessage();
      exchange.setIn(original);
    }
    if (log.isTraceEnabled()) {
      log.trace("Failure processor " + processor + " is processing Exchange: "+ exchange);
    }
    try {
      exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));
      processor.process(exchange);
    }
 catch (    Exception e) {
      exchange.setException(e);
    }
    log.trace("Failure processor done");
  }
  String msg="Failed delivery for exchangeId: " + exchange.getExchangeId();
  msg=msg + ". Exhausted after delivery attempt: " + data.redeliveryCounter+ " caught: "+ caught;
  if (processor != null) {
    msg=msg + ". Processed by failure processor: " + processor;
  }
  logFailedDelivery(false,handled,false,exchange,msg,data,null);
}
