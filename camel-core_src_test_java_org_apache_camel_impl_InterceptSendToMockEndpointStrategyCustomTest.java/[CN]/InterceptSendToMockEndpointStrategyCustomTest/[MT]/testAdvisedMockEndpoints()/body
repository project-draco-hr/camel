{
  context.addRegisterEndpointCallback(new MyStrategy());
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").to("direct:foo").to("log:foo").to("mock:result");
      from("direct:foo").transform(constant("Bye World"));
    }
  }
);
  context.start();
  getMockEndpoint("mock:direct:start").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:direct:foo").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:log:foo").expectedBodiesReceived("Bye World");
  getMockEndpoint("mock:result").expectedBodiesReceived("Bye World");
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  assertNotNull(context.hasEndpoint("direct:start"));
  assertNotNull(context.hasEndpoint("direct:foo"));
  assertNotNull(context.hasEndpoint("log:foo"));
  assertNotNull(context.hasEndpoint("mock:result"));
  assertNotNull(context.hasEndpoint("mock:direct:start"));
  assertNotNull(context.hasEndpoint("mock:direct:foo"));
  assertNotNull(context.hasEndpoint("mock:log:foo"));
  assertTrue("Should be called",called);
}
