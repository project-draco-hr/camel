{
  MockEndpoint end=getMockEndpoint("mock:end");
  end.expectedMessageCount(1);
  MockEndpoint complete=getMockEndpoint("mock:complete");
  complete.expectedBodiesReceivedInAnyOrder("finish","stop","ile","markRollback");
  MockEndpoint failed=getMockEndpoint("mock:failed");
  failed.expectedBodiesReceivedInAnyOrder("faulted","npe","rollback");
  template.sendBody("direct:input","finish");
  template.sendBody("direct:input","stop");
  template.sendBody("direct:input","fault");
  template.sendBody("direct:input","ile");
  template.sendBody("direct:input","markRollback");
  try {
    template.sendBody("direct:input","npe");
    fail("Should have thrown exception");
  }
 catch (  CamelExecutionException e) {
    assertEquals("Darn NPE",e.getCause().getMessage());
  }
  try {
    template.sendBody("direct:input","rollback");
    fail("Should have thrown exception");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(RollbackExchangeException.class,e.getCause());
  }
  setAssertPeriod(2000);
  assertMockEndpointsSatisfied();
}
