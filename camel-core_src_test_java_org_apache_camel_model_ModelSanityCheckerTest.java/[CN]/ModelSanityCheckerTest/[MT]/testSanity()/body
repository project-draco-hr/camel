{
  Set<Class<?>> classes=discoverJAxbClasses();
  assertNotNull(classes);
  assertTrue("There should be > 140 classes, was: " + classes.size(),classes.size() > 140);
  for (  Class clazz : classes) {
    if (clazz == ProcessorDefinition.class) {
      continue;
    }
    if (clazz == RouteDefinition.class) {
      continue;
    }
    for (    Field field : clazz.getDeclaredFields()) {
      LOG.debug("Class {} has field {}",clazz.getName(),field.getName());
      boolean attribute=field.getAnnotation(XmlAttribute.class) != null;
      boolean element=field.getAnnotation(XmlElement.class) != null;
      boolean elementRef=field.getAnnotation(XmlElementRef.class) != null;
      if ((attribute && element) || (attribute && elementRef) || (element && elementRef)) {
        fail("Class " + clazz.getName() + " has field "+ field.getName()+ " which has 2+ annotations that are not allowed together.");
      }
      if (attribute || element || elementRef) {
        Method getter=IntrospectionSupport.getPropertyGetter(clazz,field.getName());
        Method setter=IntrospectionSupport.getPropertySetter(clazz,field.getName());
        assertNotNull("Getter " + field.getName() + " on class "+ clazz.getName()+ " is missing",getter);
        assertNotNull("Setter " + field.getName() + " on class "+ clazz.getName()+ " is missing",setter);
      }
    }
    for (    Method method : clazz.getDeclaredMethods()) {
      LOG.debug("Class {} has method {}",clazz.getName(),method.getName());
      boolean attribute=method.getAnnotation(XmlAttribute.class) != null;
      boolean element=method.getAnnotation(XmlElement.class) != null;
      boolean elementRef=method.getAnnotation(XmlElementRef.class) != null;
      assertFalse("Class " + clazz.getName() + " has method "+ method.getName()+ " should not have @XmlAttribute annotation",attribute);
      assertFalse("Class " + clazz.getName() + " has method "+ method.getName()+ " should not have @XmlElement annotation",element);
      assertFalse("Class " + clazz.getName() + " has method "+ method.getName()+ " should not have @XmlElementRef annotation",elementRef);
    }
  }
}
