{
  result.setExpectedMessageCount(1);
  template.send("direct:start",ExchangePattern.InOnly,new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setBody("This is my message text.");
    }
  }
);
  assertMockEndpointsSatisfied();
  try {
    queue1.getClient().queue("testqueue").reserve();
    fail("Message was in the first queue!");
  }
 catch (  IOException e) {
    if (!(e instanceof EmptyQueueException)) {
      throw e;
    }
  }
  try {
    queue2.getClient().queue("testqueue1").reserve();
    fail("Message remained in second queue!");
  }
 catch (  IOException e) {
    if (!(e instanceof EmptyQueueException)) {
      throw e;
    }
  }
}
