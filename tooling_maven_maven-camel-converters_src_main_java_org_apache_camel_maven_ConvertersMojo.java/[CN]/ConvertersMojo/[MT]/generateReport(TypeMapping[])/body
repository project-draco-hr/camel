{
  File f=reportsDirectory;
  if (!f.exists()) {
    f.mkdirs();
  }
  File report=new File(f,"camel-converters.txt");
  FileWriter fw=null;
  try {
    fw=new FileWriter(report);
    fw.write("Camel Type Converter definitions\n");
    fw.write(LINE_SEPARATOR);
    Set<String> packages=new HashSet<String>();
    Set<String> classes=new HashSet<String>();
    StringBuffer buffer=new StringBuffer();
    Class prevFrom=null;
    Class prevTo=null;
    for (    TypeMapping mapping : mappings) {
      boolean ignored=false;
      Class from=mapping.getFromType();
      Class to=mapping.getToType();
      if (ObjectHelper.equal(from,prevFrom) && ObjectHelper.equal(to,prevTo)) {
        ignored=true;
        buffer.append(" ");
      }
      prevFrom=from;
      prevTo=to;
      Method method=mapping.getMethod();
      Class methodClass=method.getDeclaringClass();
      packages.add(methodClass.getPackage().getName());
      classes.add(methodClass.getName());
      buffer.append(from.getSimpleName() + "=>" + to.getSimpleName());
      buffer.append(" [" + mapping.getConverterType().getSimpleName());
      buffer.append("(" + methodClass.getName() + "."+ method.getName()+ "())]");
      if (ignored) {
        buffer.append(" - IGNORED replaced by conversion method above");
      }
      fw.write(buffer.toString() + "\n");
      buffer.setLength(0);
    }
    String summary="Found " + mappings.length + " type conversion methods in "+ classes.size()+ " classes from "+ packages.size()+ " packages.";
    fw.write(LINE_SEPARATOR);
    fw.write(summary + "\n");
    getLog().info(summary);
  }
 catch (  IOException e) {
    throw new MojoExecutionException("Error creating report file " + report,e);
  }
 finally {
    if (fw != null) {
      try {
        fw.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
