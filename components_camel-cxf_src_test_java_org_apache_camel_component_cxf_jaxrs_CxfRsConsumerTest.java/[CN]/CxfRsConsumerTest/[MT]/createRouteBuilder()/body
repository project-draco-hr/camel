{
  return new RouteBuilder(){
    public void configure(){
      errorHandler(new NoErrorHandlerBuilder());
      from(CXF_RS_ENDPOINT_URI).process(new Processor(){
        public void process(        Exchange exchange) throws Exception {
          Message inMessage=exchange.getIn();
          String operationName=inMessage.getHeader(CxfConstants.OPERATION_NAME,String.class);
          if ("getCustomer".equals(operationName)) {
            String httpMethod=inMessage.getHeader(Exchange.HTTP_METHOD,String.class);
            assertEquals("Get a wrong http method","GET",httpMethod);
            String path=inMessage.getHeader(Exchange.HTTP_PATH,String.class);
            String id=inMessage.getBody(String.class);
            if ("/customerservice/customers/126".equals(path)) {
              Customer customer=new Customer();
              customer.setId(Long.parseLong(id));
              customer.setName("Willem");
              exchange.getOut().setBody(customer);
            }
 else {
              if ("/customerservice/customers/400".equals(path)) {
                org.apache.cxf.message.Message cxfMessage=inMessage.getHeader(CxfConstants.CAMEL_CXF_MESSAGE,org.apache.cxf.message.Message.class);
                ServletRequest request=(ServletRequest)cxfMessage.get("HTTP.REQUEST");
                assertNotNull("The request object should not be null",request);
                Response r=Response.status(200).entity("The remoteAddress is 127.0.0.1").build();
                exchange.getOut().setBody(r);
                return;
              }
              if ("/customerservice/customers/123".equals(path)) {
                Response r=Response.status(200).entity("customer response back!").build();
                exchange.getOut().setBody(r);
                return;
              }
              if ("/customerservice/customers/456".equals(path)) {
                Response r=Response.status(404).entity("Can't found the customer with uri " + path).build();
                throw new WebApplicationException(r);
              }
 else               if ("/customerservice/customers/234".equals(path)) {
                Response r=Response.status(404).entity("Can't found the customer with uri " + path).build();
                exchange.getOut().setBody(r);
                exchange.getOut().setFault(true);
              }
 else {
                throw new RuntimeCamelException("Can't found the customer with uri " + path);
              }
            }
          }
          if ("updateCustomer".equals(operationName)) {
            assertEquals("Get a wrong customer message header","header1;header2",inMessage.getHeader("test"));
            String httpMethod=inMessage.getHeader(Exchange.HTTP_METHOD,String.class);
            assertEquals("Get a wrong http method","PUT",httpMethod);
            Customer customer=inMessage.getBody(Customer.class);
            assertNotNull("The customer should not be null.",customer);
            assertEquals("Get a wrong customer name.","Mary",customer.getName());
            exchange.getOut().setBody(Response.ok().build());
          }
        }
      }
);
    }
  }
;
}
