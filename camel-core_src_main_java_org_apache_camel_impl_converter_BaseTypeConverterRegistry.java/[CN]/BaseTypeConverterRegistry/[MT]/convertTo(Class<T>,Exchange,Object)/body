{
  if (!isRunAllowed()) {
    throw new IllegalStateException(this + " is not started");
  }
  Object answer;
  try {
    if (statistics.isStatisticsEnabled()) {
      attemptCounter.incrementAndGet();
    }
    answer=doConvertTo(type,exchange,value,false);
  }
 catch (  Exception e) {
    if (statistics.isStatisticsEnabled()) {
      failedCounter.incrementAndGet();
    }
    boolean execution=ObjectHelper.getException(ExecutionException.class,e) != null || ObjectHelper.getException(CamelExecutionException.class,e) != null;
    if (execution) {
      throw ObjectHelper.wrapCamelExecutionException(exchange,e);
    }
    if (e instanceof TypeConversionException) {
      throw (TypeConversionException)e;
    }
 else {
      throw new TypeConversionException(value,type,e);
    }
  }
  if (answer == Void.TYPE) {
    if (statistics.isStatisticsEnabled()) {
      missCounter.incrementAndGet();
    }
    return null;
  }
 else {
    if (statistics.isStatisticsEnabled()) {
      hitCounter.incrementAndGet();
    }
    return (T)answer;
  }
}
