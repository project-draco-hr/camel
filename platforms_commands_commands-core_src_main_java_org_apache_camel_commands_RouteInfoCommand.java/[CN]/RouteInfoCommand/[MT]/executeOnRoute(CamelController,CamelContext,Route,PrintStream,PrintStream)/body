{
  out.println(stringEscape.unescapeJava("\u001B[1m\u001B[33mCamel Route " + camelRoute.getId() + "\u001B[0m"));
  out.println(stringEscape.unescapeJava("\tCamel Context: " + camelRoute.getRouteContext().getCamelContext().getName()));
  out.println("");
  out.println(stringEscape.unescapeJava("\u001B[1mProperties\u001B[0m"));
  for (  Map.Entry<String,Object> entry : camelRoute.getProperties().entrySet()) {
    out.println(stringEscape.unescapeJava("\t" + entry.getKey() + " = "+ entry.getValue()));
  }
  out.println("");
  out.println(stringEscape.unescapeJava("\u001B[1mStatistics\u001B[0m"));
  if (camelContext != null) {
    ManagementAgent agent=camelContext.getManagementStrategy().getManagementAgent();
    if (agent != null) {
      MBeanServer mBeanServer=agent.getMBeanServer();
      Set<ObjectName> set=mBeanServer.queryNames(new ObjectName(agent.getMBeanObjectDomainName() + ":type=routes,name=\"" + camelRoute.getId()+ "\",*"),null);
      Iterator<ObjectName> iterator=set.iterator();
      if (iterator.hasNext()) {
        ObjectName routeMBean=iterator.next();
        String camelId=(String)mBeanServer.getAttribute(routeMBean,"CamelId");
        if (camelId != null && camelId.equals(camelContext.getName())) {
          Integer inflightExchange=(Integer)mBeanServer.getAttribute(routeMBean,"InflightExchanges");
          out.println(stringEscape.unescapeJava("\tInflight Exchanges: " + inflightExchange));
          Long exchangesTotal=(Long)mBeanServer.getAttribute(routeMBean,"ExchangesTotal");
          out.println(stringEscape.unescapeJava("\tExchanges Total: " + exchangesTotal));
          Long exchangesCompleted=(Long)mBeanServer.getAttribute(routeMBean,"ExchangesCompleted");
          out.println(stringEscape.unescapeJava("\tExchanges Completed: " + exchangesCompleted));
          Long exchangesFailed=(Long)mBeanServer.getAttribute(routeMBean,"ExchangesFailed");
          out.println(stringEscape.unescapeJava("\tExchanges Failed: " + exchangesFailed));
          Long minProcessingTime=(Long)mBeanServer.getAttribute(routeMBean,"MinProcessingTime");
          out.println(stringEscape.unescapeJava("\tMin Processing Time: " + minProcessingTime + " ms"));
          Long maxProcessingTime=(Long)mBeanServer.getAttribute(routeMBean,"MaxProcessingTime");
          out.println(stringEscape.unescapeJava("\tMax Processing Time: " + maxProcessingTime + " ms"));
          Long meanProcessingTime=(Long)mBeanServer.getAttribute(routeMBean,"MeanProcessingTime");
          out.println(stringEscape.unescapeJava("\tMean Processing Time: " + meanProcessingTime + " ms"));
          Long totalProcessingTime=(Long)mBeanServer.getAttribute(routeMBean,"TotalProcessingTime");
          out.println(stringEscape.unescapeJava("\tTotal Processing Time: " + totalProcessingTime + " ms"));
          Long lastProcessingTime=(Long)mBeanServer.getAttribute(routeMBean,"LastProcessingTime");
          out.println(stringEscape.unescapeJava("\tLast Processing Time: " + lastProcessingTime + " ms"));
          Long deltaProcessingTime=(Long)mBeanServer.getAttribute(routeMBean,"DeltaProcessingTime");
          out.println(stringEscape.unescapeJava("\tDelta Processing Time: " + deltaProcessingTime + " ms"));
          String load01=(String)mBeanServer.getAttribute(routeMBean,"Load01");
          String load05=(String)mBeanServer.getAttribute(routeMBean,"Load05");
          String load15=(String)mBeanServer.getAttribute(routeMBean,"Load15");
          out.println(stringEscape.unescapeJava("\tLoad Avg: " + load01 + ", "+ load05+ ", "+ load15));
          Object resetTimestampObj=mBeanServer.getAttribute(routeMBean,"ResetTimestamp");
          SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
          if (resetTimestampObj == null) {
            out.println(stringEscape.unescapeJava("\tReset Statistics Date:"));
          }
 else {
            Date firstExchangeTimestamp=(Date)resetTimestampObj;
            out.println(stringEscape.unescapeJava("\tReset Statistics Date: " + format.format(firstExchangeTimestamp)));
          }
          Object firstExchangeTimestampObj=mBeanServer.getAttribute(routeMBean,"FirstExchangeCompletedTimestamp");
          if (firstExchangeTimestampObj == null) {
            out.println(stringEscape.unescapeJava("\tFirst Exchange Date:"));
          }
 else {
            Date firstExchangeTimestamp=(Date)firstExchangeTimestampObj;
            out.println(stringEscape.unescapeJava("\tFirst Exchange Date: " + format.format(firstExchangeTimestamp)));
          }
          Object lastExchangeCompletedTimestampObj=mBeanServer.getAttribute(routeMBean,"LastExchangeCompletedTimestamp");
          if (lastExchangeCompletedTimestampObj == null) {
            out.println(stringEscape.unescapeJava("\tLast Exchange Completed Date:"));
          }
 else {
            Date lastExchangeCompletedTimestamp=(Date)lastExchangeCompletedTimestampObj;
            out.println(stringEscape.unescapeJava("\tLast Exchange Completed Date: " + format.format(lastExchangeCompletedTimestamp)));
          }
        }
      }
    }
 else {
      out.println("");
      out.println(stringEscape.unescapeJava("\u001B[31mJMX Agent of Camel is not reachable. Maybe it has been disabled on the Camel context"));
      out.println(stringEscape.unescapeJava("In consequence, some statistics are not available.\u001B[0m"));
    }
    out.println("");
    out.println(stringEscape.unescapeJava("\u001B[1mDefinition\u001B[0m"));
    RouteDefinition definition=camelController.getRouteDefinition(camelRoute.getId(),camelRoute.getRouteContext().getCamelContext().getName());
    out.println(stringEscape.unescapeJava(ModelHelper.dumpModelAsXml(definition)));
  }
}
