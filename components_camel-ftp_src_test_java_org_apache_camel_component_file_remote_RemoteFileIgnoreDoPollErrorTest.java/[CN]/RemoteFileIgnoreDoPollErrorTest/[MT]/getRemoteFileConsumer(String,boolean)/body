{
  return new RemoteFileConsumer<Object>(remoteFileEndpoint,null,null){
    @Override protected boolean doPollDirectory(    String absolutePath,    String dirName,    List<GenericFile<Object>> genericFiles,    int depth){
switch (doPollResult) {
case "IllegalStateException":
        throw new IllegalStateException("Problem");
case "GenericFileOperationFailedException":
      throw new GenericFileOperationFailedException("Perm error");
case "true":
    return true;
default :
  return false;
}
}
@Override protected boolean pollDirectory(String fileName,List<GenericFile<Object>> genericFiles,int depth){
return false;
}
@Override protected boolean isMatched(GenericFile<Object> file,String doneFileName,List<Object> files){
return false;
}
@Override protected boolean ignoreCannotRetrieveFile(String name,Exchange exchange,Exception cause){
return ignoreCannotRetrieveFile;
}
}
;
}
