{
  transactionTemplate.execute(new TransactionCallback<Object>(){
    public Object doInTransaction(    TransactionStatus status){
      entityManager.joinTransaction();
      entityManager.createQuery("delete from " + entityName).executeUpdate();
      Customer dummy=new Customer();
      dummy.setName("Test");
      entityManager.persist(dummy);
      return null;
    }
  }
);
  List<?> results=entityManager.createQuery(queryText).getResultList();
  assertEquals("Should have no results: " + results,0,results.size());
  template.send(endpoint,new Processor(){
    public void process(    Exchange exchange){
      Customer customer=new Customer();
      customer.setName("Willem");
      exchange.getIn().setBody(customer);
    }
  }
);
  results=entityManager.createQuery(queryText).getResultList();
  assertEquals("Should have results: " + results,1,results.size());
  Customer customer=(Customer)results.get(0);
  assertEquals("name property","Willem",customer.getName());
  consumer=endpoint.createConsumer(new Processor(){
    public void process(    Exchange e){
      LOG.info("Received exchange: " + e.getIn());
      receivedExchange=e;
      latch.countDown();
    }
  }
);
  consumer.start();
  assertTrue(latch.await(10,TimeUnit.SECONDS));
  assertReceivedResult(receivedExchange);
  JpaConsumer jpaConsumer=(JpaConsumer)consumer;
  assertURIQueryOption(jpaConsumer);
}
