{
  String key=getQueueKey(uri);
  QueueReference ref=getQueues().get(key);
  if (ref != null) {
    if (size != null && ref.getSize() != size) {
      throw new IllegalArgumentException("Cannot use existing queue " + key + " as the existing queue size "+ (ref.getSize() != null ? ref.getSize() : Integer.MAX_VALUE)+ " does not match given queue size "+ size);
    }
    ref.addReference();
    if (log.isDebugEnabled()) {
      log.debug("Reusing existing queue {} with size {} and reference count {}",new Object[]{key,size,ref.getCount()});
    }
    return ref;
  }
  BlockingQueue<Exchange> queue;
  if (size != null && size > 0) {
    queue=new LinkedBlockingQueue<Exchange>(size);
  }
 else {
    if (getQueueSize() > 0) {
      size=getQueueSize();
      queue=new LinkedBlockingQueue<Exchange>(getQueueSize());
    }
 else {
      queue=new LinkedBlockingQueue<Exchange>();
    }
  }
  log.debug("Created queue {} with size {}",key,size);
  ref=new QueueReference(queue,size,multipleConsumers);
  ref.addReference();
  getQueues().put(key,ref);
  return ref;
}
