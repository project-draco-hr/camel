{
  output=createOutputsProcessor(routeContext);
  routeContext.getInterceptStrategies().add(new InterceptStrategy(){
    public Processor wrapProcessorInInterceptors(    ProcessorDefinition processorDefinition,    Processor target,    Processor nextTarget) throws Exception {
      Processor processor=nextTarget != null ? nextTarget : target;
      if (processor != null) {
        List<Processor> list=new ArrayList<Processor>(2);
        list.add(output);
        list.add(processor);
        return new Pipeline(list);
      }
 else {
        return output;
      }
    }
    @Override public String toString(){
      return "intercept[" + output + "]";
    }
  }
);
  routeContext.getRoute().getOutputs().remove(this);
  return null;
}
