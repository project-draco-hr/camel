{
  List<ProcessorDefinition> list=new ArrayList<ProcessorDefinition>();
  for (  ProcessorDefinition out : outputs) {
    if (out instanceof WhenDefinition) {
      WhenDefinition when=(WhenDefinition)out;
      usePredicate=Boolean.TRUE;
      ChoiceDefinition choice=new ChoiceDefinition();
      choice.when(PredicateBuilder.not(when.getExpression()));
      choice.addOutput(proceed);
      list.add(choice);
      ChoiceDefinition otherwise=choice.otherwise();
      for (      ProcessorDefinition child : when.getOutputs()) {
        if (child instanceof StopDefinition) {
          stopIntercept();
        }
 else {
          otherwise.addOutput(child);
        }
      }
    }
 else     if (out instanceof StopDefinition) {
      stopIntercept();
    }
 else {
      list.add(out);
    }
  }
  outputs.clear();
  for (  ProcessorDefinition out : list) {
    addOutput(out);
  }
}
