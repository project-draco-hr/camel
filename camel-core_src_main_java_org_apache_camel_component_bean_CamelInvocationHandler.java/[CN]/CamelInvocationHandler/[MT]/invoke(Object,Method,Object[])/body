{
  BeanInvocation invocation=new BeanInvocation(method,args);
  ExchangePattern pattern=ExchangePattern.InOut;
  MethodInfo methodInfo=methodInfoCache.getMethodInfo(method);
  if (methodInfo != null) {
    pattern=methodInfo.getPattern();
  }
  Exchange exchange=new DefaultExchange(endpoint,pattern);
  exchange.getIn().setBody(invocation);
  producer.process(exchange);
  Throwable fault=exchange.getException();
  if (fault != null) {
    throw new InvocationTargetException(fault);
  }
  if (pattern.isOutCapable()) {
    return exchange.getOut().getBody();
  }
 else {
    return null;
  }
}
