{
  Exchange exchange=endpoint.createExchange();
  try {
    String jsonBody=endpoint.getConfig().getRequestor(apiUrl).get();
    if (!endpoint.getConfig().isUseJson()) {
      ObjectMapper jsonMapper=new ObjectMapper();
      String function=endpoint.getConfig().getFunction();
switch (YammerFunctionType.fromUri(function)) {
case USERS:
        List<User> users=jsonMapper.readValue(jsonBody,jsonMapper.getTypeFactory().constructCollectionType(List.class,User.class));
      exchange.getIn().setBody(users);
    break;
case CURRENT:
  User user=jsonMapper.readValue(jsonBody,jsonMapper.getTypeFactory().constructType(User.class));
exchange.getIn().setBody(user);
break;
default :
throw new Exception(String.format("%s is not a valid Yammer user function type.",function));
}
}
 else {
exchange.getIn().setBody(jsonBody);
}
getProcessor().process(exchange);
return 1;
}
  finally {
if (exchange.getException() != null) {
getExceptionHandler().handleException("Error processing exchange",exchange,exchange.getException());
}
}
}
