{
  getMockEndpoint("mock:input").expectedBodiesReceived("Hello World");
  getMockEndpoint("mock:input").expectedHeaderReceived(Exchange.CONTENT_TYPE,"text/plain; charset=\"" + CHARSET + "\"");
  getMockEndpoint("mock:input").expectedHeaderReceived(Exchange.HTTP_CHARACTER_ENCODING,CHARSET);
  getMockEndpoint("mock:input").expectedHeaderReceived(Exchange.HTTP_URL,"http://0.0.0.0:" + getPort() + "/foo");
  getMockEndpoint("mock:input").expectedPropertyReceived(Exchange.CHARSET_NAME,CHARSET);
  byte[] data="Hello World".getBytes(Charset.forName(CHARSET));
  String out=template.requestBodyAndHeader("jetty:http://0.0.0.0:{{port}}/foo",data,"content-type","text/plain; charset=\"" + CHARSET + "\"",String.class);
  assertEquals("Bye World",out);
  Exchange exchange=getMockEndpoint("mock:input").getExchanges().get(0);
  Message in=exchange.getIn();
  System.out.println(in.getHeaders());
  assertMockEndpointsSatisfied();
}
