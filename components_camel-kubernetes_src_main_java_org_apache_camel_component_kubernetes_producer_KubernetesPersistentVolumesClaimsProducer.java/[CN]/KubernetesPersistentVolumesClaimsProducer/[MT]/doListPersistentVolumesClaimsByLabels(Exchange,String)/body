{
  PersistentVolumeClaimList pvcList=null;
  Map<String,String> labels=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_PERSISTENT_VOLUMES_CLAIMS_LABELS,Map.class);
  String namespaceName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,String.class);
  if (!ObjectHelper.isEmpty(namespaceName)) {
    ClientNonNamespaceOperation<PersistentVolumeClaim,PersistentVolumeClaimList,DoneablePersistentVolumeClaim,ClientResource<PersistentVolumeClaim,DoneablePersistentVolumeClaim>> pvcs=getEndpoint().getKubernetesClient().persistentVolumeClaims().inNamespace(namespaceName);
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      pvcs.withLabel(entry.getKey(),entry.getValue());
    }
    pvcList=pvcs.list();
  }
 else {
    ClientMixedOperation<PersistentVolumeClaim,PersistentVolumeClaimList,DoneablePersistentVolumeClaim,ClientResource<PersistentVolumeClaim,DoneablePersistentVolumeClaim>> pvcs=getEndpoint().getKubernetesClient().persistentVolumeClaims();
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      pvcs.withLabel(entry.getKey(),entry.getValue());
    }
    pvcList=pvcs.list();
  }
  exchange.getOut().setBody(pvcList.getItems());
}
