{
  CometDServlet servlet=new CometDServlet();
  ServletContextHandler context=new ServletContextHandler(server,"/",ServletContextHandler.NO_SECURITY | ServletContextHandler.NO_SESSIONS);
  ServletHolder holder=new ServletHolder();
  holder.setServlet(servlet);
  holder.setAsyncSupported(true);
  if (endpoint.getBaseResource() != null) {
    String[] resources=endpoint.getBaseResource().split(":");
    if (LOG.isDebugEnabled()) {
      LOG.debug(">>> Protocol found: " + resources[0] + ", and resource: "+ resources[1]);
    }
    if (resources[0].equals("file")) {
      context.setBaseResource(Resource.newResource(resources[1]));
    }
 else     if (resources[0].equals("classpath")) {
      URL url=this.getCamelContext().getClassResolver().loadResourceAsURL(resources[1]);
      context.setBaseResource(Resource.newResource(url));
    }
  }
  applyCrossOriginFiltering(endpoint,context);
  context.addServlet(holder,"/cometd/*");
  context.addServlet("org.eclipse.jetty.servlet.DefaultServlet","/");
  context.setSessionHandler(new SessionHandler(new HashSessionManager()));
  holder.setInitParameter("timeout",Integer.toString(endpoint.getTimeout()));
  holder.setInitParameter("interval",Integer.toString(endpoint.getInterval()));
  holder.setInitParameter("maxInterval",Integer.toString(endpoint.getMaxInterval()));
  holder.setInitParameter("multiFrameInterval",Integer.toString(endpoint.getMultiFrameInterval()));
  holder.setInitParameter("JSONCommented",Boolean.toString(endpoint.isJsonCommented()));
  holder.setInitParameter("logLevel",Integer.toString(endpoint.getLogLevel()));
  return servlet;
}
