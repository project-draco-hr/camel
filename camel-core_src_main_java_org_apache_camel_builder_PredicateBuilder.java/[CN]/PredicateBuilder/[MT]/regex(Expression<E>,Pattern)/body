{
  notNull(expression,"expression");
  notNull(pattern,"pattern");
  return new Predicate<E>(){
    public boolean matches(    E exchange){
      Object value=expression.evaluate(exchange);
      if (value != null) {
        Matcher matcher=pattern.matcher(value.toString());
        return matcher.matches();
      }
      return false;
    }
    @Override public String toString(){
      return expression + ".matches(" + pattern+ ")";
    }
  }
;
}
