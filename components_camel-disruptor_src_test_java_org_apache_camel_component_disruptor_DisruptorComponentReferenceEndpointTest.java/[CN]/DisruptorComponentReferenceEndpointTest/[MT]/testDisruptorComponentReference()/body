{
  final DisruptorComponent disruptor=context.getComponent("disruptor",DisruptorComponent.class);
  final String fooKey=DisruptorComponent.getDisruptorKey("disruptor://foo");
  assertEquals(1,disruptor.getDisruptors().get(fooKey).getEndpointCount());
  assertEquals(2,numberOfReferences(disruptor));
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("disruptor:foo?concurrentConsumers=1").routeId("foo2").to("mock:foo2");
    }
  }
);
  assertEquals(2,disruptor.getDisruptors().get(fooKey).getEndpointCount());
  assertEquals(3,numberOfReferences(disruptor));
  context.stopRoute("foo");
  context.removeRoute("foo");
  assertEquals(1,disruptor.getDisruptors().get(fooKey).getEndpointCount());
  assertEquals(2,numberOfReferences(disruptor));
  context.stopRoute("foo2");
  context.removeRoute("foo2");
  assertTrue(disruptor.getDisruptors().get(fooKey) == null);
  assertEquals(1,numberOfReferences(disruptor));
  final String barKey=DisruptorComponent.getDisruptorKey("disruptor://bar");
  assertEquals(1,disruptor.getDisruptors().get(barKey).getEndpointCount());
}
