{
  NotifyingFuture result;
  if (!ObjectHelper.isEmpty(exchange.getIn().getHeader(InfinispanConstants.LIFESPAN_TIME)) && !ObjectHelper.isEmpty(exchange.getIn().getHeader(InfinispanConstants.LIFESPAN_TIME_UNIT))) {
    long lifespan=exchange.getIn().getHeader(InfinispanConstants.LIFESPAN_TIME,long.class);
    String timeUnit=exchange.getIn().getHeader(InfinispanConstants.LIFESPAN_TIME_UNIT,String.class);
    if (!ObjectHelper.isEmpty(exchange.getIn().getHeader(InfinispanConstants.MAX_IDLE_TIME)) && !ObjectHelper.isEmpty(exchange.getIn().getHeader(InfinispanConstants.MAX_IDLE_TIME_UNIT))) {
      long maxIdle=exchange.getIn().getHeader(InfinispanConstants.MAX_IDLE_TIME,long.class);
      String maxIdleTimeUnit=exchange.getIn().getHeader(InfinispanConstants.MAX_IDLE_TIME_UNIT,String.class);
      if (ObjectHelper.isEmpty(getOldValue(exchange))) {
        result=cache.replaceAsync(getKey(exchange),getValue(exchange),lifespan,TimeUnit.valueOf(timeUnit),maxIdle,TimeUnit.valueOf(maxIdleTimeUnit));
      }
 else {
        result=cache.replaceAsync(getKey(exchange),getOldValue(exchange),getValue(exchange),lifespan,TimeUnit.valueOf(timeUnit),maxIdle,TimeUnit.valueOf(maxIdleTimeUnit));
      }
    }
 else {
      if (ObjectHelper.isEmpty(getOldValue(exchange))) {
        result=cache.replaceAsync(getKey(exchange),getValue(exchange),lifespan,TimeUnit.valueOf(timeUnit));
      }
 else {
        result=cache.replaceAsync(getKey(exchange),getOldValue(exchange),getValue(exchange),lifespan,TimeUnit.valueOf(timeUnit));
      }
    }
  }
 else {
    if (ObjectHelper.isEmpty(getOldValue(exchange))) {
      result=cache.replaceAsync(getKey(exchange),getValue(exchange));
    }
 else {
      result=cache.replaceAsync(getKey(exchange),getOldValue(exchange),getValue(exchange));
    }
  }
  setResult(result,exchange);
}
