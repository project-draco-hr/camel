{
  if (isPlatform("aix")) {
    return;
  }
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=myCamel,type=services,*");
  Set<ObjectName> names=mbeanServer.queryNames(on,null);
  ObjectName name=null;
  for (  ObjectName service : names) {
    if (service.toString().contains("DefaultStreamCachingStrategy")) {
      name=service;
      break;
    }
  }
  assertNotNull("Cannot find DefaultStreamCachingStrategy",name);
  Boolean enabled=(Boolean)mbeanServer.getAttribute(name,"Enabled");
  assertEquals(Boolean.TRUE,enabled);
  String dir=(String)mbeanServer.getAttribute(name,"SpoolDirectory");
  assertEquals(normalizePath("target/cachedir/myCamel"),normalizePath(dir));
  Long threshold=(Long)mbeanServer.getAttribute(name,"SpoolThreshold");
  assertEquals(StreamCache.DEFAULT_SPOOL_THRESHOLD,threshold.longValue());
  Integer size=(Integer)mbeanServer.getAttribute(name,"BufferSize");
  assertEquals(IOHelper.DEFAULT_BUFFER_SIZE,size.intValue());
  Long counter=(Long)mbeanServer.getAttribute(name,"CacheMemoryCounter");
  assertEquals(0,counter.longValue());
  counter=(Long)mbeanServer.getAttribute(name,"CacheSpoolCounter");
  assertEquals(0,counter.longValue());
  Long cacheSize=(Long)mbeanServer.getAttribute(name,"CacheMemorySize");
  assertEquals(0,cacheSize.longValue());
  cacheSize=(Long)mbeanServer.getAttribute(name,"CacheSpoolSize");
  assertEquals(0,cacheSize.longValue());
  String chiper=(String)mbeanServer.getAttribute(name,"SpoolChiper");
  assertNull(chiper);
  Boolean remove=(Boolean)mbeanServer.getAttribute(name,"RemoveSpoolDirectoryWhenStopping");
  assertEquals(Boolean.TRUE,remove);
}
