{
  getMockEndpoint("mock:a").expectedBodiesReceived("start");
  getMockEndpoint("mock:b").expectedBodiesReceived("start-a");
  getMockEndpoint("mock:c").expectedBodiesReceived("start-a-b");
  getMockEndpoint("mock:d").expectedBodiesReceived("start-a-b-c");
  getMockEndpoint("mock:e").expectedBodiesReceived("start-a-b-c-d");
  getMockEndpoint("mock:f").expectedBodiesReceived("start-a-b-c-d-e");
  getMockEndpoint("mock:g").expectedBodiesReceived("start-a-b-c-d-e-f");
  getMockEndpoint("mock:h").expectedBodiesReceived("start-a-b-c-d-e-f-g");
  final String reply=template.requestBody("disruptor:a","start",String.class);
  assertEquals("start-a-b-c-d-e-f-g-h",reply);
  assertMockEndpointsSatisfied();
}
