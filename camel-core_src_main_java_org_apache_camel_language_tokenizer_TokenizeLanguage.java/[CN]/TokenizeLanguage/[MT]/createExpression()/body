{
  ObjectHelper.notNull(token,"token");
  if (endToken != null && inheritNamespaceTagName != null) {
    throw new IllegalArgumentException("Cannot have both xml and pair tokenizer enabled.");
  }
  if (isXml() && (endToken != null || includeTokens)) {
    throw new IllegalArgumentException("Cannot have both xml and pair tokenizer enabled.");
  }
  Expression answer=null;
  if (isXml()) {
    answer=ExpressionBuilder.tokenizeXMLExpression(token,inheritNamespaceTagName);
  }
 else   if (endToken != null) {
    answer=ExpressionBuilder.tokenizePairExpression(token,endToken,includeTokens);
  }
  if (answer == null) {
    Expression exp=headerName == null ? ExpressionBuilder.bodyExpression() : ExpressionBuilder.headerExpression(headerName);
    if (regex) {
      answer=ExpressionBuilder.regexTokenizeExpression(exp,token);
    }
 else {
      answer=ExpressionBuilder.tokenizeExpression(exp,token);
    }
  }
  if (group > 0) {
    if (isXml()) {
      answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);
    }
 else {
      answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);
    }
  }
  return answer;
}
