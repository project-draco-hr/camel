{
  try {
    TabularData answer=new TabularDataSupport(CamelOpenMBeanTypes.explainEndpointTabularType());
    URI uri=endpoint.getEndpointConfiguration().getURI();
    Map<String,Object> options=URISupport.parseParameters(uri);
    for (    Map.Entry<String,Object> entry : options.entrySet()) {
      CompositeType ct=CamelOpenMBeanTypes.explainEndpointsCompositeType();
      String option=entry.getKey();
      String value="";
      if (entry.getValue() != null) {
        value=entry.getValue().toString();
      }
      value=URISupport.sanitizePath(value);
      String description=null;
      String json=endpoint.getCamelContext().getComponentParameterJsonSchema(uri.getScheme());
      if (json != null) {
        description=JsonSchemaHelper.getDescription(json,option);
      }
      description=ObjectHelper.isEmpty(description) ? "" : description;
      CompositeData data=new CompositeDataSupport(ct,new String[]{"option","value","description"},new Object[]{option,value,description});
      answer.put(data);
    }
    return answer;
  }
 catch (  Exception e) {
    throw ObjectHelper.wrapRuntimeCamelException(e);
  }
}
