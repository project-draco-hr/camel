{
  if (isPlatform("aix")) {
    return;
  }
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=routes,name=\"foo\"");
  getMockEndpoint("mock:result").expectedMessageCount(1);
  getMockEndpoint("mock:tap").expectedMessageCount(1);
  template.sendBody("seda:foo","Hello World");
  assertMockEndpointsSatisfied();
  String state=(String)mbeanServer.getAttribute(on,"State");
  assertEquals("Should be started",ServiceStatus.Started.name(),state);
  Set<ObjectName> set=mbeanServer.queryNames(new ObjectName("*:type=threadpools,*"),null);
  boolean wireTap=false;
  for (  ObjectName name : set) {
    if (name.toString().contains("wireTap")) {
      wireTap=true;
      break;
    }
  }
  assertFalse("Should not have a wire tap thread pool",wireTap);
  mbeanServer.invoke(on,"stop",null,null);
  state=(String)mbeanServer.getAttribute(on,"State");
  assertEquals("Should be stopped",ServiceStatus.Stopped.name(),state);
  mbeanServer.invoke(on,"remove",null,null);
  boolean registered=mbeanServer.isRegistered(on);
  assertFalse("Route mbean should have been unregistered",registered);
  set=mbeanServer.queryNames(new ObjectName("*:type=threadpools,*"),null);
  wireTap=false;
  for (  ObjectName name : set) {
    if (name.toString().contains("wireTap")) {
      wireTap=true;
      break;
    }
  }
  assertFalse("Should not have a wire tap thread pool",wireTap);
  assertFalse("Thread pool should not be shutdown",myThreadPool.isShutdown());
  myThreadPool.shutdownNow();
}
