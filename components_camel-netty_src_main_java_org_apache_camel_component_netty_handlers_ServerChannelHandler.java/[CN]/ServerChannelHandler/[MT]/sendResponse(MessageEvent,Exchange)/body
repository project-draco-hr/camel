{
  Object body;
  if (ExchangeHelper.isOutCapable(exchange)) {
    body=NettyPayloadHelper.getOut(consumer.getEndpoint(),exchange);
  }
 else {
    body=NettyPayloadHelper.getIn(consumer.getEndpoint(),exchange);
  }
  boolean failed=exchange.isFailed();
  if (failed && !consumer.getEndpoint().getConfiguration().isTransferExchange()) {
    if (exchange.getException() != null) {
      body=exchange.getException();
    }
 else {
      body=exchange.getOut().getBody();
    }
  }
  if (body == null) {
    LOG.warn("Cannot write body since its null, closing channel: " + exchange);
    NettyHelper.close(messageEvent.getChannel());
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Writing body: " + body);
    }
    if (consumer.getConfiguration().getProtocol().equalsIgnoreCase("udp")) {
      NettyHelper.writeBody(messageEvent.getChannel(),messageEvent.getRemoteAddress(),body,exchange);
    }
 else {
      NettyHelper.writeBody(messageEvent.getChannel(),null,body,exchange);
    }
  }
  Boolean close;
  if (ExchangeHelper.isOutCapable(exchange)) {
    close=exchange.getOut().getHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE,Boolean.class);
  }
 else {
    close=exchange.getIn().getHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE,Boolean.class);
  }
  boolean disconnect=consumer.getConfiguration().isDisconnect();
  if (close != null) {
    disconnect=close;
  }
  if (disconnect) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Closing channel when complete at address: " + messageEvent.getRemoteAddress());
    }
    NettyHelper.close(messageEvent.getChannel());
  }
}
