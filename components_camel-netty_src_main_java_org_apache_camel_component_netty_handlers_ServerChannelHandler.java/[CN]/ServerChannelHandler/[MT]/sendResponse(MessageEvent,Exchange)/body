{
  Object body=getResponseBody(exchange);
  boolean failed=exchange.isFailed();
  if (failed && !consumer.getEndpoint().getConfiguration().isTransferExchange()) {
    if (exchange.getException() != null) {
      body=exchange.getException();
    }
 else {
      body=exchange.getOut().getBody();
    }
  }
  if (body == null) {
    noReplyLogger.log("No payload to send as reply for exchange: " + exchange);
    if (consumer.getConfiguration().isDisconnectOnNoReply()) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Closing channel as no payload to send as reply at address: {}",messageEvent.getRemoteAddress());
      }
      NettyHelper.close(messageEvent.getChannel());
    }
  }
 else {
    if (consumer.getConfiguration().isTextline()) {
      body=NettyHelper.getTextlineBody(body,exchange,consumer.getConfiguration().getDelimiter(),consumer.getConfiguration().isAutoAppendDelimiter());
    }
    ChannelFutureListener listener=createResponseFutureListener(consumer,exchange,messageEvent.getRemoteAddress());
    if (consumer.getConfiguration().isTcp()) {
      NettyHelper.writeBodyAsync(LOG,messageEvent.getChannel(),null,body,exchange,listener);
    }
 else {
      NettyHelper.writeBodyAsync(LOG,messageEvent.getChannel(),messageEvent.getRemoteAddress(),body,exchange,listener);
    }
  }
}
