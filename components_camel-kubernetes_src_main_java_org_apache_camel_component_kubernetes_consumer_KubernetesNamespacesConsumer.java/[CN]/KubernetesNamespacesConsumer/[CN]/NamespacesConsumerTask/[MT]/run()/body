{
  ClientNonNamespaceOperation<Namespace,NamespaceList,DoneableNamespace,ClientResource<Namespace,DoneableNamespace>> w=getEndpoint().getKubernetesClient().namespaces();
  if (ObjectHelper.isNotEmpty(getEndpoint().getKubernetesConfiguration().getNamespace())) {
    w.withName(getEndpoint().getKubernetesConfiguration().getNamespace());
  }
  w.watch(new Watcher<Namespace>(){
    @Override public void eventReceived(    io.fabric8.kubernetes.client.Watcher.Action action,    Namespace resource){
      NamespaceEvent ne=new NamespaceEvent(action,resource);
      Exchange exchange=getEndpoint().createExchange();
      exchange.getIn().setBody(ne.getNamespace());
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_EVENT_ACTION,ne.getAction());
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_EVENT_TIMESTAMP,System.currentTimeMillis());
      try {
        processor.process(exchange);
      }
 catch (      Exception e) {
        getExceptionHandler().handleException("Error during processing",exchange,e);
      }
    }
    @Override public void onClose(    KubernetesClientException cause){
      if (cause != null) {
        LOG.error(cause.getMessage(),cause);
      }
    }
  }
);
}
