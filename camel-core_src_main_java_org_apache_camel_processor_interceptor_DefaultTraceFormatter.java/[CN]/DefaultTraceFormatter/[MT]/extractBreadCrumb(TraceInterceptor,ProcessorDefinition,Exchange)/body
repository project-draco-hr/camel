{
  String id="";
  String result;
  if (!showBreadCrumb && !showExchangeId && !showShortExchangeId&& !showNode) {
    return "";
  }
  if (showBreadCrumb) {
    id=getBreadCrumbID(exchange).toString();
  }
 else   if (showExchangeId || showShortExchangeId) {
    id=getBreadCrumbID(exchange).toString();
    if (showShortExchangeId) {
      id=id.substring(id.indexOf("/") + 1);
    }
  }
  String from="";
  String to="";
  if (showNode && exchange.getUnitOfWork() instanceof TraceableUnitOfWork) {
    TraceableUnitOfWork tuow=(TraceableUnitOfWork)exchange.getUnitOfWork();
    RouteNode traceFrom=tuow.getSecondLastNode();
    if (traceFrom != null) {
      from=getNodeMessage(traceFrom);
    }
 else     if (exchange.getFromEndpoint() != null) {
      from="from(" + exchange.getFromEndpoint().getEndpointUri() + ")";
    }
    RouteNode traceTo=tuow.getLastNode();
    if (traceTo != null) {
      to=getNodeMessage(traceTo);
    }
  }
  if (showNode) {
    result=id.trim() + " >>> " + from+ " --> "+ to.trim();
    if (interceptor.shouldTraceOutExchanges() && exchange.hasOut()) {
      result+=" (OUT) ";
    }
  }
 else {
    result=id;
  }
  if (breadCrumbLength > 0) {
    return String.format("%1$-" + breadCrumbLength + "."+ breadCrumbLength+ "s",result.trim());
  }
 else {
    return result.trim();
  }
}
