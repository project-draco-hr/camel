{
  LOG.debug("Consuming expected messages from: {}",expectedMessageEndpoint);
  final List<Object> expectedBodies=new ArrayList<Object>();
  EndpointHelper.pollEndpoint(expectedMessageEndpoint,new Processor(){
    public void process(    Exchange exchange) throws Exception {
      Object body=getInBody(exchange);
      if (body instanceof WrappedFile) {
        body=exchange.getIn().getBody(String.class);
      }
      if (split) {
        Iterator it=ObjectHelper.createIterator(body,delimiter,false,true);
        while (it.hasNext()) {
          Object line=it.next();
          LOG.trace("Received message body {}",line);
          expectedBodies.add(line);
        }
      }
 else {
        expectedBodies.add(body);
      }
    }
  }
,timeout);
  LOG.info("Received: {} expected message(s) from: {}",expectedBodies.size(),expectedMessageEndpoint);
  if (anyOrder) {
    expectedBodiesReceivedInAnyOrder(expectedBodies);
  }
 else {
    expectedBodiesReceived(expectedBodies);
  }
}
