{
  Mailbox.clearAll();
  MockEndpoint resultEndpoint=getMockEndpoint("mock:result");
  resultEndpoint.expectedMinimumMessageCount(1);
  MimeMessage message=new MimeMessage(mailSession);
  message.setText(body);
  message.setRecipients(Message.RecipientType.TO,new Address[]{new InternetAddress("james@localhost"),new InternetAddress("bar@localhost")});
  Transport.send(message);
  resultEndpoint.assertIsSatisfied(100000);
  Exchange exchange=resultEndpoint.getReceivedExchanges().get(0);
  org.apache.camel.Message in=exchange.getIn();
  assertNotNull("Should have headers",in.getHeaders());
  MailMessage msg=(MailMessage)exchange.getIn();
  Message inMessage=msg != null ? msg.getMessage() : null;
  assertNotNull("In message has no JavaMail message!",inMessage);
  String text=in.getBody(String.class);
  assertEquals("mail body",body,text);
  Object to=in.getHeader("TO");
  Iterator<String> it=CastUtils.cast(ObjectHelper.createIterator(to));
  int i=0;
  while (it.hasNext()) {
    if (i == 0) {
      assertEquals("james@localhost",it.next().trim());
    }
 else {
      assertEquals("bar@localhost",it.next().trim());
    }
    i++;
  }
  Enumeration<Header> iter=CastUtils.cast(inMessage.getAllHeaders());
  while (iter.hasMoreElements()) {
    Header header=iter.nextElement();
    String[] value=message.getHeader(header.getName());
    log.debug("Header: " + header.getName() + " has value: "+ ObjectHelper.asString(value));
  }
}
