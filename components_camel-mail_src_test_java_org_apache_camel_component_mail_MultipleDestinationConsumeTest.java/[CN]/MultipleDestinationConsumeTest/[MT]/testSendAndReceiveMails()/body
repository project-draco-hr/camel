{
  resultEndpoint=(MockEndpoint)resolveMandatoryEndpoint("mock:result");
  resultEndpoint.expectedMinimumMessageCount(1);
  MimeMessage message=new MimeMessage(mailSession);
  message.setText(body);
  message.setRecipients(Message.RecipientType.TO,new Address[]{new InternetAddress("james@localhost"),new InternetAddress("bar@localhost")});
  Transport.send(message);
  resultEndpoint.assertIsSatisfied();
  Exchange exchange=resultEndpoint.getReceivedExchanges().get(0);
  org.apache.camel.Message in=exchange.getIn();
  log.debug("Received: " + in.getBody());
  String text=in.getBody(String.class);
  log.debug("Has headers: " + in.getHeaders());
  MailExchange mailExchange=(MailExchange)exchange;
  Message inMessage=mailExchange.getIn().getMessage();
  Enumeration iter=inMessage.getAllHeaders();
  while (iter.hasMoreElements()) {
    Header header=(Header)iter.nextElement();
    String[] value=message.getHeader(header.getName());
    log.debug("Header: " + header.getName() + " has value: "+ ObjectHelper.asString(value));
  }
  assertEquals("body",body,text);
  Object value=in.getHeader("TO");
  assertEquals("TO Header","james@localhost, bar@localhost",value);
}
