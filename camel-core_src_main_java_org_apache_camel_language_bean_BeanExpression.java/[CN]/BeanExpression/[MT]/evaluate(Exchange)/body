{
  BeanHolder holder;
  if (bean == null) {
    holder=new RegistryBean(exchange.getContext(),beanName);
  }
 else {
    holder=new ConstantBeanHolder(bean,exchange.getContext());
  }
  if (OgnlHelper.isInvalidValidOgnlExpression(method)) {
    ExpressionIllegalSyntaxException cause=new ExpressionIllegalSyntaxException(method);
    throw new RuntimeBeanExpressionException(exchange,beanName,method,parameterType,cause);
  }
  if (OgnlHelper.isValidOgnlExpression(method)) {
    Object beanToCall=holder.getBean();
    OgnlInvokeProcessor ognl=new OgnlInvokeProcessor(beanToCall,method);
    try {
      ognl.process(exchange);
      return ognl.getResult();
    }
 catch (    Exception e) {
      throw new RuntimeBeanExpressionException(exchange,beanName,method,parameterType,e);
    }
  }
 else {
    InvokeProcessor invoke=new InvokeProcessor(holder,method,parameterType);
    try {
      invoke.process(exchange);
      return invoke.getResult();
    }
 catch (    Exception e) {
      throw new RuntimeBeanExpressionException(exchange,beanName,method,parameterType,e);
    }
  }
}
