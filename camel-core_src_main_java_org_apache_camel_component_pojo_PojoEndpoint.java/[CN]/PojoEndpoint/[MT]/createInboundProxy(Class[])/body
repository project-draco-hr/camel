{
  return Proxy.newProxyInstance(pojo.getClass().getClassLoader(),interfaces,new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if (!activated.get()) {
        throw new IllegalStateException("The endpoint is not active: " + getEndpointUri());
      }
      PojoInvocation invocation=new PojoInvocation(proxy,method,args);
      PojoExchange exchange=createExchange();
      exchange.setInvocation(invocation);
      getInboundProcessor().onExchange(exchange);
      Throwable fault=exchange.getException();
      if (fault != null) {
        throw new InvocationTargetException(fault);
      }
      return exchange.getOut().getBody();
    }
  }
);
}
