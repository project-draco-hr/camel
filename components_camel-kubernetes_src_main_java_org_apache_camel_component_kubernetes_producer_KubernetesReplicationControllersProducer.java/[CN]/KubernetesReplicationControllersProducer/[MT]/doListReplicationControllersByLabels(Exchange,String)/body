{
  ReplicationControllerList rcList=null;
  Map<String,String> labels=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_REPLICATION_CONTROLLERS_LABELS,Map.class);
  String namespaceName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,String.class);
  if (!ObjectHelper.isEmpty(namespaceName)) {
    ClientNonNamespaceOperation<KubernetesClient,ReplicationController,ReplicationControllerList,DoneableReplicationController,ClientRollableScallableResource<ReplicationController,DoneableReplicationController>> replicationControllers;
    replicationControllers=getEndpoint().getKubernetesClient().replicationControllers().inNamespace(namespaceName);
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      replicationControllers.withLabel(entry.getKey(),entry.getValue());
    }
    rcList=replicationControllers.list();
  }
 else {
    ClientOperation<KubernetesClient,ReplicationController,ReplicationControllerList,DoneableReplicationController,ClientRollableScallableResource<ReplicationController,DoneableReplicationController>> replicationControllers;
    replicationControllers=getEndpoint().getKubernetesClient().replicationControllers();
    for (    Map.Entry<String,String> entry : labels.entrySet()) {
      replicationControllers.withLabel(entry.getKey(),entry.getValue());
    }
    rcList=replicationControllers.list();
  }
  exchange.getOut().setBody(rcList.getItems());
}
