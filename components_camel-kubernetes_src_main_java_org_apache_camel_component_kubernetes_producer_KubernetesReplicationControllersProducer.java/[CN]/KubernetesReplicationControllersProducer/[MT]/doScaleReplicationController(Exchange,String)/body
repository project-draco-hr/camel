{
  String rcName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_REPLICATION_CONTROLLER_NAME,String.class);
  String namespaceName=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,String.class);
  Integer replicasNumber=exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_REPLICATION_CONTROLLER_REPLICAS,Integer.class);
  if (ObjectHelper.isEmpty(rcName)) {
    LOG.error("Scale a specific replication controller require specify a replication controller name");
    throw new IllegalArgumentException("Scale a specific replication controller require specify a replication controller name");
  }
  if (ObjectHelper.isEmpty(namespaceName)) {
    LOG.error("Scale a specific replication controller require specify a namespace name");
    throw new IllegalArgumentException("Scale a specific replication controller require specify a namespace name");
  }
  if (ObjectHelper.isEmpty(replicasNumber)) {
    LOG.error("Scale a specific replication controller require specify a replicas number");
    throw new IllegalArgumentException("Scale a specific replication controller require specify a replicas number");
  }
  ReplicationController rcScaled=getEndpoint().getKubernetesClient().replicationControllers().inNamespace(namespaceName).withName(rcName).scale(replicasNumber,true);
  exchange.getOut().setBody(rcScaled.getStatus().getReplicas());
}
