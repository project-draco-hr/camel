{
  HttpExchange exchange=(HttpExchange)endpoint.createExchange();
  HttpMethod method=createMethod();
  try {
    int responseCode=httpClient.executeMethod(method);
    LoadingByteArrayOutputStream bos=new LoadingByteArrayOutputStream();
    InputStream is=method.getResponseBodyAsStream();
    try {
      IOUtils.copy(is,bos);
      bos.flush();
    }
  finally {
      is.close();
    }
    Message message=exchange.getIn();
    message.setBody(bos.createInputStream());
    Header[] headers=method.getResponseHeaders();
    HeaderFilterStrategy strategy=endpoint.getHeaderFilterStrategy();
    for (    Header header : headers) {
      String name=header.getName();
      String value=header.getValue();
      if (strategy != null && !strategy.applyFilterToExternalHeaders(name,value)) {
        message.setHeader(name,value);
      }
    }
    message.setHeader(HttpConstants.HTTP_RESPONSE_CODE,responseCode);
    return exchange;
  }
 catch (  IOException e) {
    throw new RuntimeCamelException(e);
  }
 finally {
    method.releaseConnection();
  }
}
