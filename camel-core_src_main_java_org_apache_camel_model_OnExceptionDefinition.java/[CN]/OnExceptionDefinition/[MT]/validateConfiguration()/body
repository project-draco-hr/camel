{
  if (isInheritErrorHandler() != null && isInheritErrorHandler()) {
    throw new IllegalArgumentException(this + " cannot have the inheritErrorHandler option set to true");
  }
  List<Class<? extends Throwable>> exceptions=getExceptionClasses();
  if (exceptions == null || exceptions.isEmpty()) {
    throw new IllegalArgumentException("At least one exception must be configured on " + this);
  }
  if (getHandledPolicy() != null && getContinuedPolicy() != null) {
    throw new IllegalArgumentException("Only one of handled or continued is allowed to be configured on: " + this);
  }
  if (outputs == null || getOutputs().isEmpty()) {
    if (handledPolicy == null && continuedPolicy == null && retryWhilePolicy == null && redeliveryPolicy == null && useOriginalMessagePolicy == null && onRedelivery == null) {
      throw new IllegalArgumentException(this + " is not configured.");
    }
  }
}
