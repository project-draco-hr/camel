{
  final String query=config.getSObjectQuery();
  final SyncResponseCallback callback=new SyncResponseCallback();
  try {
    restClient.query("SELECT Id, Name, Query, ApiVersion, IsActive, " + "NotifyForFields, NotifyForOperations, Description " + "FROM PushTopic WHERE Name = '" + topicName + "'",callback);
    if (!callback.await(API_TIMEOUT,TimeUnit.SECONDS)) {
      throw new SalesforceException("API call timeout!",null);
    }
    if (callback.getException() != null) {
      throw callback.getException();
    }
    QueryRecordsPushTopic records=OBJECT_MAPPER.readValue(callback.getResponse(),QueryRecordsPushTopic.class);
    if (records.getTotalSize() == 1) {
      PushTopic topic=records.getRecords().get(0);
      LOG.info("Found existing topic {}: {}",topicName,topic);
      if (!query.equals(topic.getQuery()) || (config.getNotifyForFields() != null && !config.getNotifyForFields().equals(topic.getNotifyForFields())) || (config.getNotifyForOperations() != null && !config.getNotifyForOperations().equals(topic.getNotifyForOperations()))) {
        if (!config.isUpdateTopic()) {
          String msg="Query doesn't match existing Topic and updateTopic is set to false";
          throw new CamelException(msg);
        }
        updateTopic(topic.getId());
      }
    }
 else {
      createTopic();
    }
  }
 catch (  SalesforceException e) {
    throw new CamelException(String.format("Error retrieving Topic %s: %s",topicName,e.getMessage()),e);
  }
catch (  IOException e) {
    throw new CamelException(String.format("Un-marshaling error retrieving Topic %s: %s",topicName,e.getMessage()),e);
  }
catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    throw new CamelException(String.format("Un-marshaling error retrieving Topic %s: %s",topicName,e.getMessage()),e);
  }
 finally {
    if (callback.getResponse() != null) {
      try {
        callback.getResponse().close();
      }
 catch (      IOException e) {
      }
    }
  }
}
