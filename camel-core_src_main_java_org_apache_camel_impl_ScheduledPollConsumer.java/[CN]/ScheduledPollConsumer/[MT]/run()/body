{
  if (isSuspended()) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Cannot start to poll: " + this.getEndpoint() + " as its suspended");
    }
    return;
  }
  int retryCounter=-1;
  boolean done=false;
  while (!done) {
    try {
      done=true;
      if (isPollAllowed()) {
        if (retryCounter == -1) {
          if (LOG.isTraceEnabled()) {
            LOG.trace("Starting to poll: " + this.getEndpoint());
          }
        }
 else {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Retrying attempt " + retryCounter + " to poll: "+ this.getEndpoint());
          }
        }
        boolean begin=pollStrategy.begin(this,getEndpoint());
        if (begin) {
          retryCounter++;
          poll();
          pollStrategy.commit(this,getEndpoint());
        }
 else {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Cannot begin polling as pollStrategy returned false: " + pollStrategy);
          }
        }
      }
      if (LOG.isTraceEnabled()) {
        LOG.trace("Finished polling: " + this.getEndpoint());
      }
    }
 catch (    Exception e) {
      try {
        boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);
        if (retry) {
          done=false;
        }
      }
 catch (      Throwable t) {
        log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);
        done=true;
      }
    }
catch (    Throwable t) {
      log.fatal("Consumer " + this + " could not poll endpoint: "+ getEndpoint().getEndpointUri()+ " caused by: "+ t.getMessage(),t);
      done=true;
    }
  }
}
