{
  LOG.trace("renderCamelContexts");
  if (cors) {
    response.setHeader("Access-Control-Allow-Origin",RestConfiguration.CORS_ACCESS_CONTROL_ALLOW_ORIGIN);
    response.setHeader("Access-Control-Allow-Methods",RestConfiguration.CORS_ACCESS_CONTROL_ALLOW_METHODS);
    response.setHeader("Access-Control-Allow-Headers",RestConfiguration.CORS_ACCESS_CONTROL_ALLOW_HEADERS);
    response.setHeader("Access-Control-Max-Age",RestConfiguration.CORS_ACCESS_CONTROL_MAX_AGE);
  }
  List<String> contexts=findCamelContexts();
  if (contextIdPattern != null) {
    Iterator<String> it=contexts.iterator();
    while (it.hasNext()) {
      String name=it.next();
      boolean match;
      if ("#name#".equals(contextIdPattern)) {
        match=name.equals(contextId);
      }
 else {
        match=EndpointHelper.matchPattern(name,contextIdPattern);
      }
      if (!match) {
        it.remove();
      }
    }
  }
  StringBuffer sb=new StringBuffer();
  if (json) {
    response.setHeader(Exchange.CONTENT_TYPE,"application/json");
    sb.append("[\n");
    for (int i=0; i < contexts.size(); i++) {
      String name=contexts.get(i);
      sb.append("{\"name\": \"").append(name).append("\"}");
      if (i < contexts.size() - 1) {
        sb.append(",\n");
      }
    }
    sb.append("\n]");
  }
 else {
    response.setHeader(Exchange.CONTENT_TYPE,"text/yaml");
    for (int i=0; i < contexts.size(); i++) {
      String name=contexts.get(i);
      sb.append("- \"").append(name).append("\"\n");
    }
  }
  int len=sb.length();
  response.setHeader(Exchange.CONTENT_LENGTH,"" + len);
  response.writeBytes(sb.toString().getBytes());
}
