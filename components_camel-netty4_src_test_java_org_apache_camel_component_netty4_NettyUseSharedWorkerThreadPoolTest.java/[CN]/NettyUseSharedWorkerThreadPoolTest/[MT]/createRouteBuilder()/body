{
  return new RouteBuilder(){
    @Override public void configure() throws Exception {
      sharedWorkerServerGroup=new NettyWorkerPoolBuilder().withWorkerCount(2).withName("NettyServer").build();
      jndi.bind("sharedServerPool",sharedWorkerServerGroup);
      sharedWorkerClientGroup=new NettyWorkerPoolBuilder().withWorkerCount(3).withName("NettyClient").build();
      jndi.bind("sharedClientPool",sharedWorkerClientGroup);
      port=getPort();
      port2=getNextPort();
      port3=getNextPort();
      from("netty:tcp://localhost:" + port + "?textline=true&sync=true&workerPool=#sharedServerPool&orderedThreadPoolExecutor=false").validate(body().isInstanceOf(String.class)).to("log:result").to("mock:result").transform(body().regexReplaceAll("Hello","Bye"));
      from("netty:tcp://localhost:" + port2 + "?textline=true&sync=true&workerPool=#sharedServerPool&orderedThreadPoolExecutor=false").validate(body().isInstanceOf(String.class)).to("log:result").to("mock:result").transform(body().regexReplaceAll("Hello","Hi"));
      from("netty:tcp://localhost:" + port3 + "?textline=true&sync=true&workerPool=#sharedServerPool&orderedThreadPoolExecutor=false").validate(body().isInstanceOf(String.class)).to("log:result").to("mock:result").transform(body().regexReplaceAll("Hello","Hej"));
    }
  }
;
}
