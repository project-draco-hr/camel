{
  final BindyAbstractFactory factory=getFactory();
  final byte[] crlf=ConverterUtils.getByteReturn(factory.getCarriageReturn());
  final TypeConverter converter=exchange.getContext().getTypeConverter();
  final Iterator<Object> it=ObjectHelper.createIterator(body);
  while (it.hasNext()) {
    Object model=it.next();
    Map<String,Object> row;
    if (model instanceof Map) {
      row=(Map<String,Object>)model;
    }
 else {
      row=Collections.singletonMap(model.getClass().getName(),model);
    }
    String result=factory.unbind(row);
    outputStream.write(converter.convertTo(byte[].class,exchange,result));
    outputStream.write(crlf);
  }
}
