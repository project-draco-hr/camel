{
  result.expectedMessageCount(1);
  final Date now=new Date();
  Exchange exchange=template.send("direct:start",ExchangePattern.InOnly,new Processor(){
    public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(S3Constants.STORAGE_CLASS,"STANDARD");
      exchange.getIn().setHeader(S3Constants.KEY,"CamelUnitTest");
      exchange.getIn().setHeader(S3Constants.CONTENT_LENGTH,2L);
      exchange.getIn().setHeader(S3Constants.CONTENT_TYPE,"text/html");
      exchange.getIn().setHeader(S3Constants.CACHE_CONTROL,"no-cache");
      exchange.getIn().setHeader(S3Constants.CONTENT_DISPOSITION,"attachment;");
      exchange.getIn().setHeader(S3Constants.CONTENT_ENCODING,"gzip");
      exchange.getIn().setHeader(S3Constants.CONTENT_MD5,"TWF");
      exchange.getIn().setHeader(S3Constants.LAST_MODIFIED,now);
      exchange.getIn().setBody("This is my bucket content.");
    }
  }
);
  assertMockEndpointsSatisfied();
  assertResultExchange(result.getExchanges().get(0));
  PutObjectRequest putObjectRequest=client.putObjectRequests.get(0);
  assertEquals("STANDARD",putObjectRequest.getStorageClass());
  assertEquals("mycamelbucket",putObjectRequest.getBucketName());
  assertEquals(2L,putObjectRequest.getMetadata().getContentLength());
  assertEquals("text/html",putObjectRequest.getMetadata().getContentType());
  assertEquals("no-cache",putObjectRequest.getMetadata().getCacheControl());
  assertEquals("attachment;",putObjectRequest.getMetadata().getContentDisposition());
  assertEquals("gzip",putObjectRequest.getMetadata().getContentEncoding());
  assertEquals("TWF",putObjectRequest.getMetadata().getContentMD5());
  assertEquals(now,putObjectRequest.getMetadata().getLastModified());
  assertResponseMessage(exchange.getIn());
}
