{
  PGPPublicKeyRingCollection pgpSec=new PGPPublicKeyRingCollection(PGPUtil.getDecoderStream(input));
  Iterator<PGPPublicKeyRing> keyRingIter=pgpSec.getKeyRings();
  while (keyRingIter.hasNext()) {
    PGPPublicKeyRing keyRing=keyRingIter.next();
    Iterator<PGPPublicKey> keyIter=keyRing.getPublicKeys();
    while (keyIter.hasNext()) {
      PGPPublicKey key=keyIter.next();
      for (Iterator<String> iterator=key.getUserIDs(); iterator.hasNext(); ) {
        String keyUserId=iterator.next();
        if (keyUserId != null && keyUserId.contains(userid)) {
          if (forEncryption && key.isEncryptionKey()) {
            return key;
          }
 else           if (!forEncryption && isSignatureKey(key)) {
            return key;
          }
        }
      }
    }
  }
  return null;
}
