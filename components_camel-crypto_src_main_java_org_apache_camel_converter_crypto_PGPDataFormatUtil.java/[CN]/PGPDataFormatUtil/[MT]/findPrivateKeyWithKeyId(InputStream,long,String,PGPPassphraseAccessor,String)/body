{
  PGPSecretKeyRingCollection pgpSec=new PGPSecretKeyRingCollection(PGPUtil.getDecoderStream(keyringInput));
  for (Iterator<?> i=pgpSec.getKeyRings(); i.hasNext(); ) {
    Object data=i.next();
    if (data instanceof PGPSecretKeyRing) {
      PGPSecretKeyRing keyring=(PGPSecretKeyRing)data;
      for (Iterator<PGPSecretKey> secKeys=keyring.getSecretKeys(); secKeys.hasNext(); ) {
        PGPSecretKey secKey=secKeys.next();
        if (secKey != null && keyid == secKey.getKeyID()) {
          if (passphrase == null && passphraseAccessor != null) {
            Iterator<String> userIDs=secKey.getUserIDs();
            while (passphrase == null && userIDs.hasNext()) {
              passphrase=passphraseAccessor.getPassphrase(userIDs.next());
            }
          }
          if (passphrase != null) {
            PGPPrivateKey privateKey=secKey.extractPrivateKey(new JcePBESecretKeyDecryptorBuilder().setProvider(provider).build(passphrase.toCharArray()));
            if (privateKey != null) {
              return privateKey;
            }
          }
        }
      }
    }
  }
  return null;
}
