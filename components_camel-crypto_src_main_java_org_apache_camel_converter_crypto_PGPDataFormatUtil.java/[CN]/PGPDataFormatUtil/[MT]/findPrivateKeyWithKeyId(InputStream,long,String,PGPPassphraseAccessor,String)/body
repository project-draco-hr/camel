{
  PGPSecretKeyRingCollection pgpSec=new PGPSecretKeyRingCollection(PGPUtil.getDecoderStream(keyringInput));
  for (Iterator<?> i=pgpSec.getKeyRings(); i.hasNext(); ) {
    Object data=i.next();
    if (data instanceof PGPSecretKeyRing) {
      PGPSecretKeyRing keyring=(PGPSecretKeyRing)data;
      PGPSecretKey secKey=keyring.getSecretKey();
      if (secKey != null && keyid == secKey.getKeyID()) {
        if (passphrase == null && passphraseAccessor != null) {
          @SuppressWarnings("unchecked") Iterator<String> userIDs=secKey.getUserIDs();
          while (passphrase == null && userIDs.hasNext()) {
            passphrase=passphraseAccessor.getPassphrase(userIDs.next());
          }
        }
        PGPPrivateKey privateKey=secKey.extractPrivateKey(new JcePBESecretKeyDecryptorBuilder().setProvider(provider).build(passphrase.toCharArray()));
        if (privateKey != null) {
          return privateKey;
        }
      }
    }
  }
  return null;
}
