{
  PGPSecretKeyRingCollection pgpSec=new PGPSecretKeyRingCollection(PGPUtil.getDecoderStream(input));
  @SuppressWarnings("unchecked") Iterator<PGPSecretKeyRing> keyRingIter=(Iterator<PGPSecretKeyRing>)pgpSec.getKeyRings();
  while (keyRingIter.hasNext()) {
    PGPSecretKeyRing keyRing=keyRingIter.next();
    @SuppressWarnings("unchecked") Iterator<PGPSecretKey> keyIter=(Iterator<PGPSecretKey>)keyRing.getSecretKeys();
    while (keyIter.hasNext()) {
      PGPSecretKey key=(PGPSecretKey)keyIter.next();
      for (@SuppressWarnings("unchecked") Iterator<String> iterator=(Iterator<String>)key.getUserIDs(); iterator.hasNext(); ) {
        String userId=iterator.next();
        if (key.isSigningKey() && userId.contains(userid)) {
          return key.extractPrivateKey(passphrase.toCharArray(),"BC");
        }
      }
    }
  }
  return null;
}
