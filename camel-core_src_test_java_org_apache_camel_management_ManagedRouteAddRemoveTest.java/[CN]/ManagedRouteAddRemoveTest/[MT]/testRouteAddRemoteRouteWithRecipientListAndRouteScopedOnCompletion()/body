{
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  result.assertIsSatisfied();
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=camel-1,type=services,*");
  Set<ObjectName> names=mbeanServer.queryNames(on,null);
  assertEquals(services,names.size());
  log.info("Adding 2nd route");
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:bar").routeId("bar").onCompletion().recipientList(header("done")).end().end().recipientList(header("bar"));
    }
  }
);
  getMockEndpoint("mock:bar").expectedMessageCount(1);
  getMockEndpoint("mock:done").expectedMessageCount(1);
  Map<String,Object> headers=new HashMap<String,Object>();
  headers.put("done","mock:done");
  headers.put("bar","mock:bar");
  template.sendBodyAndHeaders("direct:bar","Hello World",headers);
  assertMockEndpointsSatisfied();
  names=mbeanServer.queryNames(on,null);
  assertEquals(services,names.size());
  log.info("Stopping 2nd route");
  context.stopRoute("bar");
  log.info("Removing 2nd route");
  boolean removed=context.removeRoute("bar");
  assertTrue(removed);
  names=mbeanServer.queryNames(on,null);
  assertEquals(services,names.size());
  log.info("Shutting down...");
}
