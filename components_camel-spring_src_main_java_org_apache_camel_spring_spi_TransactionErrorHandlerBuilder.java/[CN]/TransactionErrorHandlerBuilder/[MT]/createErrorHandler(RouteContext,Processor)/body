{
  if (transactionTemplate == null) {
    LOG.debug("No TransactionTemplate configured on TransactionErrorHandlerBuilder. Will try find it in the registry.");
    if (transactionTemplate == null) {
      Map<String,TransactedPolicy> map=routeContext.lookupByType(TransactedPolicy.class);
      if (map != null && map.size() == 1) {
        TransactedPolicy policy=map.values().iterator().next();
        if (policy != null && policy instanceof SpringTransactionPolicy) {
          transactionTemplate=((SpringTransactionPolicy)policy).getTransactionTemplate();
        }
      }
    }
    if (transactionTemplate == null) {
      TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);
      if (policy != null && policy instanceof SpringTransactionPolicy) {
        transactionTemplate=((SpringTransactionPolicy)policy).getTransactionTemplate();
      }
    }
    if (transactionTemplate == null) {
      Map<String,TransactionTemplate> map=routeContext.lookupByType(TransactionTemplate.class);
      if (map != null && map.size() == 1) {
        transactionTemplate=map.values().iterator().next();
      }
 else       if (LOG.isDebugEnabled()) {
        if (map == null || map.isEmpty()) {
          LOG.trace("No TransactionTemplate found in registry.");
        }
 else {
          LOG.debug("Found " + map.size() + " TransactionTemplate in registry. "+ "Cannot determine which one to use. Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder");
        }
      }
    }
    if (transactionTemplate == null) {
      Map<String,PlatformTransactionManager> map=routeContext.lookupByType(PlatformTransactionManager.class);
      if (map != null && map.size() == 1) {
        transactionTemplate=new TransactionTemplate(map.values().iterator().next());
      }
 else       if (LOG.isDebugEnabled()) {
        if (map == null || map.isEmpty()) {
          LOG.trace("No PlatformTransactionManager found in registry.");
        }
 else {
          LOG.debug("Found " + map.size() + " PlatformTransactionManager in registry. "+ "Cannot determine which one to use for TransactionTemplate. Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder");
        }
      }
    }
    if (transactionTemplate != null) {
      LOG.debug("Found TransactionTemplate in registry to use: " + transactionTemplate);
    }
  }
  ObjectHelper.notNull(transactionTemplate,"transactionTemplate",this);
  TransactionErrorHandler answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getHandledPolicy(),getExceptionPolicyStrategy(),transactionTemplate,getRetryWhilePolicy(routeContext.getCamelContext()));
  configure(answer);
  return answer;
}
