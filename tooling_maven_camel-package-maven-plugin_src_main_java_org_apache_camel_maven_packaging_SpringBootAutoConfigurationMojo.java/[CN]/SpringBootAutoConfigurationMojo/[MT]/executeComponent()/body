{
  List<String> componentNames=findComponentNames();
  final Set<File> jsonFiles=new TreeSet<File>();
  PackageHelper.findJsonFiles(buildDir,jsonFiles,new PackageHelper.CamelComponentsModelFilter());
  if (!componentNames.isEmpty()) {
    getLog().debug("Found " + componentNames.size() + " components");
    for (    String componentName : componentNames) {
      String json=loadComponentJson(jsonFiles,componentName);
      if (json != null) {
        ComponentModel model=generateComponentModel(componentName,json);
        if (!model.getComponentOptions().isEmpty()) {
          int pos=model.getJavaType().lastIndexOf(".");
          String pkg=model.getJavaType().substring(0,pos) + ".springboot";
          createComponentConfigurationSource(pkg,model);
          createComponentAutoConfigurationSource(pkg,model);
          createComponentSpringFactorySource(pkg,model);
        }
      }
    }
  }
}
