{
  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("language",json,false);
  LanguageModel dataFormat=new LanguageModel();
  dataFormat.setTitle(getSafeValue("title",rows));
  dataFormat.setName(getSafeValue("name",rows));
  dataFormat.setModelName(getSafeValue("modelName",rows));
  dataFormat.setDescription(getSafeValue("description",rows));
  dataFormat.setLabel(getSafeValue("label",rows));
  dataFormat.setDeprecated(getSafeValue("deprecated",rows));
  dataFormat.setJavaType(getSafeValue("javaType",rows));
  dataFormat.setGroupId(getSafeValue("groupId",rows));
  dataFormat.setArtifactId(getSafeValue("artifactId",rows));
  dataFormat.setVersion(getSafeValue("version",rows));
  rows=JSonSchemaHelper.parseJsonSchema("properties",json,true);
  for (  Map<String,String> row : rows) {
    LanguageOptionModel option=new LanguageOptionModel();
    option.setName(getSafeValue("name",row));
    option.setKind(getSafeValue("kind",row));
    option.setType(getSafeValue("type",row));
    option.setJavaType(getSafeValue("javaType",row));
    option.setDeprecated(getSafeValue("deprecated",row));
    option.setDescription(getSafeValue("description",row));
    option.setDefaultValue(getSafeValue("defaultValue",row));
    option.setEnumValues(getSafeValue("enum",row));
    dataFormat.addLanguageOption(option);
  }
  return dataFormat;
}
