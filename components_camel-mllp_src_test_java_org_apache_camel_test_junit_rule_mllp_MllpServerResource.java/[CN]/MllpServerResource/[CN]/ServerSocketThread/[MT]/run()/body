{
  log.info("Accepting connections on port {}",serverSocket.getLocalPort());
  this.setName("MllpServerResource$ServerSocketThread - " + serverSocket.getLocalSocketAddress().toString());
  while (!isInterrupted() && serverSocket.isBound() && !serverSocket.isClosed()) {
    Socket clientSocket=null;
    try {
      clientSocket=serverSocket.accept();
    }
 catch (    SocketTimeoutException timeoutEx) {
      if (raiseExceptionOnAcceptTimeout) {
        throw new MllpJUnitResourceTimeoutException("Timeout Accepting client connection",timeoutEx);
      }
      log.warn("Timeout waiting for client connection");
    }
catch (    SocketException socketEx) {
      log.debug("SocketException encountered accepting client connection - ignoring",socketEx);
      if (null == clientSocket) {
        continue;
      }
 else       if (!clientSocket.isClosed()) {
        resetConnection(clientSocket);
        continue;
      }
 else {
        throw new MllpJUnitResourceException("Unexpected SocketException encountered accepting client connection",socketEx);
      }
    }
catch (    Exception ex) {
      throw new MllpJUnitResourceException("Unexpected exception encountered accepting client connection",ex);
    }
    if (null != clientSocket) {
      try {
        clientSocket.setKeepAlive(true);
        clientSocket.setTcpNoDelay(false);
        clientSocket.setSoLinger(false,-1);
        clientSocket.setSoTimeout(5000);
        ClientSocketThread clientSocketThread=new ClientSocketThread(clientSocket);
        clientSocketThread.setDaemon(true);
        clientSocketThread.start();
        clientSocketThreads.add(clientSocketThread);
      }
 catch (      Exception unexpectedEx) {
        log.warn("Unexpected exception encountered configuring client socket");
        try {
          clientSocket.close();
        }
 catch (        IOException ingoreEx) {
          log.warn("Exceptiong encountered closing client socket after attempting to accept connection",ingoreEx);
        }
        throw new MllpJUnitResourceException("Unexpected exception encountered configuring client socket",unexpectedEx);
      }
    }
  }
  log.info("No longer accepting connections - closing TCP Listener on port {}",serverSocket.getLocalPort());
  try {
    serverSocket.close();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  log.info("Closed TCP Listener on port {}",serverSocket.getLocalPort());
}
