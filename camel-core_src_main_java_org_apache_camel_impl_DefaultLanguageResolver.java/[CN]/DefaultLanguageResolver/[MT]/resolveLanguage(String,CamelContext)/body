{
  Language languageReg=ResolverHelper.lookupLanguageInRegistryWithFallback(context,name);
  if (languageReg != null) {
    return languageReg;
  }
  Class<?> type=null;
  try {
    type=findLanguage(name,context);
  }
 catch (  NoFactoryAvailableException e) {
  }
catch (  Exception e) {
    throw new IllegalArgumentException("Invalid URI, no Language registered for scheme: " + name,e);
  }
  if (type != null) {
    if (Language.class.isAssignableFrom(type)) {
      return (Language)context.getInjector().newInstance(type);
    }
 else {
      throw new IllegalArgumentException("Resolving language: " + name + " detected type conflict: Not a Language implementation. Found: "+ type.getName());
    }
  }
 else {
    return noSpecificLanguageFound(name,context);
  }
}
