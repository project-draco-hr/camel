{
  HttpServerChannelHandler answer=null;
  String method=request.method().name();
  if (method == null) {
    return null;
  }
  String path=request.uri();
  int idx=path.indexOf(token);
  if (idx > -1) {
    path=path.substring(idx + len);
  }
  path=pathAsKey(path);
  List<RestConsumerContextPathMatcher.ConsumerPath> paths=new ArrayList<RestConsumerContextPathMatcher.ConsumerPath>();
  for (  final HttpServerChannelHandler handler : consumers) {
    paths.add(new RestConsumerContextPathMatcher.ConsumerPath<HttpServerChannelHandler>(){
      @Override public String getRestrictMethod(){
        return handler.getConsumer().getEndpoint().getHttpMethodRestrict();
      }
      @Override public String getConsumerPath(){
        return handler.getConsumer().getConfiguration().getPath();
      }
      @Override public HttpServerChannelHandler getConsumer(){
        return handler;
      }
    }
);
  }
  RestConsumerContextPathMatcher.ConsumerPath<HttpServerChannelHandler> best=RestConsumerContextPathMatcher.matchBestPath(method,path,paths);
  if (best != null) {
    answer=best.getConsumer();
  }
  if (answer == null) {
    for (    final HttpServerChannelHandler handler : consumers) {
      NettyHttpConsumer consumer=handler.getConsumer();
      String consumerPath=consumer.getConfiguration().getPath();
      boolean matchOnUriPrefix=consumer.getEndpoint().getConfiguration().isMatchOnUriPrefix();
      if (RestConsumerContextPathMatcher.matchPath(path,consumerPath,matchOnUriPrefix)) {
        answer=handler;
        break;
      }
    }
  }
  return answer;
}
