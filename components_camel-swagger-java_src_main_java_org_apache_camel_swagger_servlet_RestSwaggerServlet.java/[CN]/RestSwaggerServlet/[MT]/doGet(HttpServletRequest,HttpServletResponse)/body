{
  if (!initDone) {
    initBaseAndApiPaths(request);
  }
  String contextId=null;
  String route=request.getPathInfo();
  String accept=request.getHeader(Exchange.ACCEPT_CONTENT_TYPE);
  boolean json=false;
  boolean yaml=false;
  if (route != null && route.endsWith("/swagger.json")) {
    json=true;
    route=route.substring(0,route.length() - 13);
  }
 else   if (route != null && route.endsWith("/swagger.yaml")) {
    yaml=true;
    route=route.substring(0,route.length() - 13);
  }
  if (accept != null && !json && !yaml) {
    json=accept.contains("json");
    yaml=accept.contains("yaml");
  }
  if (!json && !yaml) {
    json=true;
  }
  RestApiResponseAdapter adapter=new ServletRestApiResponseAdapter(response);
  try {
    if (apiContextIdListing && (ObjectHelper.isEmpty(route) || route.equals("/"))) {
      support.renderCamelContexts(adapter,contextId,apiContextIdPattern,json,yaml);
    }
 else {
      String name=null;
      if (ObjectHelper.isNotEmpty(route)) {
        if (route.startsWith("/")) {
          route=route.substring(1);
        }
        name=route.split("/")[0];
        if (ObjectHelper.isNotEmpty(name)) {
          route=route.substring(name.length());
        }
      }
 else {
        List<String> contexts=support.findCamelContexts();
        if (contexts.size() == 1) {
          name=contexts.get(0);
        }
      }
      boolean match=false;
      if (name != null) {
        match=true;
        if (apiContextIdPattern != null) {
          if ("#name#".equals(apiContextIdPattern)) {
            match=true;
          }
 else {
            match=EndpointHelper.matchPattern(name,apiContextIdPattern);
          }
          if (LOG.isDebugEnabled()) {
            LOG.debug("Match contextId: {} with pattern: {} -> {}",new Object[]{name,apiContextIdPattern,match});
          }
        }
      }
      if (!match) {
        adapter.noContent();
      }
 else {
        support.renderResourceListing(adapter,swaggerConfig,name,route,json,yaml,classResolver);
      }
    }
  }
 catch (  Exception e) {
    LOG.warn("Error rendering Swagger API due " + e.getMessage(),e);
  }
}
