{
  if (obj instanceof byte[]) {
    return (byte[])obj;
  }
 else   if (obj instanceof Byte) {
    return Bytes.toBytes((Byte)obj);
  }
 else   if (obj instanceof Short) {
    return Bytes.toBytes((Short)obj);
  }
 else   if (obj instanceof Integer) {
    return Bytes.toBytes((Integer)obj);
  }
 else   if (obj instanceof Long) {
    return Bytes.toBytes((Long)obj);
  }
 else   if (obj instanceof Double) {
    return Bytes.toBytes((Double)obj);
  }
 else   if (obj instanceof String) {
    return Bytes.toBytes((String)obj);
  }
 else {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    ObjectOutputStream oos=null;
    try {
      oos=new ObjectOutputStream(baos);
      oos.writeObject(obj);
      return baos.toByteArray();
    }
 catch (    IOException e) {
      LOG.warn("Error while serializing object. Null will be used.",e);
      return null;
    }
 finally {
      IOHelper.close(oos);
      IOHelper.close(baos);
    }
  }
}
