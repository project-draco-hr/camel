{
  List<String> methods=OgnlHelper.splitOgnl("foo()");
  assertEquals(1,methods.size());
  assertEquals("foo()",methods.get(0));
  methods=OgnlHelper.splitOgnl("foo(${body})");
  assertEquals(1,methods.size());
  assertEquals("foo(${body})",methods.get(0));
  methods=OgnlHelper.splitOgnl("foo(${body}, ${header.foo})");
  assertEquals(1,methods.size());
  assertEquals("foo(${body}, ${header.foo})",methods.get(0));
  methods=OgnlHelper.splitOgnl("foo(${body}, ${header.foo}).bar");
  assertEquals(2,methods.size());
  assertEquals("foo(${body}, ${header.foo})",methods.get(0));
  assertEquals(".bar",methods.get(1));
  methods=OgnlHelper.splitOgnl("foo(${body}, ${header.foo}).bar(true, ${header.bar})");
  assertEquals(2,methods.size());
  assertEquals("foo(${body}, ${header.foo})",methods.get(0));
  assertEquals(".bar(true, ${header.bar})",methods.get(1));
  methods=OgnlHelper.splitOgnl("foo(${body}, ${header.foo}).bar(true, ${header.bar}).baz['key']");
  assertEquals(3,methods.size());
  assertEquals("foo(${body}, ${header.foo})",methods.get(0));
  assertEquals(".bar(true, ${header.bar})",methods.get(1));
  assertEquals(".baz['key']",methods.get(2));
}
