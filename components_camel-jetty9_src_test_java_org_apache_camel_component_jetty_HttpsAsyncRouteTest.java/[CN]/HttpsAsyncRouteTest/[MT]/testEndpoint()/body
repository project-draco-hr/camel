{
  if (isPlatform("windows")) {
    return;
  }
  MockEndpoint mockEndpointA=resolveMandatoryEndpoint("mock:a",MockEndpoint.class);
  mockEndpointA.expectedBodiesReceived(expectedBody);
  MockEndpoint mockEndpointB=resolveMandatoryEndpoint("mock:b",MockEndpoint.class);
  mockEndpointB.expectedBodiesReceived(expectedBody);
  invokeHttpEndpoint();
  mockEndpointA.assertIsSatisfied();
  mockEndpointB.assertIsSatisfied();
  List<Exchange> list=mockEndpointA.getReceivedExchanges();
  Exchange exchange=list.get(0);
  assertNotNull("exchange",exchange);
  Message in=exchange.getIn();
  assertNotNull("in",in);
  Map<String,Object> headers=in.getHeaders();
  log.info("Headers: " + headers);
  assertTrue("Should be more than one header but was: " + headers,headers.size() > 0);
}
