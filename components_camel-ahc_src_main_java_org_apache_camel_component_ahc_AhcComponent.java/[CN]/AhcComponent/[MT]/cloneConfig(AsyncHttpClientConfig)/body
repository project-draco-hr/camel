{
  AsyncHttpClientConfig.Builder builder=new AsyncHttpClientConfig.Builder();
  builder.setAllowPoolingConnection(clientConfig.getAllowPoolingConnection());
  builder.setAsyncHttpClientProviderConfig(clientConfig.getAsyncHttpProviderConfig());
  builder.setConnectionsPool(clientConfig.getConnectionsPool());
  builder.setConnectionTimeoutInMs(clientConfig.getConnectionTimeoutInMs());
  builder.setIdleConnectionInPoolTimeoutInMs(clientConfig.getIdleConnectionInPoolTimeoutInMs());
  builder.setMaximumConnectionsPerHost(clientConfig.getMaxConnectionPerHost());
  builder.setMaximumNumberOfRedirects(clientConfig.getMaxRedirects());
  builder.setMaximumConnectionsTotal(clientConfig.getMaxTotalConnections());
  builder.setProxyServer(clientConfig.getProxyServer());
  builder.setRealm(clientConfig.getRealm());
  builder.setRequestTimeoutInMs(clientConfig.getRequestTimeoutInMs());
  builder.setSSLContext(clientConfig.getSSLContext());
  builder.setSSLEngineFactory(clientConfig.getSSLEngineFactory());
  builder.setUserAgent(clientConfig.getUserAgent());
  builder.setFollowRedirects(clientConfig.isRedirectEnabled());
  builder.setCompressionEnabled(clientConfig.isCompressionEnabled());
  builder.setScheduledExecutorService(clientConfig.reaper());
  builder.setExecutorService(clientConfig.executorService());
  for (  RequestFilter filter : clientConfig.getRequestFilters()) {
    builder.addRequestFilter(filter);
  }
  for (  ResponseFilter filter : clientConfig.getResponseFilters()) {
    builder.addResponseFilter(filter);
  }
  for (  IOExceptionFilter filter : clientConfig.getIOExceptionFilters()) {
    builder.addIOExceptionFilter(filter);
  }
  builder.setRequestCompressionLevel(clientConfig.getRequestCompressionLevel());
  builder.setUseRawUrl(clientConfig.isUseRawUrl());
  builder.setMaxRequestRetry(clientConfig.getMaxRequestRetry());
  builder.setAllowSslConnectionPool(clientConfig.getAllowPoolingConnection());
  return builder;
}
