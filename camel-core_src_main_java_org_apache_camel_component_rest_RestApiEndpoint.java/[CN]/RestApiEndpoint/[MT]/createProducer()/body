{
  RestApiProcessorFactory factory=null;
  RestConfiguration config=getCamelContext().getRestConfiguration(componentName,true);
  Set<RestApiProcessorFactory> factories=getCamelContext().getRegistry().findByType(RestApiProcessorFactory.class);
  if (factories != null && factories.size() == 1) {
    factory=factories.iterator().next();
  }
  if (factory == null) {
    String name=apiComponentName != null ? apiComponentName : config.getApiComponent();
    if (name == null) {
      name=DEFAULT_API_COMPONENT_NAME;
    }
    Object instance=getCamelContext().getFactoryFinder(RESOURCE_PATH).newInstance(name);
    if (instance instanceof RestApiProcessorFactory) {
      factory=(RestApiProcessorFactory)instance;
    }
  }
  if (factory != null) {
    String host="";
    int port=80;
    if (config.getHost() != null) {
      host=config.getHost();
    }
    int num=config.getPort();
    if (num > 0) {
      port=num;
    }
    if (ObjectHelper.isEmpty(host)) {
      if (config.getRestHostNameResolver() == RestConfiguration.RestHostNameResolver.localHostName) {
        host=HostUtils.getLocalHostName();
      }
 else       if (config.getRestHostNameResolver() == RestConfiguration.RestHostNameResolver.localIp) {
        host=HostUtils.getLocalIp();
      }
      String targetHost=host + (port != 80 ? ":" + port : "");
      getParameters().put("host",targetHost);
    }
    String path=getPath();
    if (path != null && !path.startsWith("/")) {
      path="/" + path;
    }
    boolean contextIdListing=config.isApiContextListing();
    Processor processor=factory.createApiProcessor(getCamelContext(),path,getContextIdPattern(),contextIdListing,config,getParameters());
    return new RestApiProducer(this,processor);
  }
 else {
    throw new IllegalStateException("Cannot find RestApiProcessorFactory in Registry or classpath");
  }
}
