{
  RestApiProcessorFactory factory=null;
  RestConfiguration config=getCamelContext().getRestConfiguration(componentName,true);
  Set<RestApiProcessorFactory> factories=getCamelContext().getRegistry().findByType(RestApiProcessorFactory.class);
  if (factories != null && factories.size() == 1) {
    factory=factories.iterator().next();
  }
  String name=apiComponentName != null ? apiComponentName : config.getApiComponent();
  if (name == null) {
    name=DEFAULT_API_COMPONENT_NAME;
  }
  Object instance=getCamelContext().getFactoryFinder(RESOURCE_PATH).newInstance(name);
  if (instance instanceof RestApiProcessorFactory) {
    factory=(RestApiProcessorFactory)instance;
  }
  if (factory != null) {
    String path=getPath();
    if (path != null && !path.startsWith("/")) {
      path="/" + path;
    }
    Processor processor=factory.createApiProcessor(getCamelContext(),path,config,getParameters());
    return new RestApiProducer(this,processor);
  }
 else {
    throw new IllegalStateException("Cannot find RestApiProcessorFactory in Registry or classpath");
  }
}
