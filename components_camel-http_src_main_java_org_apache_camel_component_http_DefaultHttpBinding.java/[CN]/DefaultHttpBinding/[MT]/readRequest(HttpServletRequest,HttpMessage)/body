{
  message.getBody();
  Map<String,Object> headers=message.getHeaders();
  Enumeration names=request.getHeaderNames();
  while (names.hasMoreElements()) {
    String name=(String)names.nextElement();
    Object value=request.getHeader(name);
    if (name.toLowerCase().equals("content-type")) {
      name=Exchange.CONTENT_TYPE;
    }
    if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToExternalHeaders(name,value,message.getExchange())) {
      headers.put(name,value);
    }
  }
  if (request.getCharacterEncoding() != null) {
    headers.put(Exchange.HTTP_CHARACTER_ENCODING,request.getCharacterEncoding());
    message.getExchange().setProperty(Exchange.CHARSET_NAME,request.getCharacterEncoding());
  }
  try {
    populateRequestParameters(request,message);
  }
 catch (  UnsupportedEncodingException e) {
    throw new RuntimeCamelException("Cannot read request parameters due " + e.getMessage(),e);
  }
  Object body=message.getBody();
  if (body instanceof StreamCache) {
    ((StreamCache)body).reset();
  }
  headers.put(Exchange.HTTP_METHOD,request.getMethod());
  headers.put(Exchange.HTTP_QUERY,request.getQueryString());
  headers.put(Exchange.HTTP_URL,request.getRequestURL());
  headers.put(Exchange.HTTP_URI,request.getRequestURI());
  headers.put(Exchange.HTTP_PATH,request.getPathInfo());
  headers.put(Exchange.CONTENT_TYPE,request.getContentType());
  populateAttachments(request,message);
}
