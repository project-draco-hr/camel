{
  int messageInTopic=10;
  int messageInOtherTopic=5;
  CountDownLatch messagesLatch=new CountDownLatch(messageInTopic + messageInOtherTopic);
  List<String> msgs=new ArrayList<String>();
  for (int x=0; x < messageInTopic; x++) {
    msgs.add("Message " + x);
  }
  sendMessagesInRoute(1,stringsTemplate,msgs,KafkaConstants.PARTITION_KEY,"1");
  msgs=new ArrayList<String>();
  for (int x=0; x < messageInOtherTopic; x++) {
    msgs.add("Other Message " + x);
  }
  sendMessagesInRoute(1,stringsTemplate,msgs,KafkaConstants.PARTITION_KEY,"1",KafkaConstants.TOPIC,TOPIC_STRINGS_IN_HEADER);
  createKafkaMessageConsumer(stringsConsumerConn,TOPIC_STRINGS,TOPIC_STRINGS_IN_HEADER,messagesLatch);
  boolean allMessagesReceived=messagesLatch.await(200,TimeUnit.MILLISECONDS);
  assertTrue("Not all messages were published to the kafka topics. Not received: " + messagesLatch.getCount(),allMessagesReceived);
}
