{
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < size; i++) {
    sb.append("Line " + i + LS);
  }
  template.sendBodyAndHeader("file:target/concurrent",sb.toString(),Exchange.FILE_NAME,"input.txt");
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMessageCount(size);
  mock.expectsNoDuplicates(body());
  mock.setResultWaitTime(30000);
  Thread.sleep(100);
  context.startRoute("foo");
  assertMockEndpointsSatisfied();
  String txt=context.getTypeConverter().convertTo(String.class,new File("target/concurrent/outbox/result.txt"));
  assertNotNull(txt);
  String[] lines=txt.split(LS);
  assertEquals("Should be " + size + " lines",size,lines.length);
  Set<String> rows=new LinkedHashSet<String>(Arrays.asList(lines));
  assertEquals("Should be " + size + " unique lines",size,rows.size());
  log.info(txt);
}
