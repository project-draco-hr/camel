{
  setUp("jpa://" + Customer.class.getName() + "?usePersist="+ (usePersist() ? "true" : "false"));
  final Customer customer=createDefaultCustomer();
  save(customer);
  final CountDownLatch latch=new CountDownLatch(1);
  consumer=endpoint.createConsumer(new Processor(){
    public void process(    Exchange e){
      receivedExchange=e;
      assertNotNull(e.getIn().getHeader(JpaConstants.ENTITYMANAGER,EntityManager.class));
      latch.countDown();
    }
  }
);
  consumer.start();
  assertTrue(latch.await(50,TimeUnit.SECONDS));
  consumer.stop();
  Thread.sleep(1000);
  assertNotNull(receivedExchange);
  Customer receivedCustomer=receivedExchange.getIn().getBody(Customer.class);
  assertEquals(customer.getName(),receivedCustomer.getName());
  assertEquals(customer.getId(),receivedCustomer.getId());
  assertEquals(customer.getAddress().getAddressLine1(),receivedCustomer.getAddress().getAddressLine1());
  assertEquals(customer.getAddress().getAddressLine2(),receivedCustomer.getAddress().getAddressLine2());
  assertEquals(customer.getAddress().getId(),receivedCustomer.getAddress().getId());
  Thread.sleep(1000);
  assertEntitiesInDatabase(0,Customer.class.getName());
  assertEntitiesInDatabase(0,Address.class.getName());
}
