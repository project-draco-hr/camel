{
  ConfigAttributeDefinition attributes=accessPolicy.getConfigAttributeDefinition();
  try {
    Authentication authToken=getAuthentication(exchange);
    if (authToken == null) {
      CamelAuthorizationException authorizationException=new CamelAuthorizationException("Cannot find the Authentication instance.",exchange);
      throw authorizationException;
    }
    Authentication authenticated=authenticateIfRequired(authToken);
    try {
      this.accessDecisionManager.decide(authenticated,exchange,attributes);
    }
 catch (    AccessDeniedException accessDeniedException) {
      AuthorizationFailureEvent event=new AuthorizationFailureEvent(exchange,attributes,authenticated,accessDeniedException);
      publishEvent(event);
      throw accessDeniedException;
    }
    publishEvent(new AuthorizedEvent(exchange,attributes,authenticated));
  }
 catch (  SpringSecurityException exception) {
    CamelAuthorizationException authorizationException=new CamelAuthorizationException("Cannot access the processor which has been protected.",exchange,exception);
    throw authorizationException;
  }
}
