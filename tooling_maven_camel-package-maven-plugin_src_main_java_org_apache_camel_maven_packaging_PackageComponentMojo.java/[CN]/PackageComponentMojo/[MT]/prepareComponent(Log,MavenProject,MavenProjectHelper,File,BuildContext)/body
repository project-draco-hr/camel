{
  File camelMetaDir=new File(componentOutDir,"META-INF/services/org/apache/camel/");
  if (projectHelper != null) {
    projectHelper.addResource(project,componentOutDir.getPath(),Collections.singletonList("**/component.properties"),Collections.emptyList());
  }
  if (!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/component")) {
    return;
  }
  StringBuilder buffer=new StringBuilder();
  int count=0;
  for (  Resource r : project.getBuild().getResources()) {
    File f=new File(r.getDirectory());
    if (!f.exists()) {
      f=new File(project.getBasedir(),r.getDirectory());
    }
    f=new File(f,"META-INF/services/org/apache/camel/component");
    if (f.exists() && f.isDirectory()) {
      File[] files=f.listFiles();
      if (files != null) {
        for (        File file : files) {
          if (file.isDirectory()) {
            continue;
          }
          String name=file.getName();
          if (name.charAt(0) != '.') {
            count++;
            if (buffer.length() > 0) {
              buffer.append(" ");
            }
            buffer.append(name);
          }
        }
      }
    }
  }
  if (count > 0) {
    Properties properties=new Properties();
    String names=buffer.toString();
    properties.put("components",names);
    properties.put("groupId",project.getGroupId());
    properties.put("artifactId",project.getArtifactId());
    properties.put("version",project.getVersion());
    properties.put("projectName",project.getName());
    if (project.getDescription() != null) {
      properties.put("projectDescription",project.getDescription());
    }
    camelMetaDir.mkdirs();
    File outFile=new File(camelMetaDir,"component.properties");
    try {
      try (OutputStream os=buildContext.newFileOutputStream(outFile)){
        properties.store(os,"Generated by camel-package-maven-plugin");
      }
       log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "components: " : "component: ")+ names);
      if (projectHelper != null) {
        projectHelper.attachArtifact(project,"properties","camelComponent",outFile);
      }
    }
 catch (    IOException e) {
      throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);
    }
  }
 else {
    log.debug("No META-INF/services/org/apache/camel/component directory found. Are you sure you have created a Camel component?");
  }
}
