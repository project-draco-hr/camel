{
  ip=getCamelContext().resolvePropertyPlaceholders("{{service.host:" + name + "}}");
  String num=getCamelContext().resolvePropertyPlaceholders("{{service.port:" + name + "}}");
  port=getCamelContext().getTypeConverter().tryConvertTo(long.class,num);
  ObjectHelper.notEmpty(name,"name",this);
  ObjectHelper.notEmpty(namespace,"namespace",this);
  LOG.info("KubernetesServiceCall at namespace: {} with service name: {} using {}:{}",namespace,name,ip,port);
  processor=new SendDynamicProcessor(uri,serviceCallExpression);
  processor.setCamelContext(getCamelContext());
  if (exchangePattern != null) {
    processor.setPattern(exchangePattern);
  }
  ServiceHelper.startServices(processor);
}
