{
  LOG.debug("Discovering endpoints from namespace: {} with name: {}",namespace,name);
  Endpoints endpoints=client.endpoints().inNamespace(namespace).withName(name).get();
  List<KubernetesServer> result=new ArrayList<>();
  if (endpoints != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Found {} endpoints in namespace: {} for name: {} and portName: {}",endpoints.getSubsets().size(),namespace,name,portName);
    }
    for (    EndpointSubset subset : endpoints.getSubsets()) {
      if (subset.getPorts().size() == 1) {
        EndpointPort port=subset.getPorts().get(FIRST);
        for (        EndpointAddress address : subset.getAddresses()) {
          result.add(new KubernetesServer(address.getIp(),port.getPort()));
        }
      }
 else {
        for (        EndpointPort port : subset.getPorts()) {
          if (ObjectHelper.isEmpty(portName) || portName.endsWith(port.getName())) {
            for (            EndpointAddress address : subset.getAddresses()) {
              result.add(new KubernetesServer(address.getIp(),port.getPort()));
            }
          }
        }
      }
    }
  }
  return result;
}
