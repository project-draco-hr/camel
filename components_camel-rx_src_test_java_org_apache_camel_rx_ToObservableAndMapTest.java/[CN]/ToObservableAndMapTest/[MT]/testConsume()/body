{
  final MockEndpoint mockEndpoint=camelContext.getEndpoint("mock:results",MockEndpoint.class);
  mockEndpoint.expectedMessageCount(4);
  Observable<Message> observableMessage=reactiveCamel.toObservable("timer://foo?fixedRate=true&period=100");
  Observable<String> observable=observableMessage.map(new Func1<Message,String>(){
    @Override public String call(    Message message){
      return "Transformed value: headers " + message.getHeaders();
    }
  }
);
  observable.take(4).subscribe(new Action1<String>(){
    @Override public void call(    String body){
      LOG.info(body);
      producerTemplate.sendBody(mockEndpoint,body);
    }
  }
);
  mockEndpoint.assertIsSatisfied();
}
