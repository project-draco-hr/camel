{
  getMockEndpoint("mock:result").expectedMessageCount(0);
  getMockEndpoint("mock:aggregated").expectedMessageCount(3);
  getMockEndpoint("mock:dead").expectedMinimumMessageCount(2);
  template.sendBodyAndHeader("direct:start","A","id",123);
  template.sendBodyAndHeader("direct:start","B","id",123);
  template.sendBodyAndHeader("direct:start","C","id",123);
  template.sendBodyAndHeader("direct:start","D","id",123);
  template.sendBodyAndHeader("direct:start","E","id",123);
  assertMockEndpointsSatisfied(30,TimeUnit.SECONDS);
  Exchange first=getMockEndpoint("mock:dead").getReceivedExchanges().get(0);
  assertEquals(true,first.getIn().getHeader(Exchange.REDELIVERED));
  assertEquals(2,first.getIn().getHeader(Exchange.REDELIVERY_COUNTER));
  Exchange second=getMockEndpoint("mock:dead").getReceivedExchanges().get(1);
  assertEquals(true,second.getIn().getHeader(Exchange.REDELIVERED));
  assertEquals(2,first.getIn().getHeader(Exchange.REDELIVERY_COUNTER));
}
