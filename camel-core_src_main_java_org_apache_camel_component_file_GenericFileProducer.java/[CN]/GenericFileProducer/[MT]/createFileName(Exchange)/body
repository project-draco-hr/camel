{
  String answer;
  Object value;
  Object overrule=exchange.getIn().getHeader(Exchange.OVERRULE_FILE_NAME);
  if (overrule != null) {
    if (overrule instanceof Expression) {
      value=overrule;
    }
 else {
      value=exchange.getContext().getTypeConverter().convertTo(String.class,exchange,overrule);
    }
  }
 else {
    value=exchange.getIn().getHeader(Exchange.FILE_NAME);
  }
  if (overrule != null) {
    exchange.getIn().setHeader(Exchange.FILE_NAME,value);
  }
  if (value != null && value instanceof String && StringHelper.hasStartToken((String)value,"simple")) {
    log.warn("Simple expression: {} detected in header: {} of type String. This feature has been removed (see CAMEL-6748).",value,Exchange.FILE_NAME);
  }
  Expression expression=endpoint.getFileName();
  if (value != null && value instanceof Expression) {
    expression=(Expression)value;
  }
  String name;
  if (expression != null) {
    log.trace("Filename evaluated as expression: {}",expression);
    name=expression.evaluate(exchange,String.class);
  }
 else {
    name=exchange.getContext().getTypeConverter().convertTo(String.class,exchange,value);
  }
  if (name != null && endpoint.isFlatten()) {
    int pos=Math.max(name.lastIndexOf("/"),name.lastIndexOf("\\"));
    if (pos != -1) {
      name=name.substring(pos + 1);
    }
  }
  String endpointPath=endpoint.getConfiguration().getDirectory();
  String baseDir="";
  if (endpointPath.length() > 0) {
    baseDir=endpointPath;
    boolean trailingSlash=endpointPath.endsWith("/") || endpointPath.endsWith("\\");
    if (!trailingSlash) {
      baseDir+=getFileSeparator();
    }
  }
  if (name != null) {
    answer=baseDir + name;
  }
 else {
    answer=baseDir + endpoint.getGeneratedFileName(exchange.getIn());
  }
  if (endpoint.getConfiguration().needToNormalize()) {
    answer=normalizePath(answer);
  }
  return answer;
}
