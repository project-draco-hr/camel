{
  String answer;
  String overrule=exchange.getIn().getHeader(Exchange.OVERRULE_FILE_NAME,String.class);
  String consumed=exchange.getIn().getHeader(Exchange.FILE_NAME_CONSUMED,String.class);
  String name=overrule == null ? exchange.getIn().getHeader(Exchange.FILE_NAME,String.class) : overrule;
  if (overrule != null) {
    exchange.getIn().setHeader(Exchange.FILE_NAME,name);
  }
  Expression expression=endpoint.getFileName();
  if (name != null && !name.equals(consumed)) {
    if (StringHelper.hasStartToken(name,"simple")) {
      log.trace("{} contains a Simple expression: {}",Exchange.FILE_NAME,name);
      Language language=getEndpoint().getCamelContext().resolveLanguage("file");
      expression=language.createExpression(name);
    }
  }
  if (expression != null) {
    log.trace("Filename evaluated as expression: {}",expression);
    name=expression.evaluate(exchange,String.class);
  }
  if (name != null && endpoint.isFlatten()) {
    int pos=Math.max(name.lastIndexOf("/"),name.lastIndexOf("\\"));
    if (pos != -1) {
      name=name.substring(pos + 1);
    }
  }
  String endpointPath=endpoint.getConfiguration().getDirectory();
  String baseDir="";
  if (endpointPath.length() > 0) {
    baseDir=endpointPath;
    boolean trailingSlash=endpointPath.endsWith("/") || endpointPath.endsWith("\\");
    if (!trailingSlash) {
      baseDir+=getFileSeparator();
    }
  }
  if (name != null) {
    answer=baseDir + name;
  }
 else {
    answer=baseDir + endpoint.getGeneratedFileName(exchange.getIn());
  }
  if (endpoint.getConfiguration().needToNormalize()) {
    answer=normalizePath(answer);
  }
  return answer;
}
