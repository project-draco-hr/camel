{
  log.trace("Processing file: {} for exchange: {}",target,exchange);
  try {
    preWriteCheck();
    boolean writeAsTempAndRename=ObjectHelper.isNotEmpty(endpoint.getTempFileName());
    String tempTarget=null;
    if (writeAsTempAndRename) {
      tempTarget=createTempFileName(exchange,target);
      log.trace("Writing using tempNameFile: {}",tempTarget);
      if (operations.existsFile(target)) {
        if (endpoint.getFileExist() == GenericFileExist.Ignore) {
          log.trace("An existing file already exists: {}. Ignore and do not override it.",target);
          return;
        }
 else         if (endpoint.getFileExist() == GenericFileExist.Fail) {
          throw new GenericFileOperationFailedException("File already exist: " + target + ". Cannot write new file.");
        }
 else         if (endpoint.isEagerDeleteTargetFile() && endpoint.getFileExist() == GenericFileExist.Override) {
          log.trace("Eagerly deleting existing file: {}",target);
          if (!operations.deleteFile(target)) {
            throw new GenericFileOperationFailedException("Cannot delete file: " + target);
          }
        }
      }
      if (operations.existsFile(tempTarget)) {
        log.trace("Deleting existing temp file: {}",tempTarget);
        if (!operations.deleteFile(tempTarget)) {
          throw new GenericFileOperationFailedException("Cannot delete file: " + tempTarget);
        }
      }
    }
    writeFile(exchange,tempTarget != null ? tempTarget : target);
    if (tempTarget != null) {
      if (!endpoint.isEagerDeleteTargetFile() && operations.existsFile(target) && endpoint.getFileExist() == GenericFileExist.Override) {
        log.trace("Deleting existing file: {}",target);
        if (!operations.deleteFile(target)) {
          throw new GenericFileOperationFailedException("Cannot delete file: " + target);
        }
      }
      log.trace("Renaming file: [{}] to: [{}]",tempTarget,target);
      boolean renamed=operations.renameFile(tempTarget,target);
      if (!renamed) {
        throw new GenericFileOperationFailedException("Cannot rename file from: " + tempTarget + " to: "+ target);
      }
    }
    if (endpoint.getDoneFileName() != null) {
      String doneFileName=endpoint.createDoneFileName(target);
      ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);
      Exchange empty=new DefaultExchange(exchange);
      empty.getIn().setBody("");
      log.trace("Writing done file: [{}]",doneFileName);
      if (operations.existsFile(doneFileName)) {
        if (!operations.deleteFile(doneFileName)) {
          throw new GenericFileOperationFailedException("Cannot delete existing done file: " + doneFileName);
        }
      }
      writeFile(empty,doneFileName);
    }
    exchange.getIn().setHeader(Exchange.FILE_NAME_PRODUCED,target);
  }
 catch (  Exception e) {
    handleFailedWrite(exchange,e);
  }
  postWriteCheck();
}
