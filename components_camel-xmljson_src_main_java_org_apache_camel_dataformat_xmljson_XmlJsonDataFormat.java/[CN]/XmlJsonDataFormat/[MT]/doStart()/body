{
  serializer=new XMLSerializer();
  if (forceTopLevelObject != null) {
    serializer.setForceTopLevelObject(forceTopLevelObject);
  }
  if (namespaceLenient != null) {
    serializer.setNamespaceLenient(namespaceLenient);
  }
  if (namespaceMappings != null) {
    for (    NamespacesPerElementMapping nsMapping : namespaceMappings) {
      for (      Entry<String,String> entry : nsMapping.namespaces.entrySet()) {
        serializer.addNamespace(entry.getKey(),entry.getValue(),nsMapping.element);
      }
    }
  }
  if (rootName != null) {
    serializer.setRootName(rootName);
  }
  if (elementName != null) {
    serializer.setElementName(elementName);
  }
  if (arrayName != null) {
    serializer.setArrayName(arrayName);
  }
  if (expandableProperties != null && expandableProperties.size() != 0) {
    serializer.setExpandableProperties(expandableProperties.toArray(new String[expandableProperties.size()]));
  }
  if (skipWhitespace != null) {
    serializer.setSkipWhitespace(skipWhitespace);
  }
  if (trimSpaces != null) {
    serializer.setTrimSpaces(trimSpaces);
  }
  if (skipNamespaces != null) {
    serializer.setSkipNamespaces(skipNamespaces);
  }
  if (removeNamespacePrefixes != null) {
    serializer.setRemoveNamespacePrefixFromElements(removeNamespacePrefixes);
  }
  if (typeHints == TypeHintsEnum.YES || typeHints == TypeHintsEnum.WITH_PREFIX) {
    serializer.setTypeHintsEnabled(true);
    if (typeHints == TypeHintsEnum.WITH_PREFIX) {
      serializer.setTypeHintsCompatibility(true);
    }
  }
 else {
    serializer.setTypeHintsEnabled(false);
    serializer.setTypeHintsCompatibility(false);
  }
}
