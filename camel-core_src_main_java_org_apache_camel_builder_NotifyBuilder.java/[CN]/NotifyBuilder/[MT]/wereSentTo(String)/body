{
  stack.add(wereSentToIndex++,new EventPredicateSupport(){
    private ConcurrentMap<String,String> sentTo=new ConcurrentHashMap<String,String>();
    @Override public boolean isAbstract(){
      return true;
    }
    @Override public boolean onExchangeSent(    Exchange exchange,    Endpoint endpoint,    long timeTaken){
      if (EndpointHelper.matchEndpoint(context,endpoint.getEndpointUri(),endpointUri)) {
        sentTo.put(exchange.getExchangeId(),exchange.getExchangeId());
      }
      return onExchange(exchange);
    }
    @Override public boolean onExchange(    Exchange exchange){
      String sent=sentTo.get(exchange.getExchangeId());
      return sent != null;
    }
    public boolean matches(){
      return true;
    }
    @Override public void reset(){
      sentTo.clear();
    }
    @Override public String toString(){
      return "wereSentTo(" + endpointUri + ")";
    }
  }
);
  return this;
}
