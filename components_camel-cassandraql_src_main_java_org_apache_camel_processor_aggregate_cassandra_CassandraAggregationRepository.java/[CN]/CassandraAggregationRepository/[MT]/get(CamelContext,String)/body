{
  Object[] pkValues=getPKValues(key);
  LOGGER.debug("Selecting key {} ",pkValues);
  Row row=getSession().execute(selectStatement.bind(pkValues)).one();
  Exchange exchange=null;
  if (row != null) {
    try {
      exchange=exchangeCodec.unmarshallExchange(camelContext,row.getBytes(exchangeColumn));
    }
 catch (    IOException iOException) {
      throw new CassandraAggregationException("Failed to read exchange",exchange,iOException);
    }
catch (    ClassNotFoundException classNotFoundException) {
      throw new CassandraAggregationException("Failed to read exchange",exchange,classNotFoundException);
    }
  }
  return exchange;
}
