{
  ChannelPipeline channelPipeline=ch.pipeline();
  SslHandler sslHandler=configureClientSSLOnDemand();
  if (sslHandler != null) {
    LOG.debug("Client SSL handler configured and added to the ChannelPipeline: {}",sslHandler);
    addToPipeline("ssl",channelPipeline,sslHandler);
  }
  List<ChannelHandler> decoders=producer.getConfiguration().getDecoders();
  for (int x=0; x < decoders.size(); x++) {
    ChannelHandler decoder=decoders.get(x);
    if (decoder instanceof ChannelHandlerFactory) {
      decoder=((ChannelHandlerFactory)decoder).newChannelHandler();
    }
    addToPipeline("decoder-" + x,channelPipeline,decoder);
  }
  List<ChannelHandler> encoders=producer.getConfiguration().getEncoders();
  for (int x=0; x < encoders.size(); x++) {
    ChannelHandler encoder=encoders.get(x);
    if (encoder instanceof ChannelHandlerFactory) {
      encoder=((ChannelHandlerFactory)encoder).newChannelHandler();
    }
    addToPipeline("encoder-" + x,channelPipeline,encoder);
  }
  if (producer.getConfiguration().getRequestTimeout() > 0) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());
    }
    ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);
    addToPipeline("timeout",channelPipeline,timeout);
  }
  addToPipeline("handler",channelPipeline,new ClientChannelHandler(producer));
  LOG.trace("Created ChannelPipeline: {}",channelPipeline);
}
