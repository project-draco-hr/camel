{
  LOG.trace("populateCamelHeaders: {}");
  headersMap.put(Exchange.HTTP_METHOD,httpExchange.getRequestMethod().toString());
  headersMap.put(Exchange.HTTP_URL,httpExchange.getRequestURL());
  headersMap.put(Exchange.HTTP_URI,httpExchange.getRequestURI());
  headersMap.put(Exchange.HTTP_QUERY,httpExchange.getQueryString());
  headersMap.put(Exchange.HTTP_RAW_QUERY,httpExchange.getQueryString());
  String path=httpExchange.getRequestPath();
  headersMap.put(Exchange.HTTP_PATH,path);
  if (LOG.isTraceEnabled()) {
    LOG.trace("HTTP-Method {}",httpExchange.getRequestMethod());
    LOG.trace("HTTP-Uri {}",httpExchange.getRequestURI());
  }
  for (  HttpString name : httpExchange.getRequestHeaders().getHeaderNames()) {
    if (name.toString().toLowerCase(Locale.US).equals("content-type")) {
      name=ExchangeHeaders.CONTENT_TYPE;
    }
    if (name.toString().toLowerCase(Locale.US).equals("authorization")) {
      String value=httpExchange.getRequestHeaders().get(name).toString();
      if (value != null && value.trim().startsWith("Basic")) {
        if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToExternalHeaders(Exchange.AUTHENTICATION,"Basic",exchange)) {
          UndertowUtils.appendHeader(headersMap,Exchange.AUTHENTICATION,"Basic");
        }
      }
    }
    Iterator<?> it=httpExchange.getRequestHeaders().get(name).iterator();
    while (it.hasNext()) {
      Object value=it.next();
      LOG.trace("HTTP-header: {}",value);
      if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToExternalHeaders(name.toString(),value,exchange)) {
        UndertowUtils.appendHeader(headersMap,name.toString(),value);
      }
    }
  }
  Map<String,Deque<String>> pathParameters=httpExchange.getQueryParameters();
  if (!pathParameters.isEmpty()) {
    for (    Map.Entry<String,Deque<String>> entry : pathParameters.entrySet()) {
      String name=entry.getKey();
      Object values=entry.getValue();
      Iterator<?> it=ObjectHelper.createIterator(values);
      while (it.hasNext()) {
        Object value=it.next();
        LOG.trace("URI-Parameter: {}",value);
        if (headerFilterStrategy != null && !headerFilterStrategy.applyFilterToExternalHeaders(name,value,exchange)) {
          UndertowUtils.appendHeader(headersMap,name,value);
        }
      }
    }
  }
}
