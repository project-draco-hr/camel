{
  CamelContext camelContext=camelController.getCamelContext(name);
  if (camelContext == null) {
    System.err.println("Camel context " + name + " not found.");
    return null;
  }
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1m\u001B[33mCamel Context " + name + "\u001B[0m"));
  System.out.println(StringEscapeUtils.unescapeJava("\tName: " + camelContext.getName()));
  System.out.println(StringEscapeUtils.unescapeJava("\tVersion: " + camelContext.getVersion()));
  System.out.println(StringEscapeUtils.unescapeJava("\tStatus: " + camelContext.getStatus()));
  System.out.println(StringEscapeUtils.unescapeJava("\tUptime: " + camelContext.getUptime()));
  System.out.println("");
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mStatistics\u001B[0m"));
  ObjectName contextMBean=null;
  ManagementAgent agent=camelContext.getManagementStrategy().getManagementAgent();
  if (agent != null) {
    MBeanServer mBeanServer=agent.getMBeanServer();
    Set<ObjectName> set=mBeanServer.queryNames(new ObjectName(agent.getMBeanObjectDomainName() + ":type=context,name=\"" + name+ "\",*"),null);
    Iterator<ObjectName> iterator=set.iterator();
    if (iterator.hasNext()) {
      contextMBean=iterator.next();
    }
    if (mBeanServer.isRegistered(contextMBean)) {
      Long exchangesTotal=(Long)mBeanServer.getAttribute(contextMBean,"ExchangesTotal");
      System.out.println(StringEscapeUtils.unescapeJava("\tExchanges Total: " + exchangesTotal));
      Long exchangesCompleted=(Long)mBeanServer.getAttribute(contextMBean,"ExchangesCompleted");
      System.out.println(StringEscapeUtils.unescapeJava("\tExchanges Completed: " + exchangesCompleted));
      Long exchangesFailed=(Long)mBeanServer.getAttribute(contextMBean,"ExchangesFailed");
      System.out.println(StringEscapeUtils.unescapeJava("\tExchanges Failed: " + exchangesFailed));
      Long minProcessingTime=(Long)mBeanServer.getAttribute(contextMBean,"MinProcessingTime");
      System.out.println(StringEscapeUtils.unescapeJava("\tMin Processing Time: " + minProcessingTime + "ms"));
      Long maxProcessingTime=(Long)mBeanServer.getAttribute(contextMBean,"MaxProcessingTime");
      System.out.println(StringEscapeUtils.unescapeJava("\tMax Processing Time: " + maxProcessingTime + "ms"));
      Long meanProcessingTime=(Long)mBeanServer.getAttribute(contextMBean,"MeanProcessingTime");
      System.out.println(StringEscapeUtils.unescapeJava("\tMean Processing Time: " + meanProcessingTime + "ms"));
      Long totalProcessingTime=(Long)mBeanServer.getAttribute(contextMBean,"TotalProcessingTime");
      System.out.println(StringEscapeUtils.unescapeJava("\tTotal Processing Time: " + totalProcessingTime + "ms"));
      Long lastProcessingTime=(Long)mBeanServer.getAttribute(contextMBean,"LastProcessingTime");
      System.out.println(StringEscapeUtils.unescapeJava("\tLast Processing Time: " + lastProcessingTime + "ms"));
      Long deltaProcessingTime=(Long)mBeanServer.getAttribute(contextMBean,"DeltaProcessingTime");
      System.out.println(StringEscapeUtils.unescapeJava("\tDelta Processing Time: " + deltaProcessingTime + "ms"));
      String load01=(String)mBeanServer.getAttribute(contextMBean,"Load01");
      String load05=(String)mBeanServer.getAttribute(contextMBean,"Load05");
      String load15=(String)mBeanServer.getAttribute(contextMBean,"Load15");
      System.out.println(StringEscapeUtils.unescapeJava("\tLoad Avg: " + load01 + ", "+ load05+ ", "+ load15));
      Object resetTimestampObj=mBeanServer.getAttribute(contextMBean,"ResetTimestamp");
      SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
      if (resetTimestampObj == null) {
        System.out.println(StringEscapeUtils.unescapeJava("\tReset Statistics Date:"));
      }
 else {
        Date firstExchangeTimestamp=(Date)resetTimestampObj;
        System.out.println(StringEscapeUtils.unescapeJava("\tReset Statistics Date: " + format.format(firstExchangeTimestamp)));
      }
      Object firstExchangeTimestampObj=mBeanServer.getAttribute(contextMBean,"FirstExchangeCompletedTimestamp");
      if (firstExchangeTimestampObj == null) {
        System.out.println(StringEscapeUtils.unescapeJava("\tFirst Exchange Date:"));
      }
 else {
        Date firstExchangeTimestamp=(Date)firstExchangeTimestampObj;
        System.out.println(StringEscapeUtils.unescapeJava("\tFirst Exchange Date: " + format.format(firstExchangeTimestamp)));
      }
      Object lastExchangeCompletedTimestampObj=mBeanServer.getAttribute(contextMBean,"LastExchangeCompletedTimestamp");
      if (lastExchangeCompletedTimestampObj == null) {
        System.out.println(StringEscapeUtils.unescapeJava("\tLast Exchange Completed Date:"));
      }
 else {
        Date lastExchangeCompletedTimestamp=(Date)lastExchangeCompletedTimestampObj;
        System.out.println(StringEscapeUtils.unescapeJava("\tLast Exchange Completed Date: " + format.format(lastExchangeCompletedTimestamp)));
      }
      long activeRoutes=0;
      long inactiveRoutes=0;
      List<Route> routeList=camelContext.getRoutes();
      for (      Route route : routeList) {
        if (camelContext.getRouteStatus(route.getId()).isStarted()) {
          activeRoutes++;
        }
 else {
          inactiveRoutes++;
        }
      }
      System.out.println(StringEscapeUtils.unescapeJava("\tNumber of running routes: " + activeRoutes));
      System.out.println(StringEscapeUtils.unescapeJava("\tNumber of not running routes: " + inactiveRoutes));
    }
  }
 else {
    System.out.println("");
    System.out.println(StringEscapeUtils.unescapeJava("\u001B[31mJMX Agent of Camel is not reachable. Maybe it has been disabled on the Camel context"));
    System.out.println(StringEscapeUtils.unescapeJava("In consequence, some statistics are not available.\u001B[0m"));
  }
  System.out.println("");
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mAdvanced\u001B[0m"));
  System.out.println(StringEscapeUtils.unescapeJava("\tAuto Startup: " + camelContext.isAutoStartup()));
  System.out.println(StringEscapeUtils.unescapeJava("\tStarting Routes: " + camelContext.isStartingRoutes()));
  System.out.println(StringEscapeUtils.unescapeJava("\tSuspended: " + camelContext.isSuspended()));
  System.out.println(StringEscapeUtils.unescapeJava("\tTracing: " + camelContext.isTracing()));
  System.out.println("");
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mProperties\u001B[0m"));
  for (  String property : camelContext.getProperties().keySet()) {
    System.out.println(StringEscapeUtils.unescapeJava("\t" + property + " = "+ camelContext.getProperty(property)));
  }
  System.out.println("");
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mComponents\u001B[0m"));
  for (  String component : camelContext.getComponentNames()) {
    System.out.println(StringEscapeUtils.unescapeJava("\t" + component));
  }
  if (mode != null && mode.equals("--verbose")) {
    System.out.println("");
    System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mEndpoints\u001B[0m"));
    for (    Endpoint endpoint : camelContext.getEndpoints()) {
      System.out.println(StringEscapeUtils.unescapeJava("\t" + endpoint.getEndpointUri()));
    }
  }
  System.out.println("");
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mRoutes\u001B[0m"));
  for (  Route route : camelContext.getRoutes()) {
    System.out.println(StringEscapeUtils.unescapeJava("\t" + route.getId()));
  }
  System.out.println("");
  System.out.println(StringEscapeUtils.unescapeJava("\u001B[1mUsed Languages\u001B[0m"));
  for (  String language : camelContext.getLanguageNames()) {
    System.out.println(StringEscapeUtils.unescapeJava("\t" + language));
  }
  return null;
}
