{
  MockEndpoint resultEndpoint=resolveMandatoryEndpoint("mock:resultMulti",MockEndpoint.class);
  resultEndpoint.expectedMessageCount(2);
  Map<String,Object> body1=new HashMap<String,Object>();
  body1.put("foo","abc");
  body1.put("bar",123);
  Map<String,Object> body2=new HashMap<String,Object>();
  body2.put("foo","def");
  body2.put("bar",456);
  body2.put("baz",789);
  template.sendBody("direct:startMulti",body1);
  template.sendBody("direct:startMulti",body2);
  resultEndpoint.assertIsSatisfied();
  List<Exchange> list=resultEndpoint.getReceivedExchanges();
  Message in1=list.get(0).getIn();
  String text1=in1.getBody(String.class);
  log.debug("Received " + text1);
  assertTrue("First CSV body has wrong value",Pattern.matches("(abc,123)|(123,abc)",text1.trim()));
  Message in2=list.get(1).getIn();
  String text2=in2.getBody(String.class);
  log.debug("Received " + text2);
  if (text1.trim().equals("abc,123")) {
    assertEquals("Second CSV body has wrong value","def,456,789",text2.trim());
  }
 else {
    assertEquals("Second CSV body has wrong value","456,def,789",text2.trim());
  }
}
