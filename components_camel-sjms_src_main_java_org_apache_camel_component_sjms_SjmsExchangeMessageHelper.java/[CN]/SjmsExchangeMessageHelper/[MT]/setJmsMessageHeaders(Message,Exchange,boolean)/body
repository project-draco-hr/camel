{
  Map<String,Object> headers=new HashMap<String,Object>();
  if (jmsMessage != null) {
    try {
      headers.put(JmsMessageHeaderType.JMSCorrelationID.toString(),jmsMessage.getJMSCorrelationID());
      headers.put(JmsMessageHeaderType.JMSDeliveryMode.toString(),jmsMessage.getJMSDeliveryMode());
      headers.put(JmsMessageHeaderType.JMSDestination.toString(),jmsMessage.getJMSDestination());
      headers.put(JmsMessageHeaderType.JMSExpiration.toString(),jmsMessage.getJMSExpiration());
      headers.put(JmsMessageHeaderType.JMSMessageID.toString(),jmsMessage.getJMSMessageID());
      headers.put(JmsMessageHeaderType.JMSPriority.toString(),jmsMessage.getJMSPriority());
      headers.put(JmsMessageHeaderType.JMSRedelivered.toString(),jmsMessage.getJMSRedelivered());
      headers.put(JmsMessageHeaderType.JMSTimestamp.toString(),jmsMessage.getJMSTimestamp());
      headers.put(JmsMessageHeaderType.JMSReplyTo.toString(),SjmsExchangeMessageHelper.getJMSReplyTo(jmsMessage));
      headers.put(JmsMessageHeaderType.JMSType.toString(),SjmsExchangeMessageHelper.getJMSType(jmsMessage));
      headers.put(JmsMessageHeaderType.JMSXGroupID.toString(),jmsMessage.getStringProperty(JmsMessageHeaderType.JMSXGroupID.toString()));
    }
 catch (    JMSException e) {
      throw new RuntimeCamelException(e);
    }
    for (Enumeration<String> enumeration=jmsMessage.getPropertyNames(); enumeration.hasMoreElements(); ) {
      String key=enumeration.nextElement();
      if (hasIllegalHeaderKey(key)) {
        throw new IllegalHeaderException("Header " + key + " is not a legal JMS header name value");
      }
      Object value=jmsMessage.getObjectProperty(key);
      headers.put(key,value);
    }
  }
  if (out) {
    exchange.getOut().setHeaders(headers);
  }
 else {
    exchange.getIn().setHeaders(headers);
  }
  return exchange;
}
