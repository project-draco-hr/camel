{
  Map<String,Object> headers=new HashMap<String,Object>(exchange.getIn().getHeaders());
  Set<String> keys=headers.keySet();
  for (  String headerName : keys) {
    Object headerValue=headers.get(headerName);
    if (headerName.equalsIgnoreCase("JMSCorrelationID")) {
      jmsMessage.setJMSCorrelationID(ExchangeHelper.convertToType(exchange,String.class,headerValue));
    }
 else     if (headerName.equalsIgnoreCase("JMSReplyTo") && headerValue != null) {
      if (headerValue instanceof String) {
        headerValue=headerValue;
      }
 else {
      }
    }
 else     if (headerName.equalsIgnoreCase("JMSType")) {
      jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));
    }
 else     if (headerName.equalsIgnoreCase("JMSPriority")) {
      jmsMessage.setJMSPriority(ExchangeHelper.convertToType(exchange,Integer.class,headerValue));
    }
 else     if (headerName.equalsIgnoreCase("JMSDeliveryMode")) {
      SjmsExchangeMessageHelper.setJMSDeliveryMode(exchange,jmsMessage,headerValue);
    }
 else     if (headerName.equalsIgnoreCase("JMSExpiration")) {
      jmsMessage.setJMSExpiration(ExchangeHelper.convertToType(exchange,Long.class,headerValue));
    }
 else {
      LOGGER.trace("Ignoring JMS header: {} with value: {}",headerName,headerValue);
      if (headerName.equalsIgnoreCase("JMSDestination") || headerName.equalsIgnoreCase("JMSMessageID") || headerName.equalsIgnoreCase("JMSTimestamp")|| headerName.equalsIgnoreCase("JMSRedelivered")) {
        LOGGER.trace("Ignoring JMS header: {} with value: {}",headerName,headerValue);
      }
 else {
        if (!(headerValue instanceof JmsMessageType)) {
          String encodedName=new DefaultJmsKeyFormatStrategy().encodeKey(headerName);
          SjmsExchangeMessageHelper.setProperty(jmsMessage,encodedName,headerValue);
        }
      }
    }
  }
  return jmsMessage;
}
