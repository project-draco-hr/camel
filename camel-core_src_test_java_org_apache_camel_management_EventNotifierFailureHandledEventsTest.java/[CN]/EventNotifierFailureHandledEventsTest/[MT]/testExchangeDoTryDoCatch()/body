{
  context.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").doTry().throwException(new IllegalArgumentException("Damn")).doCatch(IllegalArgumentException.class).to("mock:dead").end();
    }
  }
);
  context.start();
  getMockEndpoint("mock:dead").expectedMessageCount(1);
  template.sendBody("direct:start","Hello World");
  assertMockEndpointsSatisfied();
  assertEquals(12,events.size());
  assertIsInstanceOf(CamelContextStartingEvent.class,events.get(0));
  assertIsInstanceOf(RouteAddedEvent.class,events.get(1));
  assertIsInstanceOf(RouteStartedEvent.class,events.get(2));
  assertIsInstanceOf(CamelContextStartedEvent.class,events.get(3));
  assertIsInstanceOf(ExchangeSendingEvent.class,events.get(4));
  assertIsInstanceOf(ExchangeCreatedEvent.class,events.get(5));
  ExchangeFailureHandlingEvent e0=assertIsInstanceOf(ExchangeFailureHandlingEvent.class,events.get(6));
  assertEquals("should NOT be DLC",false,e0.isDeadLetterChannel());
  assertIsInstanceOf(ExchangeSendingEvent.class,events.get(7));
  assertIsInstanceOf(ExchangeSentEvent.class,events.get(8));
  ExchangeFailureHandledEvent e=assertIsInstanceOf(ExchangeFailureHandledEvent.class,events.get(9));
  assertEquals("should NOT be DLC",false,e.isDeadLetterChannel());
  assertFalse("should not be marked as failure handled as it was continued instead",e.isHandled());
  assertTrue("should be continued",e.isContinued());
  assertIsInstanceOf(ExchangeCompletedEvent.class,events.get(10));
  assertIsInstanceOf(ExchangeSentEvent.class,events.get(11));
  ExchangeSentEvent sent=(ExchangeSentEvent)events.get(11);
  assertEquals("direct://start",sent.getEndpoint().getEndpointUri());
}
