{
  Elements elementUtils=processingEnv.getElementUtils();
  String name=fieldName;
  if ("method".equals(modelName) || "tokenize".equals(modelName) || "xtokenize".equals(modelName)) {
    if ("expression".equals(name)) {
      return;
    }
  }
  name=prefix + name;
  TypeMirror fieldType=fieldElement.asType();
  String fieldTypeName=fieldType.toString();
  String defaultValue=findDefaultValue(fieldElement,fieldTypeName);
  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,true);
  boolean required=true;
  required=findRequired(fieldElement,required);
  boolean deprecated=fieldElement.getAnnotation(Deprecated.class) != null;
  EipOption ep=new EipOption(name,"value",fieldTypeName,required,defaultValue,docComment,deprecated,false,null,false,null);
  eipOptions.add(ep);
}
