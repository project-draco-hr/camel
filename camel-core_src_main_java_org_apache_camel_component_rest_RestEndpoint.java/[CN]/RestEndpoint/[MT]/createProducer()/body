{
  RestProducerFactory apiDocFactory=null;
  RestProducerFactory factory=null;
  if (apiDoc != null) {
    LOG.debug("Discovering camel-swagger-java on classpath for using api-doc: {}",apiDoc);
    try {
      FactoryFinder finder=getCamelContext().getFactoryFinder(RESOURCE_PATH);
      Object instance=finder.newInstance(DEFAULT_API_COMPONENT_NAME);
      if (instance instanceof RestProducerFactory) {
        apiDocFactory=(RestProducerFactory)instance;
      }
      parameters.put("apiDoc",apiDoc);
    }
 catch (    NoFactoryAvailableException e) {
      throw new IllegalStateException("Cannot find camel-swagger-java on classpath to use with api-doc: " + apiDoc);
    }
  }
  String cname=getComponentName();
  if (cname != null) {
    Object comp=getCamelContext().getRegistry().lookupByName(getComponentName());
    if (comp != null && comp instanceof RestProducerFactory) {
      factory=(RestProducerFactory)comp;
    }
 else {
      comp=getCamelContext().getComponent(getComponentName());
      if (comp != null && comp instanceof RestProducerFactory) {
        factory=(RestProducerFactory)comp;
      }
    }
    if (factory == null) {
      if (comp != null) {
        throw new IllegalArgumentException("Component " + getComponentName() + " is not a RestProducerFactory");
      }
 else {
        throw new NoSuchBeanException(getComponentName(),RestProducerFactory.class.getName());
      }
    }
    cname=getComponentName();
  }
  if (factory == null) {
    for (    String name : getCamelContext().getComponentNames()) {
      Component comp=getCamelContext().getComponent(name);
      if (comp != null && comp instanceof RestProducerFactory) {
        factory=(RestProducerFactory)comp;
        cname=name;
        break;
      }
    }
  }
  parameters.put("componentName",cname);
  if (factory == null) {
    Set<RestProducerFactory> factories=getCamelContext().getRegistry().findByType(RestProducerFactory.class);
    if (factories != null && factories.size() == 1) {
      factory=factories.iterator().next();
    }
  }
  if (factory != null) {
    LOG.debug("Using RestProducerFactory: {}",factory);
    Producer producer;
    if (apiDocFactory != null) {
      parameters.put("restProducerFactory",factory);
      producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,parameters);
    }
 else {
      producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,parameters);
    }
    RestConfiguration config=getCamelContext().getRestConfiguration(cname,true);
    RestProducer answer=new RestProducer(this,producer,config);
    answer.setOutType(outType);
    answer.setType(inType);
    return answer;
  }
 else {
    throw new IllegalStateException("Cannot find RestProducerFactory in Registry or as a Component to use");
  }
}
