{
  context.addRoutes(new SpringRouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").idempotentConsumer(header("messageId"),jpaMessageIdRepository(lookup(JpaTemplate.class),PROCESSOR_NAME)).to("mock:result");
    }
  }
);
  context.start();
  resultEndpoint.expectedBodiesReceived("one","two","three");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("2","two");
  sendMessage("1","one");
  sendMessage("3","three");
  assertMockEndpointsSatisfied();
  Set<String> ids=new HashSet<String>();
  List<MessageProcessed> list=jpaTemplate.find(SELECT_ALL_STRING,PROCESSOR_NAME);
  for (  MessageProcessed item : list) {
    ids.add(item.getMessageId());
  }
  assertEquals(3,ids.size());
  assertTrue("Should contain message 1",ids.contains("1"));
  assertTrue("Should contain message 2",ids.contains("2"));
  assertTrue("Should contain message 3",ids.contains("3"));
}
