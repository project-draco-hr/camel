{
  LOG.debug("Verification of XML signature document started");
  final Document doc=parseInput(input,out);
  XMLSignatureFactory fac;
  try {
    fac=XMLSignatureFactory.getInstance("DOM","ApacheXMLDSig");
  }
 catch (  NoSuchProviderException ex) {
    fac=XMLSignatureFactory.getInstance("DOM");
  }
  KeySelector selector=getConfiguration().getKeySelector();
  if (selector == null) {
    throw new IllegalStateException("Wrong configuration. Key selector is missing.");
  }
  DOMValidateContext valContext=new DOMValidateContext(selector,doc);
  valContext.setProperty("javax.xml.crypto.dsig.cacheReference",Boolean.TRUE);
  valContext.setProperty("org.jcp.xml.dsig.validateManifests",Boolean.TRUE);
  if (getConfiguration().getSecureValidation() == Boolean.TRUE) {
    valContext.setProperty("org.apache.jcp.xml.dsig.secureValidation",Boolean.TRUE);
    valContext.setProperty("org.jcp.xml.dsig.secureValidation",Boolean.TRUE);
  }
  setUriDereferencerAndBaseUri(valContext);
  setCryptoContextProperties(valContext);
  NodeList signatureNodes=getSignatureNodes(doc);
  List<XMLObject> collectedObjects=new ArrayList<XMLObject>(3);
  List<Reference> collectedReferences=new ArrayList<Reference>(3);
  int totalCount=signatureNodes.getLength();
  for (int i=0; i < totalCount; i++) {
    Element signatureNode=(Element)signatureNodes.item(i);
    valContext.setNode(signatureNode);
    final XMLSignature signature=fac.unmarshalXMLSignature(valContext);
    if (getConfiguration().getXmlSignatureChecker() != null) {
      XmlSignatureChecker.Input checkerInput=new CheckerInputBuilder().message(out).messageBodyDocument(doc).keyInfo(signature.getKeyInfo()).currentCountOfSignatures(i + 1).currentSignatureElement(signatureNode).objects(signature.getObjects()).signatureValue(signature.getSignatureValue()).signedInfo(signature.getSignedInfo()).totalCountOfSignatures(totalCount).xmlSchemaValidationExecuted(getSchemaResourceUri(out) != null).build();
      getConfiguration().getXmlSignatureChecker().checkBeforeCoreValidation(checkerInput);
    }
    boolean coreValidity;
    try {
      coreValidity=signature.validate(valContext);
    }
 catch (    XMLSignatureException se) {
      throw getConfiguration().getValidationFailedHandler().onXMLSignatureException(se);
    }
    boolean goon=coreValidity;
    if (!coreValidity) {
      goon=handleSignatureValidationFailed(valContext,signature);
    }
    if (goon) {
      LOG.debug("XML signature {} verified",i + 1);
    }
 else {
      throw new XmlSignatureInvalidException("XML signature validation failed");
    }
    collectedObjects.addAll((List<XMLObject>)signature.getObjects());
    collectedReferences.addAll((List<Reference>)signature.getSignedInfo().getReferences());
  }
  map2Message(collectedReferences,collectedObjects,out,doc);
}
