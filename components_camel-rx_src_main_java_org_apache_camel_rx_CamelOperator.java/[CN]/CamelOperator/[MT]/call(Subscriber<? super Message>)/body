{
  return new Subscriber<Message>(s){
    @Override public void onCompleted(){
      try {
        ServiceHelper.stopService(producerTemplate);
      }
 catch (      Exception e) {
        throw new RuntimeCamelRxException(e);
      }
 finally {
        producerTemplate=null;
      }
      if (!s.isUnsubscribed()) {
        s.onCompleted();
      }
    }
    @Override public void onError(    Throwable e){
      if (!s.isUnsubscribed()) {
        s.onError(e);
      }
    }
    @Override public void onNext(    Message item){
      if (!s.isUnsubscribed()) {
        Exchange exchange=process(item);
        if (exchange.getException() != null) {
          s.onError(exchange.getException());
        }
 else {
          if (exchange.hasOut()) {
            s.onNext(exchange.getOut());
          }
 else {
            s.onNext(exchange.getIn());
          }
        }
      }
    }
  }
;
}
