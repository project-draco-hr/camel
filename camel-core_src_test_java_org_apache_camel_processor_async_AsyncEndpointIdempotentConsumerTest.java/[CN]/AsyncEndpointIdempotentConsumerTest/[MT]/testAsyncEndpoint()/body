{
  getMockEndpoint("mock:before").expectedBodiesReceived("A","B","C");
  MockEndpoint after=getMockEndpoint("mock:after");
  after.expectedBodiesReceived("Bye Camel","Bye Camel");
  after.message(0).header("myId").isEqualTo(123);
  after.message(1).header("myId").isEqualTo(456);
  MockEndpoint result=getMockEndpoint("mock:result");
  result.expectedBodiesReceived("Bye Camel","Bye Camel");
  result.message(0).header("myId").isEqualTo(123);
  result.message(1).header("myId").isEqualTo(456);
  template.sendBodyAndHeader("direct:start","A","myId",123);
  template.sendBodyAndHeader("direct:start","B","myId",123);
  template.sendBodyAndHeader("direct:start","C","myId",456);
  assertMockEndpointsSatisfied();
  assertFalse("Should use different threads",beforeThreadName.equalsIgnoreCase(afterThreadName));
}
