{
  StringBuilder buffer=new StringBuilder();
  results=new HashMap<Integer,List>();
  ObjectHelper.notNull(this.separator,"The separator has not been instantiated or property not defined in the @CsvRecord annotation");
  char separator=Converter.getCharDelimitor(this.getSeparator());
  if (LOG.isDebugEnabled()) {
    LOG.debug("Separator converted : '0x{}', from : {}",Integer.toHexString(separator),this.getSeparator());
  }
  for (  Class clazz : models) {
    if (model.containsKey(clazz.getName())) {
      Object obj=model.get(clazz.getName());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Model object : {}, class : {}",obj,obj.getClass().getName());
      }
      if (obj != null) {
        generateCsvPositionMap(clazz,obj);
      }
    }
  }
  List<List> l=new ArrayList<List>();
  if (isOneToMany) {
    l=product(results);
  }
 else {
    TreeMap<Integer,List> sortValues=new TreeMap<Integer,List>(results);
    List<String> temp=new ArrayList<String>();
    for (    Entry<Integer,List> entry : sortValues.entrySet()) {
      List<String> val=(List<String>)entry.getValue();
      String value=(String)val.get(0);
      if (value != null) {
        temp.add(value);
      }
 else {
        temp.add("");
      }
    }
    l.add(temp);
  }
  if (l != null) {
    Iterator it=l.iterator();
    while (it.hasNext()) {
      List<String> tokens=(ArrayList<String>)it.next();
      Iterator itx=tokens.iterator();
      while (itx.hasNext()) {
        String res=(String)itx.next();
        if (res != null) {
          buffer.append(res);
        }
        if (itx.hasNext()) {
          buffer.append(separator);
        }
      }
      if (it.hasNext()) {
        buffer.append(Converter.getStringCarriageReturn(getCarriageReturn()));
      }
    }
  }
  return buffer.toString();
}
