{
  String topic=endpoint.getTopic();
  if (!endpoint.isBridgeEndpoint()) {
    topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,topic,String.class);
  }
  if (topic == null) {
    throw new CamelExchangeException("No topic key set",exchange);
  }
  final Object partitionKey=exchange.getIn().getHeader(KafkaConstants.PARTITION_KEY);
  final boolean hasPartitionKey=partitionKey != null;
  final Object messageKey=exchange.getIn().getHeader(KafkaConstants.KEY);
  final boolean hasMessageKey=messageKey != null;
  Object msg=exchange.getIn().getBody();
  Iterator<Object> iterator=null;
  if (msg instanceof Iterable) {
    iterator=((Iterable<Object>)msg).iterator();
  }
 else   if (msg instanceof Iterator) {
    iterator=(Iterator<Object>)msg;
  }
  if (iterator != null) {
    final Iterator<Object> msgList=iterator;
    final String msgTopic=topic;
    return new Iterator<ProducerRecord>(){
      @Override public boolean hasNext(){
        return msgList.hasNext();
      }
      @Override public ProducerRecord next(){
        if (hasPartitionKey && hasMessageKey) {
          return new ProducerRecord(msgTopic,new Integer(partitionKey.toString()),messageKey,msgList.next());
        }
 else         if (hasMessageKey) {
          return new ProducerRecord(msgTopic,messageKey,msgList.next());
        }
        return new ProducerRecord(msgTopic,msgList.next());
      }
    }
;
  }
  ProducerRecord record;
  if (hasPartitionKey && hasMessageKey) {
    record=new ProducerRecord(topic,new Integer(partitionKey.toString()),messageKey,msg);
  }
 else   if (hasMessageKey) {
    record=new ProducerRecord(topic,messageKey,msg);
  }
 else {
    log.warn("No message key or partition key set");
    record=new ProducerRecord(topic,msg);
  }
  return Collections.singletonList(record).iterator();
}
