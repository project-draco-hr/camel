{
  ExecutorService service=Executors.newFixedThreadPool(5);
  final CountDownLatch latch=new CountDownLatch(1000);
  final Map<String,Object> map=new CaseInsensitiveMap();
  for (int i=0; i < 1000; i++) {
    final int count=i;
    service.submit(new Runnable(){
      public void run(){
        Map<String,Object> foo=new CaseInsensitiveMap();
        foo.put("counter" + count,count);
        foo.put("foo",123);
        foo.put("bar",456);
        foo.put("cake","cheese");
        map.putAll(foo);
        latch.countDown();
      }
    }
);
  }
  assertTrue(latch.await(10,TimeUnit.SECONDS));
  assertEquals(1003,map.size());
  assertEquals(true,map.containsKey("counter0"));
  assertEquals(true,map.containsKey("counter500"));
  assertEquals(true,map.containsKey("counter999"));
  assertEquals(123,map.get("FOO"));
  assertEquals(456,map.get("Bar"));
  assertEquals("cheese",map.get("cAKe"));
  service.shutdownNow();
}
