{
  int expectedMessages=(remoteInterfaceAddress != null) ? 3 : 2;
  getMockEndpoint("mock:endpoint").expectedMessageCount(expectedMessages);
  URL localUrl=new URL("http://localhost:" + port1 + "/testRoute");
  String localResponse=context.getTypeConverter().convertTo(String.class,localUrl.openStream());
  assertEquals("local",localResponse);
  if (!isMacOS) {
    localUrl=new URL("http://127.0.0.1:" + port2 + "/testRoute");
  }
 else {
    localUrl=new URL("http://localhost:" + port2 + "/testRoute");
  }
  localResponse=context.getTypeConverter().convertTo(String.class,localUrl.openStream());
  assertEquals("local-differentPort",localResponse);
  if (remoteInterfaceAddress != null) {
    URL url=new URL("http://" + remoteInterfaceAddress + ":"+ port3+ "/testRoute");
    String remoteResponse=context.getTypeConverter().convertTo(String.class,url.openStream());
    assertEquals("remote",remoteResponse);
  }
  assertMockEndpointsSatisfied();
}
