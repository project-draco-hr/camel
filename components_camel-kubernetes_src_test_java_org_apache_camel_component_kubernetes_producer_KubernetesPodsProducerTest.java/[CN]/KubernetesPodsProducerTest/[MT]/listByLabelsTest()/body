{
  if (ObjectHelper.isEmpty(authToken)) {
    return;
  }
  Exchange ex=template.request("direct:listByLabels",new Processor(){
    @Override public void process(    Exchange exchange) throws Exception {
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME,"default");
      Map<String,String> labels=new HashMap<String,String>();
      labels.put("component","elasticsearch");
      exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_PODS_LABELS,labels);
    }
  }
);
  List<Pod> result=ex.getOut().getBody(List.class);
  boolean podExists=false;
  Iterator<Pod> it=result.iterator();
  while (it.hasNext()) {
    Pod pod=it.next();
    if (pod.getMetadata().getLabels().containsValue("elasticsearch")) {
      podExists=true;
    }
  }
  assertFalse(podExists);
}
