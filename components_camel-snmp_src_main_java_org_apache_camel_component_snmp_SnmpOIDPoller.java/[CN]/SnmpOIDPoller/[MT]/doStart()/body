{
  super.doStart();
  this.targetAddress=GenericAddress.parse(this.endpoint.getAddress());
  if ("tcp".equals(endpoint.getProtocol())) {
    this.transport=new DefaultTcpTransportMapping();
  }
 else   if ("udp".equals(endpoint.getProtocol())) {
    this.transport=new DefaultUdpTransportMapping();
  }
 else {
    throw new IllegalArgumentException("Unknown protocol: " + endpoint.getProtocol());
  }
  this.snmp=new Snmp(this.transport);
  this.usm=new USM(SecurityProtocols.getInstance(),new OctetString(MPv3.createLocalEngineID()),0);
  SecurityModels.getInstance().addSecurityModel(usm);
  target=new CommunityTarget();
  target.setCommunity(new OctetString(this.endpoint.getSnmpCommunity()));
  target.setAddress(targetAddress);
  target.setRetries(this.endpoint.getRetries());
  target.setTimeout(this.endpoint.getTimeout());
  target.setVersion(this.endpoint.getSnmpVersion());
  this.pdu=new PDU();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Starting OID poller on " + endpoint.getAddress() + " using "+ endpoint.getProtocol()+ " protocol");
  }
  this.transport.listen();
  LOG.info("Started OID poller on " + endpoint.getAddress() + " using "+ endpoint.getProtocol()+ " protocol");
}
