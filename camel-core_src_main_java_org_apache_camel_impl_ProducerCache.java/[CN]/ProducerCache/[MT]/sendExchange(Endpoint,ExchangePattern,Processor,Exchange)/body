{
  return doInProducer(endpoint,exchange,pattern,new ProducerCallback<Exchange>(){
    public Exchange doInProducer(    Producer producer,    Exchange exchange,    ExchangePattern pattern) throws Exception {
      if (exchange == null) {
        exchange=pattern != null ? producer.createExchange(pattern) : producer.createExchange();
      }
      if (processor != null) {
        processor.process(exchange);
      }
      DefaultUnitOfWork uow=new DefaultUnitOfWork(exchange);
      try {
        uow.start();
      }
 catch (      Exception e) {
        throw wrapRuntimeCamelException(e);
      }
      exchange.setUnitOfWork(uow);
      if (LOG.isDebugEnabled()) {
        LOG.debug(">>>> " + endpoint + " "+ exchange);
      }
      exchange.setProperty(Exchange.TO_ENDPOINT,endpoint.getEndpointUri());
      StopWatch watch=new StopWatch();
      try {
        producer.process(exchange);
      }
  finally {
        long timeTaken=watch.stop();
        EventHelper.notifyExchangeSent(exchange.getContext(),exchange,endpoint,timeTaken);
        if (exchange.getUnitOfWork() != null) {
          exchange.getUnitOfWork().done(exchange);
        }
        try {
          uow.stop();
        }
 catch (        Exception e) {
          LOG.warn("Exception occurred during stopping UnitOfWork for Exchange: " + exchange + ". This exception will be ignored.");
        }
        exchange.setUnitOfWork(null);
      }
      return exchange;
    }
  }
);
}
