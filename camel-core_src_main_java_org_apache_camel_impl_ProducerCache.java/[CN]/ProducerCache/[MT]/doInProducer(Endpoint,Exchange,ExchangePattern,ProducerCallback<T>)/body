{
  Producer producer=doGetProducer(endpoint,true);
  if (producer == null) {
    if (isStopped()) {
      LOG.warn("Ignoring exchange sent after processor is stopped: " + exchange);
      return null;
    }
 else {
      throw new IllegalStateException("No producer, this processor has not been started: " + this);
    }
  }
  StopWatch watch=null;
  if (exchange != null) {
    watch=new StopWatch();
  }
  try {
    return callback.doInProducer(producer,exchange,pattern);
  }
  finally {
    if (exchange != null) {
      long timeTaken=watch.stop();
      EventHelper.notifyExchangeSent(exchange.getContext(),exchange,endpoint,timeTaken);
    }
    if (producer instanceof ServicePoolAware) {
      pool.release(endpoint,producer);
    }
 else     if (!producer.isSingleton()) {
      producer.stop();
    }
  }
}
