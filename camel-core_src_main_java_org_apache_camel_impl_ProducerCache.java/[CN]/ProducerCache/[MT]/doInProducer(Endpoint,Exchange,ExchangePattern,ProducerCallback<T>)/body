{
  T answer=null;
  Producer producer=doGetProducer(endpoint,true);
  if (producer == null) {
    if (isStopped()) {
      LOG.warn("Ignoring exchange sent after processor is stopped: " + exchange);
      return null;
    }
 else {
      throw new IllegalStateException("No producer, this processor has not been started: " + this);
    }
  }
  StopWatch watch=null;
  if (exchange != null) {
    watch=new StopWatch();
  }
  try {
    answer=callback.doInProducer(producer,exchange,pattern);
  }
 catch (  Throwable e) {
    if (exchange != null) {
      exchange.setException(e);
    }
  }
 finally {
    if (exchange != null) {
      long timeTaken=watch.stop();
      EventHelper.notifyExchangeSent(exchange.getContext(),exchange,endpoint,timeTaken);
    }
    if (producer instanceof ServicePoolAware) {
      pool.release(endpoint,producer);
    }
 else     if (!producer.isSingleton()) {
      try {
        ServiceHelper.stopService(producer);
      }
 catch (      Exception e) {
        LOG.warn("Error stopping producer: " + producer,e);
      }
    }
  }
  return answer;
}
