{
  return doInProducer(endpoint,exchange,pattern,new ProducerCallback<Exchange>(){
    public Exchange doInProducer(    Producer producer,    Exchange exchange,    ExchangePattern pattern){
      if (exchange == null) {
        exchange=pattern != null ? producer.getEndpoint().createExchange(pattern) : producer.getEndpoint().createExchange();
      }
      if (processor != null) {
        try {
          processor.process(exchange);
        }
 catch (        Exception e) {
          exchange.setException(e);
          return exchange;
        }
      }
      LOG.debug(">>>> {} {}",endpoint,exchange);
      exchange.setProperty(Exchange.TO_ENDPOINT,endpoint.getEndpointUri());
      StopWatch watch=null;
      try {
        if (eventNotifierEnabled) {
          watch=new StopWatch();
          EventHelper.notifyExchangeSending(exchange.getContext(),exchange,endpoint);
        }
        CamelInternalProcessor internal=prepareInternalProcessor(producer,resultProcessor);
        internal.process(exchange);
      }
 catch (      Throwable e) {
        exchange.setException(e);
      }
 finally {
        if (eventNotifierEnabled && watch != null) {
          long timeTaken=watch.stop();
          EventHelper.notifyExchangeSent(exchange.getContext(),exchange,endpoint,timeTaken);
        }
      }
      return exchange;
    }
  }
);
}
