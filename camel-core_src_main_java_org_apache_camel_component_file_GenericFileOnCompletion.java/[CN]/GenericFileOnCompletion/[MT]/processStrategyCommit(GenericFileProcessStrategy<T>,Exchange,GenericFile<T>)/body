{
  if (endpoint.isIdempotent()) {
    String key=absoluteFileName;
    if (endpoint.getIdempotentKey() != null) {
      Exchange dummy=endpoint.createExchange(file);
      key=endpoint.getIdempotentKey().evaluate(dummy,String.class);
    }
    if (key != null) {
      endpoint.getIdempotentRepository().add(key);
    }
  }
  boolean complete=exchange.getProperty(Exchange.BATCH_COMPLETE,false,Boolean.class);
  if (endpoint.getDoneFileName() != null && !endpoint.isNoop() && complete) {
    String doneFileName=endpoint.createDoneFileName(absoluteFileName);
    ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);
    try {
      boolean deleted=operations.deleteFile(doneFileName);
      log.trace("Done file: {} was deleted: {}",doneFileName,deleted);
      if (!deleted) {
        log.warn("Done file: " + doneFileName + " could not be deleted");
      }
    }
 catch (    Exception e) {
      handleException(e);
    }
  }
  try {
    log.trace("Commit file strategy: {} for file: {}",processStrategy,file);
    processStrategy.commit(operations,endpoint,exchange,file);
  }
 catch (  Exception e) {
    handleException(e);
  }
}
