{
  if (jolokia == null) {
    throw new IllegalStateException("Need to connect to remote jolokia first");
  }
  Map<String,Object> answer=new LinkedHashMap<String,Object>();
  ObjectName found=lookupCamelContext(camelContextName);
  if (found != null) {
    J4pReadResponse rr=jolokia.execute(new J4pReadRequest(found));
    if (rr != null) {
      for (      String key : rr.getAttributes()) {
        answer.put(asKey(key),rr.getValue(key));
      }
    }
    answer.put("name",answer.get("camelId"));
    answer.put("status",answer.get("state"));
    answer.put("version",answer.get("camelVersion"));
    answer.put("suspended","Suspended".equals(answer.get("state")));
    TimeUnit unit=TimeUnit.valueOf((String)answer.get("timeUnit"));
    long timeout=(Long)answer.get("timeout");
    answer.put("shutdownTimeout","" + unit.toSeconds(timeout));
    answer.put("applicationContextClassLoader",answer.get("applicationContextClassName"));
  }
  return answer;
}
