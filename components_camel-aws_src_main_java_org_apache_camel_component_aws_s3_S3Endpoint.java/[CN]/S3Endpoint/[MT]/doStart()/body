{
  super.doStart();
  s3Client=configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : createS3Client();
  if (ObjectHelper.isNotEmpty(configuration.getAmazonS3Endpoint())) {
    s3Client.setEndpoint(configuration.getAmazonS3Endpoint());
  }
  String fileName=getConfiguration().getFileName();
  if (fileName != null) {
    LOG.trace("File name [{}] requested, so skipping bucket check...",fileName);
    return;
  }
  String bucketName=getConfiguration().getBucketName();
  LOG.trace("Quering whether bucket [{}] already exists...",bucketName);
  try {
    s3Client.listObjects(new ListObjectsRequest(bucketName,null,null,null,0));
    LOG.trace("Bucket [{}] already exists",bucketName);
    return;
  }
 catch (  AmazonServiceException ase) {
    if (ase.getStatusCode() != 404) {
      throw ase;
    }
  }
  LOG.trace("Bucket [{}] doesn't exist yet",bucketName);
  CreateBucketRequest createBucketRequest=new CreateBucketRequest(getConfiguration().getBucketName());
  if (getConfiguration().getRegion() != null) {
    createBucketRequest.setRegion(getConfiguration().getRegion());
  }
  LOG.trace("Creating bucket [{}] in region [{}] with request [{}]...",new Object[]{configuration.getBucketName(),configuration.getRegion(),createBucketRequest});
  s3Client.createBucket(createBucketRequest);
  LOG.trace("Bucket created");
  if (configuration.getPolicy() != null) {
    LOG.trace("Updating bucket [{}] with policy [{}]",bucketName,configuration.getPolicy());
    s3Client.setBucketPolicy(bucketName,configuration.getPolicy());
    LOG.trace("Bucket policy updated");
  }
}
