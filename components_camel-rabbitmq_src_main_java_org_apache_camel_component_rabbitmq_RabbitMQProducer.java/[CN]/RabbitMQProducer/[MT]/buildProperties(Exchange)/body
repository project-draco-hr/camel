{
  AMQP.BasicProperties.Builder properties=new AMQP.BasicProperties.Builder();
  final Object contentType=exchange.getIn().getHeader(RabbitMQConstants.CONTENT_TYPE);
  if (contentType != null)   properties.contentType(contentType.toString());
  final Object priority=exchange.getIn().getHeader(RabbitMQConstants.PRIORITY);
  if (priority != null)   properties.priority(Integer.parseInt(priority.toString()));
  final Object messageId=exchange.getIn().getHeader(RabbitMQConstants.MESSAGE_ID);
  if (messageId != null)   properties.messageId(messageId.toString());
  final Object clusterId=exchange.getIn().getHeader(RabbitMQConstants.CLUSTERID);
  if (clusterId != null)   properties.clusterId(clusterId.toString());
  final Object replyTo=exchange.getIn().getHeader(RabbitMQConstants.REPLY_TO);
  if (replyTo != null)   properties.replyTo(replyTo.toString());
  final Object correlationId=exchange.getIn().getHeader(RabbitMQConstants.CORRELATIONID);
  if (correlationId != null)   properties.correlationId(correlationId.toString());
  final Object deliveryMode=exchange.getIn().getHeader(RabbitMQConstants.DELIVERY_MODE);
  if (deliveryMode != null)   properties.deliveryMode(Integer.parseInt(deliveryMode.toString()));
  final Object userId=exchange.getIn().getHeader(RabbitMQConstants.USERID);
  if (userId != null)   properties.userId(userId.toString());
  final Object type=exchange.getIn().getHeader(RabbitMQConstants.TYPE);
  if (type != null)   properties.type(type.toString());
  final Object contentEncoding=exchange.getIn().getHeader(RabbitMQConstants.CONTENT_ENCODING);
  if (contentEncoding != null)   properties.contentEncoding(contentEncoding.toString());
  final Object expiration=exchange.getIn().getHeader(RabbitMQConstants.EXPIRATION);
  if (expiration != null)   properties.expiration(expiration.toString());
  final Object appId=exchange.getIn().getHeader(RabbitMQConstants.APP_ID);
  if (appId != null)   properties.appId(appId.toString());
  final Object timestamp=exchange.getIn().getHeader(RabbitMQConstants.TIMESTAMP);
  if (timestamp != null)   properties.timestamp(new Date(Long.parseLong(timestamp.toString())));
  return properties;
}
