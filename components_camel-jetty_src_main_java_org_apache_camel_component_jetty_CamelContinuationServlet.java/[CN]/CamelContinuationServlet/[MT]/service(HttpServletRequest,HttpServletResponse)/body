{
  try {
    HttpConsumer consumer=resolve(request);
    if (consumer == null) {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
      return;
    }
    if (consumer.isSuspended()) {
      response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);
      return;
    }
    final Continuation continuation=ContinuationSupport.getContinuation(request);
    if (continuation.isInitial()) {
      final Exchange exchange=new DefaultExchange(consumer.getEndpoint(),ExchangePattern.InOut);
      if (consumer.getEndpoint().isBridgeEndpoint()) {
        exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);
      }
      if (consumer.getEndpoint().isDisableStreamCache()) {
        exchange.setProperty(Exchange.DISABLE_HTTP_STREAM_CACHE,Boolean.TRUE);
      }
      exchange.setIn(new HttpMessage(exchange,request,response));
      boolean sync=consumer.getAsyncProcessor().process(exchange,new AsyncCallback(){
        public void done(        boolean doneSync){
          if (doneSync) {
            return;
          }
          if (log.isTraceEnabled()) {
            log.trace("Resuming continuation of exchangeId: " + exchange.getExchangeId());
          }
          continuation.setAttribute("CamelExchange",exchange);
          continuation.resume();
        }
      }
);
      if (!sync) {
        if (log.isTraceEnabled()) {
          log.trace("Suspending continuation of exchangeId: " + exchange.getExchangeId());
        }
        continuation.suspend(response);
        return;
      }
      if (log.isTraceEnabled()) {
        log.trace("Writing response of exchangeId: " + exchange.getExchangeId());
      }
      consumer.getBinding().writeResponse(exchange,response);
      return;
    }
    if (continuation.isResumed()) {
      Exchange exchange=(Exchange)continuation.getAttribute("CamelExchange");
      if (log.isTraceEnabled()) {
        log.trace("Resuming continuation of exchangeId: " + exchange.getExchangeId());
      }
      if (log.isTraceEnabled()) {
        log.trace("Writing response of exchangeId: " + exchange.getExchangeId());
      }
      consumer.getBinding().writeResponse(exchange,response);
      return;
    }
  }
 catch (  Exception e) {
    log.error("Error processing request",e);
    throw new ServletException(e);
  }
}
