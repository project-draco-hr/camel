{
  Server server=null;
  WebsocketEndpoint endpoint=prodcon.getEndpoint();
  String connectorKey=getConnectorKey(endpoint);
synchronized (CONNECTORS) {
    ConnectorRef connectorRef=CONNECTORS.get(connectorKey);
    if (connectorRef == null) {
      ServerConnector connector;
      server=createServer();
      if (endpoint.isEnableJmx()) {
        enableJmx(server);
      }
      if (endpoint.getSslContextParameters() != null) {
        connector=getSslSocketConnector(server,endpoint.getSslContextParameters());
      }
 else {
        connector=new ServerConnector(server);
      }
      if (endpoint.getPort() != null) {
        connector.setPort(endpoint.getPort());
      }
 else {
        connector.setPort(port);
      }
      if (endpoint.getHost() != null) {
        connector.setHost(endpoint.getHost());
      }
 else {
        connector.setHost(host);
      }
      server.addConnector(connector);
      LOG.trace("Jetty Connector added: {}",connector.getName());
      ServletContextHandler context=createContext(server,connector,endpoint.getHandlers());
      setWebSocketComponentServletInitialParameter(context,endpoint);
      server.setHandler(context);
      applyCrossOriginFiltering(endpoint,context);
      if (endpoint.getStaticResources() != null) {
        server=createStaticResourcesServer(server,context,endpoint.getStaticResources());
      }
      MemoryWebsocketStore memoryStore=new MemoryWebsocketStore();
      connectorRef=new ConnectorRef(server,connector,null,memoryStore);
      if (endpoint.isSessionSupport()) {
        enableSessionSupport(connectorRef.server,connectorKey);
      }
      LOG.info("Jetty Server starting on host: {}:{}",connector.getHost(),connector.getPort());
      connectorRef.memoryStore.start();
      connectorRef.server.start();
      CONNECTORS.put(connectorKey,connectorRef);
    }
 else {
      connectorRef.increment();
    }
    if (endpoint.isSessionSupport()) {
      enableSessionSupport(connectorRef.server,connectorKey);
    }
    NodeSynchronization sync=new DefaultNodeSynchronization(connectorRef.memoryStore);
    WebsocketComponentServlet servlet=addServlet(sync,prodcon,endpoint.getResourceUri());
    if (prodcon instanceof WebsocketConsumer) {
      WebsocketConsumer consumer=WebsocketConsumer.class.cast(prodcon);
      if (servlet.getConsumer() == null) {
        servlet.setConsumer(consumer);
      }
      servlet.connect(consumer);
    }
    if (prodcon instanceof WebsocketProducer) {
      WebsocketProducer producer=WebsocketProducer.class.cast(prodcon);
      producer.setStore(connectorRef.memoryStore);
    }
  }
}
