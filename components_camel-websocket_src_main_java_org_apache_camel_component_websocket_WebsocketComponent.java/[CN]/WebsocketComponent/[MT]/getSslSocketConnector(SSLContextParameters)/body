{
  SslSelectChannelConnector sslSocketConnector=null;
  if (sslContextParameters != null) {
    SslContextFactory sslContextFactory=new WebSocketComponentSslContextFactory();
    try {
      sslContextFactory.setSslContext(sslContextParameters.createSSLContext());
      if (sslContextParameters.getCipherSuites() != null) {
        String[] ciphers=(String[])sslContextParameters.getCipherSuites().getCipherSuite().toArray();
        sslContextFactory.setIncludeCipherSuites(ciphers);
      }
 else {
        String[] ciphers={"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","Unknown 0x0:0x88","Unknown 0x0:0x87","TLS_DHE_RSA_WITH_AES_256_CBC_SHA","TLS_DHE_DSS_WITH_AES_256_CBC_SHA","TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","Unknown 0x0:0x84","TLS_RSA_WITH_AES_256_CBC_SHA","TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","TLS_ECDHE_RSA_WITH_RC4_128_SHA","TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","Unknown 0x0:0x45","Unknown 0x0:0x44","SSL_DHE_DSS_WITH_RC4_128_SHA","TLS_DHE_RSA_WITH_AES_128_CBC_SHA","TLS_DHE_DSS_WITH_AES_128_CBC_SHA","TLS_ECDH_RSA_WITH_RC4_128_SHA","TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","TLS_ECDH_ECDSA_WITH_RC4_128_SHA","TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","Unknown 0x0:0x96","Unknown 0x0:0x41","SSL_RSA_WITH_RC4_128_SHA","SSL_RSA_WITH_RC4_128_MD5","TLS_RSA_WITH_AES_128_CBC_SHA","TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA","SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA","TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","SSL_RSA_WITH_3DES_EDE_CBC_SHA"};
        sslContextFactory.setIncludeCipherSuites(ciphers);
      }
    }
 catch (    Exception e) {
      throw new RuntimeCamelException("Error initiating SSLContext.",e);
    }
    sslSocketConnector=new SslSelectChannelConnector(sslContextFactory);
  }
 else {
    sslSocketConnector=new SslSelectChannelConnector();
    sslSocketConnector.getSslContextFactory().setKeyManagerPassword(sslPassword);
    sslSocketConnector.getSslContextFactory().setKeyStorePassword(sslKeyPassword);
    if (sslKeystore != null) {
      sslSocketConnector.getSslContextFactory().setKeyStorePath(sslKeystore);
    }
  }
  return sslSocketConnector;
}
