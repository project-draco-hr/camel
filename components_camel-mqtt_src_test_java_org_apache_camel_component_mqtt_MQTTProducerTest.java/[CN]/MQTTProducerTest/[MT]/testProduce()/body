{
  MQTT mqtt=new MQTT();
  final BlockingConnection subscribeConnection=mqtt.blockingConnection();
  subscribeConnection.connect();
  Topic topic=new Topic(TEST_TOPIC,QoS.AT_MOST_ONCE);
  Topic[] topics={topic};
  subscribeConnection.subscribe(topics);
  final CountDownLatch latch=new CountDownLatch(numberOfMessages);
  Thread thread=new Thread(new Runnable(){
    public void run(){
      for (int i=0; i < numberOfMessages; i++) {
        try {
          Message message=subscribeConnection.receive();
          message.ack();
          latch.countDown();
        }
 catch (        Exception e) {
          e.printStackTrace();
          break;
        }
      }
    }
  }
);
  thread.start();
  Producer producer=context.getEndpoint("direct:foo").createProducer();
  for (int i=0; i < numberOfMessages; i++) {
    Exchange exchange=producer.createExchange();
    exchange.getIn().setBody("test message " + i);
    producer.process(exchange);
  }
  latch.await(20,TimeUnit.SECONDS);
  assertTrue("Messages not consumed = " + latch.getCount(),latch.getCount() == 0);
}
