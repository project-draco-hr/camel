{
  try {
    ClassLoader cl=clazz.getClassLoader();
    Class<?> clClazz=cl.getClass();
    Method mth=null;
    while (clClazz != null) {
      try {
        mth=clClazz.getDeclaredMethod("getBundle");
        break;
      }
 catch (      NoSuchMethodException e) {
      }
      clClazz=clClazz.getSuperclass();
    }
    if (mth != null) {
      mth.setAccessible(true);
      return ((Bundle)mth.invoke(cl)).getBundleContext();
    }
  }
 catch (  Throwable t) {
  }
  return null;
}
