{
  LOG.info("CamelContextServletListener initializing ...");
  try {
    jndiContext=new JndiContext();
    camelContext=new ServletCamelContext(jndiContext,sce.getServletContext());
  }
 catch (  Exception e) {
    LOG.error("Error creating CamelContext.",e);
    throw new RuntimeException("Error creating CamelContext.",e);
  }
  Map<String,Object> map=new LinkedHashMap<String,Object>();
  Enumeration names=sce.getServletContext().getInitParameterNames();
  while (names.hasMoreElements()) {
    String name=(String)names.nextElement();
    String value=sce.getServletContext().getInitParameter(name);
    if (ObjectHelper.isNotEmpty(value)) {
      Object target=value;
      if (value.startsWith("#")) {
        value=value.substring(1);
        target=lookupJndi(jndiContext,value);
      }
      map.put(name,target);
    }
  }
  String test=(String)map.remove("test");
  if (test != null && "true".equalsIgnoreCase(test)) {
    this.test=true;
  }
  LOG.trace("In test mode? {}",this.test);
  if (!map.isEmpty()) {
    try {
      IntrospectionSupport.setProperties(camelContext,map);
    }
 catch (    Exception e) {
      throw new RuntimeException("Error setting init parameters on CamelContext.",e);
    }
  }
  Set<String> routeBuilders=new HashSet<String>();
  for (  Map.Entry<String,Object> entry : map.entrySet()) {
    if (entry.getKey().toLowerCase(Locale.UK).startsWith("routebuilder")) {
      routeBuilders.add(entry.getKey());
      String value=(String)entry.getValue();
      if (ObjectHelper.isNotEmpty(value)) {
        Object target;
        if (value.startsWith("#")) {
          value=value.substring(1);
          target=lookupJndi(jndiContext,value);
        }
 else {
          try {
            Class<RouteBuilder> clazz=camelContext.getClassResolver().resolveMandatoryClass(value,RouteBuilder.class);
            target=camelContext.getInjector().newInstance(clazz);
          }
 catch (          Exception e) {
            throw new RuntimeException("Error creating RouteBuilder " + value,e);
          }
        }
        if (target instanceof RouteBuilder) {
          LOG.debug("Adding RouteBuilder {} -> {}",entry.getKey(),target);
          try {
            camelContext.addRoutes((RoutesBuilder)target);
          }
 catch (          Exception e) {
            throw new RuntimeException("Error adding RouteBuilder " + value,e);
          }
        }
      }
    }
  }
  for (  String name : routeBuilders) {
    map.remove(name);
  }
  String lifecycle=(String)map.remove(CamelContextLifecycle.class.getName());
  if (lifecycle != null) {
    try {
      Class<CamelContextLifecycle> clazz=camelContext.getClassResolver().resolveMandatoryClass(lifecycle,CamelContextLifecycle.class);
      camelContextLifecycle=camelContext.getInjector().newInstance(clazz);
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException("Error creating CamelContextLifecycle class with name " + lifecycle,e);
    }
  }
  if (!map.isEmpty()) {
    throw new IllegalArgumentException("Error setting init parameters on CamelContext." + " There are " + map.size() + " unknown parameters. ["+ map+ "]");
  }
  try {
    if (camelContextLifecycle != null) {
      camelContextLifecycle.preStart(camelContext,jndiContext);
    }
    camelContext.start();
    if (camelContextLifecycle != null) {
      camelContextLifecycle.postStart(camelContext,jndiContext);
    }
  }
 catch (  Exception e) {
    LOG.error("Error starting CamelContext.",e);
    throw new RuntimeException("Error starting CamelContext.",e);
  }
  if (this.test) {
    instance=camelContext;
  }
  LOG.info("CamelContextServletListener initialized");
}
