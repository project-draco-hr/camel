{
  HBaseRow rowModel=new HBaseRow();
  if (parameters.containsKey(HbaseAttribute.HBASE_ROW_TYPE.asOption())) {
    String rowType=String.valueOf(parameters.remove(HbaseAttribute.HBASE_ROW_TYPE.asOption()));
    if (rowType != null && !rowType.isEmpty()) {
      rowModel.setRowType(getCamelContext().getClassResolver().resolveClass(rowType));
    }
  }
  for (int i=1; parameters.get(HbaseAttribute.HBASE_FAMILY.asOption(i)) != null && parameters.get(HbaseAttribute.HBASE_QUALIFIER.asOption(i)) != null; i++) {
    HBaseCell cellModel=new HBaseCell();
    cellModel.setFamily(String.valueOf(parameters.remove(HbaseAttribute.HBASE_FAMILY.asOption(i))));
    cellModel.setQualifier(String.valueOf(parameters.remove(HbaseAttribute.HBASE_QUALIFIER.asOption(i))));
    if (parameters.containsKey(HbaseAttribute.HBASE_VALUE_TYPE.asOption())) {
      String valueType=String.valueOf(parameters.remove(HbaseAttribute.HBASE_VALUE_TYPE.asOption()));
      if (valueType != null && !valueType.isEmpty()) {
        rowModel.setRowType(getCamelContext().getClassResolver().resolveClass(valueType));
      }
    }
    rowModel.getCells().add(cellModel);
  }
  return rowModel;
}
