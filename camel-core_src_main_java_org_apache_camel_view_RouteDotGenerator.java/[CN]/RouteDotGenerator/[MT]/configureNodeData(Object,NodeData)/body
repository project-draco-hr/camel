{
  if (node instanceof ProcessorType) {
    ProcessorType processorType=(ProcessorType)node;
    data.edgeLabel=processorType.getLabel();
  }
  if (node instanceof FromType) {
    FromType fromType=(FromType)node;
    data.tooltop=fromType.getLabel();
    data.label=removeQueryString(data.tooltop);
    data.url="http://activemq.apache.org/camel/message-endpoint.html";
  }
 else   if (node instanceof ToType) {
    ToType toType=(ToType)node;
    data.tooltop=toType.getLabel();
    data.label=removeQueryString(data.tooltop);
    data.edgeLabel=null;
    data.url="http://activemq.apache.org/camel/message-endpoint.html";
  }
 else   if (node instanceof FilterType) {
    data.image=imagePrefix + "MessageFilterIcon.gif";
    data.nodeType="Message Filter";
  }
 else   if (node instanceof ChoiceType) {
    data.image=imagePrefix + "ContentBasedRouterIcon.gif";
    data.nodeType="Content Based Router";
  }
 else   if (node instanceof RecipientListType) {
    data.image=imagePrefix + "RecipientListIcon.gif";
    data.nodeType="Recipient List";
  }
 else   if (node instanceof SplitterType) {
    data.image=imagePrefix + "SplitterIcon.gif";
    data.nodeType="Splitter";
  }
 else   if (node instanceof AggregatorType) {
    data.image=imagePrefix + "AggregatorIcon.gif";
    data.nodeType="Aggregator";
  }
 else   if (node instanceof ResequencerType) {
    data.image=imagePrefix + "ResequencerIcon.gif";
    data.nodeType="Resequencer";
  }
  if (isNullOrBlank(data.nodeType)) {
    String name=node.getClass().getName();
    int idx=name.lastIndexOf('.');
    if (idx > 0) {
      name=name.substring(idx + 1);
    }
    if (name.endsWith("Type")) {
      name=name.substring(0,name.length() - 4);
    }
    data.nodeType=insertSpacesBetweenCamelCase(name);
  }
  if (data.label == null) {
    if (isNullOrBlank(data.image)) {
      data.label=data.nodeType;
      data.shape="box";
    }
 else     if (isNotNullAndNonEmpty(data.edgeLabel)) {
      data.label="";
    }
 else {
      data.label=node.toString();
    }
  }
  if (isNullOrBlank(data.tooltop)) {
    if (isNotNullAndNonEmpty(data.nodeType)) {
      String description=isNotNullAndNonEmpty(data.edgeLabel) ? data.edgeLabel : data.label;
      data.tooltop=data.nodeType + ": " + description;
    }
 else {
      data.tooltop=data.label;
    }
  }
  if (isNullOrBlank(data.url) && isNotNullAndNonEmpty(data.nodeType)) {
    data.url="http://activemq.apache.org/camel/" + data.nodeType.toLowerCase().replace(' ','-') + ".html";
  }
}
