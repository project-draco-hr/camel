{
  if (node instanceof MulticastType || node instanceof InterceptorRef) {
    List<ProcessorType> outputs=node.getOutputs();
    for (    ProcessorType output : outputs) {
      printNode(writer,fromData,output);
    }
    return fromData;
  }
  NodeData toData=getNodeData(node);
  printNode(writer,toData);
  if (fromData != null) {
    writer.print(fromData.id);
    writer.print(" -> ");
    writer.print(toData.id);
    writer.println(" [");
    String label=fromData.edgeLabel;
    if (isNotNullAndNonEmpty(label)) {
      writer.println("label = \"" + label + "\"");
    }
    writer.println("];");
  }
  List<ProcessorType> outputs=toData.outputs;
  if (outputs != null) {
    for (    ProcessorType output : outputs) {
      NodeData newData=printNode(writer,toData,output);
      if (!isMulticastNode(node)) {
        toData=newData;
      }
    }
  }
  return toData;
}
