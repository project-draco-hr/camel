{
  String tag=tagToken;
  if (SimpleLanguage.hasSimpleFunction(tag)) {
    tag=SimpleLanguage.expression(tag).evaluate(exchange,String.class);
  }
  String inherit=inheritNamespaceToken;
  if (inherit != null && SimpleLanguage.hasSimpleFunction(inherit)) {
    inherit=SimpleLanguage.expression(inherit).evaluate(exchange,String.class);
  }
  if (!tag.startsWith("<")) {
    tag="<" + tag;
  }
  if (!tag.endsWith(">")) {
    tag=tag + ">";
  }
  if (inherit != null) {
    if (!inherit.startsWith("<")) {
      inherit="<" + inherit;
    }
    if (!inherit.endsWith(">")) {
      inherit=inherit + ">";
    }
  }
  if (!tag.startsWith("<") || !tag.endsWith(">")) {
    throw new IllegalArgumentException("XML Tag token must be a valid XML tag, was: " + tag);
  }
  if (inherit != null && (!inherit.startsWith("<") || !inherit.endsWith(">"))) {
    throw new IllegalArgumentException("Namespace token must be a valid XML token, was: " + inherit);
  }
  XMLTokenIterator iterator=new XMLTokenIterator(tag,inherit,in,charset);
  iterator.init();
  return iterator;
}
