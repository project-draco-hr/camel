{
  contextNames.removeAll(contextQualifiers);
  if (contextQualifiers.isEmpty() && contextNames.isEmpty()) {
    abd.addBean(camelContextBean(manager,ANY,DEFAULT));
  }
 else   if (contextQualifiers.isEmpty() && contextNames.size() == 1) {
    abd.addBean(camelContextBean(manager,ANY,DEFAULT,contextNames.iterator().next()));
  }
 else {
    for (    ContextName name : contextNames) {
      abd.addBean(camelContextBean(manager,ANY,name));
    }
  }
  contextQualifiers.addAll(contextNames);
  for (  Map.Entry<Method,Bean<?>> producer : producerBeans.entrySet()) {
    Bean<?> bean=producer.getValue();
    Set<Annotation> qualifiers=new HashSet<>(producerQualifiers.get(producer.getKey()));
    Class<?> type=producer.getKey().getReturnType();
    if (CdiEventEndpoint.class.equals(type)) {
      for (      InjectionPoint ip : cdiEventEndpoints.keySet()) {
        qualifiers.addAll(ip.getQualifiers());
      }
    }
 else {
      if (Endpoint.class.isAssignableFrom(type) || ConsumerTemplate.class.equals(type) || ProducerTemplate.class.equals(type)) {
        qualifiers.addAll(CdiSpiHelper.excludeElementOfTypes(contextQualifiers,Default.class,Named.class));
      }
    }
    abd.addBean(new BeanDelegate<>(bean,qualifiers));
  }
  for (  ObserverMethod method : cdiEventEndpoints.values()) {
    abd.addObserverMethod(method);
  }
}
