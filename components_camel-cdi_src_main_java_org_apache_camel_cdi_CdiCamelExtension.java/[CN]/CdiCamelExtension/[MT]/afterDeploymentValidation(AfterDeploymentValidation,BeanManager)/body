{
  Collection<CamelContext> contexts=new ArrayList<>();
  for (  Bean<?> context : manager.getBeans(CamelContext.class,ANY)) {
    contexts.add(BeanManagerHelper.getReference(manager,CamelContext.class,context));
  }
  CdiTypeConverterLoader loader=new CdiTypeConverterLoader();
  for (  Class<?> converter : converters) {
    for (    CamelContext context : contexts) {
      loader.loadConverterMethods(context.getTypeConverterRegistry(),converter);
    }
  }
  boolean deploymentException=false;
  Set<Bean<?>> routes=new HashSet<>(manager.getBeans(RoutesBuilder.class,ANY));
  routes.addAll(manager.getBeans(RouteContainer.class,ANY));
  for (  Bean<?> context : manager.getBeans(CamelContext.class,ANY)) {
    for (    Bean<?> route : routes) {
      Set<Annotation> qualifiers=new HashSet<>(context.getQualifiers());
      qualifiers.retainAll(route.getQualifiers());
      if (qualifiers.size() > 1) {
        deploymentException|=!addRouteToContext(route,context,manager,adv);
      }
    }
  }
  if (deploymentException) {
    return;
  }
  for (  AnnotatedType<?> type : eagerBeans) {
    BeanManagerHelper.getReferencesByType(manager,type.getJavaClass(),ANY).toString();
  }
  for (  CamelContext context : contexts) {
    if (ServiceStatus.Started.equals(context.getStatus())) {
      continue;
    }
    logger.info("Camel CDI is starting Camel context [{}]",context.getName());
    try {
      context.start();
    }
 catch (    Exception exception) {
      adv.addDeploymentProblem(exception);
    }
  }
  converters.clear();
  camelBeans.clear();
  eagerBeans.clear();
  producerBeans.clear();
  producerQualifiers.clear();
  contextNames.clear();
}
