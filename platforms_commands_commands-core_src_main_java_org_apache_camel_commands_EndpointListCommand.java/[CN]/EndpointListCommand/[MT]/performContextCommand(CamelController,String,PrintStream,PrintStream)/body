{
  List<Map<String,String>> endpoints=camelController.getEndpoints(contextName);
  final Map<String,Integer> columnWidths=computeColumnWidths(endpoints);
  final String headerFormat=buildFormatString(columnWidths,true);
  final String rowFormat=buildFormatString(columnWidths,false);
  if (endpoints.size() > 0) {
    out.println(String.format(headerFormat,URI_COLUMN_LABEL,STATUS_COLUMN_LABEL));
    out.println(String.format(headerFormat,"---","------"));
    for (    Map<String,String> row : endpoints) {
      String uri=row.get("uri");
      if (decode) {
        uri=URLDecoder.decode(uri,"UTF-8");
      }
      uri=URISupport.sanitizeUri(uri);
      String state=row.get("state");
      out.println(String.format(rowFormat,uri,state));
      if (explain) {
        boolean first=true;
        String json=camelController.explainEndpointAsJSon(context,row.get("uri"),verbose);
        List<Map<String,String>> options=JsonSchemaHelper.parseJsonSchema("properties",json,true);
        for (        Map<String,String> option : options) {
          String key=option.get("name");
          String kind=option.get("kind");
          String type=option.get("type");
          String javaType=option.get("javaType");
          String value=option.get("value");
          if (ObjectHelper.isEmpty(value)) {
            value=option.get("defaultValue");
          }
          String desc=option.get("description");
          if (key != null && value != null) {
            if (first) {
              out.println();
              first=false;
            }
            String line;
            if ("path".equals(kind)) {
              line="\t" + key + " (endpoint path) = "+ value;
            }
 else {
              line="\t" + key + " = "+ value;
            }
            out.println(line);
            if (type != null) {
              String displayType=type;
              if (javaType != null && !displayType.equals(javaType)) {
                displayType=type + " (" + javaType+ ")";
              }
              out.println("\t" + displayType);
            }
            if (desc != null) {
              out.println("\t" + desc);
            }
            out.println();
          }
        }
      }
    }
  }
  return null;
}
