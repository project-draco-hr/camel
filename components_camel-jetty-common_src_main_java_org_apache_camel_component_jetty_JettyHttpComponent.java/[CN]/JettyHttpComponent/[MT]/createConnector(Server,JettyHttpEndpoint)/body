{
  SslContextFactory sslcf=null;
  SSLContextParameters endpointSslContextParameters=endpoint.getSslContextParameters();
  if (endpointSslContextParameters != null) {
    try {
      sslcf=createSslContextFactory(endpointSslContextParameters);
    }
 catch (    Exception e) {
      throw new RuntimeCamelException(e);
    }
  }
 else   if ("https".equals(endpoint.getProtocol())) {
    sslcf=new SslContextFactory();
    String keystoreProperty=System.getProperty(JETTY_SSL_KEYSTORE);
    if (keystoreProperty != null) {
      sslcf.setKeyStorePath(keystoreProperty);
    }
 else     if (sslKeystore != null) {
      sslcf.setKeyStorePath(sslKeystore);
    }
    String keystorePassword=System.getProperty(JETTY_SSL_KEYPASSWORD);
    if (keystorePassword != null) {
      sslcf.setKeyManagerPassword(keystorePassword);
    }
 else     if (sslKeyPassword != null) {
      sslcf.setKeyManagerPassword(sslKeyPassword);
    }
    String password=System.getProperty(JETTY_SSL_PASSWORD);
    if (password != null) {
      sslcf.setKeyStorePassword(password);
    }
 else     if (sslPassword != null) {
      sslcf.setKeyStorePassword(sslPassword);
    }
  }
  return createConnectorJettyInternal(server,endpoint,sslcf);
}
