{
  if (processor instanceof AggregateDefinition) {
    AggregateDefinitionRenderer.render(buffer,processor);
  }
 else   if (processor instanceof ChoiceDefinition) {
    ChoiceDefinitionRenderer.render(buffer,processor);
    return;
  }
 else   if (processor instanceof ConvertBodyDefinition) {
    ConvertBodyDefinitionRenderer.render(buffer,processor);
  }
 else   if (processor instanceof ExpressionNode) {
    ExpressionNodeRenderer.render(buffer,processor);
  }
 else   if (processor instanceof LoadBalanceDefinition) {
    LoadBalanceDefinitionRenderer.render(buffer,processor);
    return;
  }
 else   if (processor instanceof OnCompletionDefinition) {
    OnCompletionDefinitionRenderer.render(buffer,processor);
    return;
  }
 else   if (processor instanceof OnExceptionDefinition) {
    OnExceptionDefinitionRenderer.render(buffer,processor);
    return;
  }
 else   if (processor instanceof OutputDefinition) {
    OutputDefinitionRenderer.render(buffer,processor);
  }
 else   if (processor instanceof ResequenceDefinition) {
    ResequenceDefinitionRenderer.render(buffer,processor);
  }
 else   if (processor instanceof RollbackDefinition) {
    RollbackDefinition rollback=(RollbackDefinition)processor;
    buffer.append(".").append(processor.getShortName()).append("(\"");
    buffer.append(rollback.getMessage()).append("\")");
  }
 else   if (processor instanceof RoutingSlipDefinition) {
    RoutingSlipDefinitionRenderer.render(buffer,processor);
  }
 else   if (processor instanceof SendDefinition) {
    SendDefinitionRenderer.render(buffer,processor);
  }
 else   if (processor instanceof ThrottleDefinition) {
    ThrottleDefinitionRenderer.render(buffer,processor);
  }
 else {
    buffer.append(".").append(processor.getShortName()).append("()");
  }
  List<ProcessorDefinition> outputs=processor.getOutputs();
  for (  ProcessorDefinition nextProcessor : outputs) {
    render(buffer,nextProcessor);
  }
}
