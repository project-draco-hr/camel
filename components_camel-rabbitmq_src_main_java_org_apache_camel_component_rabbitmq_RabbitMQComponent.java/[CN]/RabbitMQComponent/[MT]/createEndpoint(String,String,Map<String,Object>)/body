{
  URI host=new URI("http://" + remaining);
  String hostname=host.getHost();
  int portNumber=host.getPort();
  if (host.getPath().trim().length() <= 1) {
    throw new IllegalArgumentException("No URI path as the exchangeName for the RabbitMQEndpoint, the URI is " + uri);
  }
  String exchangeName=host.getPath().substring(1);
  ConnectionFactory connectionFactory=resolveAndRemoveReferenceParameter(params,"connectionFactory",ConnectionFactory.class);
  @SuppressWarnings("unchecked") Map<String,Object> clientProperties=resolveAndRemoveReferenceParameter(params,"clientProperties",Map.class);
  TrustManager trustManager=resolveAndRemoveReferenceParameter(params,"trustManager",TrustManager.class);
  RabbitMQEndpoint endpoint;
  if (connectionFactory == null) {
    endpoint=new RabbitMQEndpoint(uri,this);
  }
 else {
    endpoint=new RabbitMQEndpoint(uri,this,connectionFactory);
  }
  endpoint.setHostname(hostname);
  endpoint.setPortNumber(portNumber);
  endpoint.setExchangeName(exchangeName);
  endpoint.setClientProperties(clientProperties);
  endpoint.setTrustManager(trustManager);
  setProperties(endpoint,params);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Creating RabbitMQEndpoint with host {}:{} and exchangeName: {}",new Object[]{endpoint.getHostname(),endpoint.getPortNumber(),endpoint.getExchangeName()});
  }
  return endpoint;
}
