{
  HazelcastAggregationRepository repoOne=new HazelcastAggregationRepository(OPTIMISTIC_REPO,true,getFirstInstance());
  HazelcastAggregationRepository repoTwo=new HazelcastAggregationRepository(OPTIMISTIC_REPO,true,getSecondInstance());
  try {
    repoOne.doStart();
    repoTwo.doStart();
    final String testBody="This is an optimistic test body. Sincerely yours, Captain Obvious.";
    final String key="optimisticKey";
    Exchange newEx=createExchangeWithBody(testBody);
    Exchange oldEx=repoOne.add(context(),key,null,newEx);
    assertNull("Old exchange should be null.",oldEx);
    final String theNewestBody="This is the newest test body.";
    Exchange theNewestEx=createExchangeWithBody(theNewestBody);
    oldEx=repoTwo.add(context(),key,newEx,theNewestEx);
    assertNotNull("oldEx is null",oldEx);
    assertEquals(newEx.getIn().getBody(),oldEx.getIn().getBody());
  }
  finally {
    repoOne.stop();
    repoTwo.stop();
  }
}
