{
  MBeanServer mbeanServer=getMBeanServer();
  ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/19-camel-1,type=context,name=\"camel-1\"");
  assertNull(context.hasEndpoint("seda:bar"));
  Object reply=mbeanServer.invoke(on,"createEndpoint",new Object[]{"seda:bar"},new String[]{"java.lang.String"});
  assertEquals(Boolean.TRUE,reply);
  assertNotNull(context.hasEndpoint("seda:bar"));
  ObjectName seda=ObjectName.getInstance("org.apache.camel:context=localhost/19-camel-1,type=endpoints,name=\"seda://bar\"");
  boolean registered=mbeanServer.isRegistered(seda);
  assertTrue("Should be registered " + seda,registered);
  Object num=mbeanServer.invoke(on,"removeEndpoints",new Object[]{"seda:*"},new String[]{"java.lang.String"});
  assertEquals(1,num);
  assertNull(context.hasEndpoint("seda:bar"));
  registered=mbeanServer.isRegistered(seda);
  assertFalse("Should not be registered " + seda,registered);
  num=mbeanServer.invoke(on,"removeEndpoints",new Object[]{"seda:*"},new String[]{"java.lang.String"});
  assertEquals(0,num);
  assertNull(context.hasEndpoint("seda:bar"));
  registered=mbeanServer.isRegistered(seda);
  assertFalse("Should not be registered " + seda,registered);
}
