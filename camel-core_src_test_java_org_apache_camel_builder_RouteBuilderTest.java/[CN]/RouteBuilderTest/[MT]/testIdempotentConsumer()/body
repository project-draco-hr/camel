{
  List<Route> routes=buildIdempotentConsumer();
  log.debug("Created routes: " + routes);
  assertEquals("Number routes created",1,routes.size());
  for (  Route route : routes) {
    Endpoint key=route.getEndpoint();
    assertEquals("From endpoint","direct://a",key.getEndpointUri());
    EventDrivenConsumerRoute consumer=assertIsInstanceOf(EventDrivenConsumerRoute.class,route);
    Channel channel=unwrapChannel(consumer.getProcessor());
    IdempotentConsumer idempotentConsumer=assertIsInstanceOf(IdempotentConsumer.class,channel.getNextProcessor());
    assertEquals("messageIdExpression","header(myMessageId)",idempotentConsumer.getMessageIdExpression().toString());
    assertIsInstanceOf(MemoryIdempotentRepository.class,idempotentConsumer.getIdempotentRepository());
    SendProcessor sendProcessor=assertIsInstanceOf(SendProcessor.class,unwrapChannel(idempotentConsumer.getProcessor()).getNextProcessor());
    assertEquals("Endpoint URI","direct://b",sendProcessor.getDestination().getEndpointUri());
  }
}
