{
  List<Route> routes=buildSimpleRouteWithChoice();
  log.debug("Created routes: " + routes);
  assertEquals("Number routes created",1,routes.size());
  for (  Route route : routes) {
    Endpoint key=route.getEndpoint();
    assertEquals("From endpoint","direct://a",key.getEndpointUri());
    EventDrivenConsumerRoute consumer=assertIsInstanceOf(EventDrivenConsumerRoute.class,route);
    Channel channel=unwrapChannel(consumer.getProcessor());
    ChoiceProcessor choiceProcessor=assertIsInstanceOf(ChoiceProcessor.class,channel.getNextProcessor());
    List<FilterProcessor> filters=choiceProcessor.getFilters();
    assertEquals("Should be two when clauses",2,filters.size());
    FilterProcessor filter1=filters.get(0);
    assertSendTo(unwrapChannel(filter1.getProcessor()).getNextProcessor(),"direct://b");
    FilterProcessor filter2=filters.get(1);
    assertSendTo(unwrapChannel(filter2.getProcessor()).getNextProcessor(),"direct://c");
    assertSendTo(unwrapChannel(choiceProcessor.getOtherwise()).getNextProcessor(),"direct://d");
  }
}
