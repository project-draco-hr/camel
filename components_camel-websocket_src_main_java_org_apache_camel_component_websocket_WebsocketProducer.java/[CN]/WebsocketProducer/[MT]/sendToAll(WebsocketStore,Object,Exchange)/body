{
  log.debug("Sending to all {}",message);
  Collection<DefaultWebsocket> websockets=store.getAll();
  Exception exception=null;
  List<Future> futures=new CopyOnWriteArrayList<>();
  for (  DefaultWebsocket websocket : websockets) {
    try {
      Future<Void> future=sendMessage(websocket,message);
      if (future != null) {
        futures.add(future);
      }
    }
 catch (    Exception e) {
      if (exception == null) {
        exception=new WebsocketSendException("Failed to deliver message to one or more recipients.",exchange,e);
      }
    }
  }
  StopWatch watch=new StopWatch();
  int timeout=endpoint.getSendTimeout();
  while (!futures.isEmpty() && watch.taken() < timeout) {
    for (    Future future : futures) {
      if (future.isDone() || future.isCancelled()) {
        futures.remove(future);
      }
      if (!futures.isEmpty()) {
        long interval=Math.min(1000,timeout);
        log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);
        try {
          Thread.sleep(interval);
        }
 catch (        InterruptedException e) {
          handleSleepInterruptedException(e,exchange);
        }
      }
    }
  }
  if (!futures.isEmpty()) {
    exception=new WebsocketSendException("Failed to deliver message within " + endpoint.getSendTimeout() + " millis to one or more recipients.",exchange);
  }
  if (exception != null) {
    throw exception;
  }
}
