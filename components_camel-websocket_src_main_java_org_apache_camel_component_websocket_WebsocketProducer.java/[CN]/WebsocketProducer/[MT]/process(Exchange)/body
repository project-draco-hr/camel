{
  Message in=exchange.getIn();
  Object message=in.getMandatoryBody();
  if (!(message == null || message instanceof String || message instanceof byte[])) {
    message=in.getMandatoryBody(String.class);
  }
  if (isSendToAllSet(in)) {
    sendToAll(store,message,exchange);
  }
 else {
    String connectionKey=in.getHeader(WebsocketConstants.CONNECTION_KEY,String.class);
    if (connectionKey != null) {
      DefaultWebsocket websocket=store.get(connectionKey);
      log.debug("Sending to connection key {} -> {}",connectionKey,message);
      Future<Void> future=sendMessage(websocket,message);
      if (future != null) {
        future.get(endpoint.getSendTimeout(),TimeUnit.MILLISECONDS);
        if (!future.isDone()) {
          throw new ExchangeTimedOutException(exchange,endpoint.getSendTimeout(),"Failed to send message to the connection");
        }
      }
    }
 else {
      throw new IllegalArgumentException("Failed to send message to single connection; connection key not set.");
    }
  }
}
