{
  inMessage=null;
  EndpointInfo conduitEpInfo=new EndpointInfo();
  conduitEpInfo.setAddress("camel://direct:Producer");
  CamelConduit conduit=setupCamelConduit(conduitEpInfo,true,false);
  final Message outMessage=new MessageImpl();
  endpointInfo.setAddress("camel://direct:EndpointA");
  final CamelDestination destination=setupCamelDestination(endpointInfo,true);
  MessageObserver observer=new MessageObserver(){
    public void onMessage(    Message m){
      try {
        Exchange exchange=new ExchangeImpl();
        exchange.setInMessage(m);
        m.setExchange(exchange);
        verifyReceivedMessage(m,"HelloWorld");
        Conduit backConduit;
        backConduit=destination.getBackChannel(m,null,null);
        Message replyMessage=new MessageImpl();
        sendoutMessage(backConduit,replyMessage,true,"HelloWorld Response");
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
;
  MockEndpoint error=context.getEndpoint("mock:error",MockEndpoint.class);
  error.expectedMessageCount(0);
  destination.setMessageObserver(observer);
  sendoutMessage(conduit,outMessage,false,"HelloWorld");
  verifyReceivedMessage(inMessage,"HelloWorld Response");
  error.assertIsSatisfied();
  destination.shutdown();
}
