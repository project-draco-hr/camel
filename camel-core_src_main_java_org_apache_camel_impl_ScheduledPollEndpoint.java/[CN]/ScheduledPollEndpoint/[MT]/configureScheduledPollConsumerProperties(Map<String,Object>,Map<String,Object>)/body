{
  Object startScheduler=options.remove("startScheduler");
  Object initialDelay=options.remove("initialDelay");
  Object delay=options.remove("delay");
  Object timeUnit=options.remove("timeUnit");
  Object useFixedDelay=options.remove("useFixedDelay");
  Object pollStrategy=options.remove("pollStrategy");
  Object runLoggingLevel=options.remove("runLoggingLevel");
  Object sendEmptyMessageWhenIdle=options.remove("sendEmptyMessageWhenIdle");
  Object greedy=options.remove("greedy");
  Object scheduledExecutorService=options.remove("scheduledExecutorService");
  boolean setConsumerProperties=false;
  if (initialDelay != null || delay != null || timeUnit != null || useFixedDelay != null || pollStrategy != null) {
    setConsumerProperties=true;
  }
  if (runLoggingLevel != null || startScheduler != null || sendEmptyMessageWhenIdle != null || greedy != null || scheduledExecutorService != null) {
    setConsumerProperties=true;
  }
  if (setConsumerProperties) {
    if (consumerProperties == null) {
      consumerProperties=new HashMap<String,Object>();
    }
    if (initialDelay != null) {
      consumerProperties.put("initialDelay",initialDelay);
    }
    if (startScheduler != null) {
      consumerProperties.put("startScheduler",startScheduler);
    }
    if (delay != null) {
      consumerProperties.put("delay",delay);
    }
    if (timeUnit != null) {
      consumerProperties.put("timeUnit",timeUnit);
    }
    if (useFixedDelay != null) {
      consumerProperties.put("useFixedDelay",useFixedDelay);
    }
    if (pollStrategy != null) {
      consumerProperties.put("pollStrategy",pollStrategy);
    }
    if (runLoggingLevel != null) {
      consumerProperties.put("runLoggingLevel",runLoggingLevel);
    }
    if (sendEmptyMessageWhenIdle != null) {
      consumerProperties.put("sendEmptyMessageWhenIdle",sendEmptyMessageWhenIdle);
    }
    if (greedy != null) {
      consumerProperties.put("greedy",greedy);
    }
    if (scheduledExecutorService != null) {
      consumerProperties.put("scheduledExecutorService",scheduledExecutorService);
    }
  }
}
