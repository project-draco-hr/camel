{
  Map<String,Object> options=getConsumerProperties();
  if (!options.containsKey("startScheduler")) {
    options.put("startScheduler",isStartScheduler());
  }
  if (!options.containsKey("initialDelay")) {
    options.put("initialDelay",getInitialDelay());
  }
  if (!options.containsKey("delay")) {
    options.put("delay",getDelay());
  }
  if (!options.containsKey("timeUnit")) {
    options.put("timeUnit",getTimeUnit());
  }
  if (!options.containsKey("useFixedDelay")) {
    options.put("useFixedDelay",isUseFixedDelay());
  }
  if (!options.containsKey("pollStrategy")) {
    options.put("pollStrategy",getPollStrategy());
  }
  if (!options.containsKey("runLoggingLevel")) {
    options.put("runLoggingLevel",getRunLoggingLevel());
  }
  if (!options.containsKey("sendEmptyMessageWhenIdle")) {
    options.put("sendEmptyMessageWhenIdle",isSendEmptyMessageWhenIdle());
  }
  if (!options.containsKey("greedy")) {
    options.put("greedy",isGreedy());
  }
  if (!options.containsKey("scheduler")) {
    options.put("scheduler",getScheduler());
  }
  if (!options.containsKey("schedulerProperties")) {
    options.put("schedulerProperties",getSchedulerProperties());
  }
  if (!options.containsKey("scheduledExecutorService")) {
    options.put("scheduledExecutorService",getScheduledExecutorService());
  }
  if (!options.containsKey("backoffMultiplier")) {
    options.put("backoffMultiplier",getBackoffMultiplier());
  }
  if (!options.containsKey("backoffIdleThreshold")) {
    options.put("backoffIdleThreshold",getBackoffIdleThreshold());
  }
  if (!options.containsKey("backoffErrorThreshold")) {
    options.put("backoffErrorThreshold",getBackoffErrorThreshold());
  }
}
