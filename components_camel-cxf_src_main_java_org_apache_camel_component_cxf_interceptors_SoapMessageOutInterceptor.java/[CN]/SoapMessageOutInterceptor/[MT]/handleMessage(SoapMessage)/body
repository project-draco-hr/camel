{
  List<Element> payload=message.get(List.class);
  Exchange exchange=message.getExchange();
  BindingMessageInfo bmi=message.get(BindingMessageInfo.class);
  if (LOG.isLoggable(Level.INFO)) {
    LOG.info("SoapMessageOutInterceptor binding operation style processing.");
  }
  SoapBindingInfo soapBinding=(SoapBindingInfo)exchange.get(BindingInfo.class);
  String style=soapBinding.getStyle(bmi.getBindingOperation().getOperationInfo());
  if ("rpc".equals(style)) {
    OperationInfo oi=bmi.getBindingOperation().getOperationInfo();
    Endpoint ep=exchange.get(Endpoint.class);
    Definition def=ep.getService().getServiceInfos().get(0).getProperty(WSDLServiceBuilder.WSDL_DEFINITION,Definition.class);
    String prefix=def.getPrefix(oi.getName().getNamespaceURI());
    if ("".equals(prefix)) {
      prefix="tns";
    }
    QName opName=null;
    boolean isClient=isRequestor(message);
    if (isClient) {
      opName=new QName(oi.getName().getNamespaceURI(),oi.getName().getLocalPart(),prefix);
    }
 else {
      opName=new QName(oi.getName().getNamespaceURI(),oi.getName().getLocalPart() + "Response",prefix);
    }
    Element opEl=createElement(opName,payload);
    payload=new ArrayList<Element>();
    payload.add(opEl);
  }
  message.put(List.class,payload);
}
