{
  if (isPlatform("aix")) {
    return;
  }
  final String url="bean-validator://x";
  final Car car=new CarWithRedefinedDefaultGroup(null,"D-A");
  try {
    template.requestBody(url,car);
    fail("should throw exception");
  }
 catch (  CamelExecutionException e) {
    assertIsInstanceOf(BeanValidationException.class,e.getCause());
    BeanValidationException exception=(BeanValidationException)e.getCause();
    Set<ConstraintViolation<Object>> constraintViolations=exception.getConstraintViolations();
    assertEquals(1,constraintViolations.size());
    ConstraintViolation<Object> constraintViolation=constraintViolations.iterator().next();
    assertEquals("licensePlate",constraintViolation.getPropertyPath().toString());
    assertEquals("D-A",constraintViolation.getInvalidValue());
    assertEquals("size must be between 5 and 14",constraintViolation.getMessage());
  }
}
