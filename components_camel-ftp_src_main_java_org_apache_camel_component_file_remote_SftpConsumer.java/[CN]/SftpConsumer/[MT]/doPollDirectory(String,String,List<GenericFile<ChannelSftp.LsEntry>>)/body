{
  if (log.isTraceEnabled()) {
    log.trace("doPollDirectory from absolutePath: " + absolutePath + ", dirName: "+ dirName);
  }
  dirName=FileUtil.stripTrailingSeparator(dirName);
  String dir;
  if (isStepwise()) {
    dir=ObjectHelper.isNotEmpty(dirName) ? dirName : absolutePath;
    operations.changeCurrentDirectory(dir);
  }
 else {
    dir=absolutePath;
  }
  if (log.isTraceEnabled()) {
    log.trace("Polling directory: " + dir);
  }
  List<ChannelSftp.LsEntry> files;
  if (isStepwise()) {
    files=operations.listFiles();
  }
 else {
    files=operations.listFiles(dir);
  }
  if (files == null || files.isEmpty()) {
    if (log.isTraceEnabled()) {
      log.trace("No files found in directory: " + dir);
    }
    return true;
  }
 else {
    if (log.isTraceEnabled()) {
      log.trace("Found " + files.size() + " in directory: "+ dir);
    }
  }
  for (  ChannelSftp.LsEntry file : files) {
    if (!canPollMoreFiles(fileList)) {
      return false;
    }
    if (file.getAttrs().isDir()) {
      RemoteFile<ChannelSftp.LsEntry> remote=asRemoteFile(absolutePath,file);
      if (endpoint.isRecursive() && isValidFile(remote,true)) {
        String subDirectory=file.getFilename();
        String path=absolutePath + "/" + subDirectory;
        boolean canPollMore=pollSubDirectory(path,subDirectory,fileList);
        if (!canPollMore) {
          return false;
        }
      }
    }
 else {
      RemoteFile<ChannelSftp.LsEntry> remote=asRemoteFile(absolutePath,file);
      if (isValidFile(remote,false)) {
        if (isInProgress(remote)) {
          if (log.isTraceEnabled()) {
            log.trace("Skipping as file is already in progress: " + remote.getFileName());
          }
        }
 else {
          fileList.add(remote);
        }
      }
    }
  }
  return true;
}
