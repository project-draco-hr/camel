{
  if (destinationName != null) {
    listenerContainer.setDestinationName(destinationName);
    log.debug("Using destinationName: {} on listenerContainer: {}",destinationName,listenerContainer);
  }
 else   if (destination != null) {
    listenerContainer.setDestination(destination);
    log.debug("Using destination: {} on listenerContainer: {}",destinationName,listenerContainer);
  }
 else {
    DestinationResolver resolver=getDestinationResolver();
    if (resolver != null) {
      listenerContainer.setDestinationResolver(resolver);
    }
 else {
      throw new IllegalArgumentException("Neither destination, destinationName or destinationResolver are specified on this endpoint!");
    }
    log.debug("Using destinationResolver: {} on listenerContainer: {}",resolver,listenerContainer);
  }
  listenerContainer.setPubSubDomain(pubSubDomain);
  String consumerName=getThreadName();
  if (configuration.getTaskExecutor() != null) {
    if (log.isDebugEnabled()) {
      log.debug("Using custom TaskExecutor: {} on listener container: {}",configuration.getTaskExecutor(),listenerContainer);
    }
    setContainerTaskExecutor(listenerContainer,configuration.getTaskExecutor());
    if (configuration.getTaskExecutor() instanceof ExecutorService) {
      consumer.setListenerContainerExecutorService((ExecutorService)configuration.getTaskExecutor(),false);
    }
  }
 else   if ((listenerContainer instanceof DefaultJmsMessageListenerContainer && configuration.getDefaultTaskExecutorType() == null) || !(listenerContainer instanceof DefaultJmsMessageListenerContainer)) {
    ExecutorService executor=getCamelContext().getExecutorServiceManager().newCachedThreadPool(consumer,consumerName);
    setContainerTaskExecutor(listenerContainer,executor);
    consumer.setListenerContainerExecutorService(executor,true);
  }
 else {
    log.debug("Deferring creation of TaskExecutor for listener container: {} as per policy: {}",listenerContainer,getDefaultTaskExecutorType());
  }
  if (configuration.getTransactionName() == null) {
    if (listenerContainer instanceof DefaultMessageListenerContainer) {
      ((DefaultMessageListenerContainer)listenerContainer).setTransactionName(consumerName);
    }
  }
}
