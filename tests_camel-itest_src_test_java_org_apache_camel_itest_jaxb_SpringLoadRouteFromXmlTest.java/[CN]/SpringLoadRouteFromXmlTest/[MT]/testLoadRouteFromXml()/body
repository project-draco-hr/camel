{
  assertNotNull("Existing foo route should be there",context.getRoute("foo"));
  assertEquals(1,context.getRoutes().size());
  MockEndpoint foo=getMockEndpoint("mock:foo");
  foo.expectedBodiesReceived("Hello World");
  template.sendBody("direct:foo","Hello World");
  foo.assertIsSatisfied();
  JAXBContext jaxb=new DefaultModelJAXBContextFactory().newJAXBContext();
  Unmarshaller unmarshaller=jaxb.createUnmarshaller();
  Resource rs=new ClassPathResource("org/apache/camel/itest/jaxb/BarRoute.xml");
  Object value=unmarshaller.unmarshal(rs.getInputStream());
  RoutesDefinition routes=(RoutesDefinition)value;
  assertNotNull("Should load routes from XML",routes);
  assertEquals(1,routes.getRoutes().size());
  context.addRouteDefinitions(routes.getRoutes());
  assertNotNull("Loaded bar route should be there",context.getRoute("bar"));
  assertEquals(2,context.getRoutes().size());
  MockEndpoint bar=getMockEndpoint("mock:bar");
  bar.expectedBodiesReceived("Bye World");
  template.sendBody("direct:bar","Bye World");
  bar.assertIsSatisfied();
}
