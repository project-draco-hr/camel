{
  ExpressionNode expNode=(ExpressionNode)processor;
  buffer.append(".").append(expNode.getShortName());
  if (expNode instanceof DelayDefinition) {
    renderDelay(buffer,expNode);
  }
 else   if (expNode instanceof FilterDefinition) {
    renderFilter(buffer,expNode);
  }
 else   if (expNode instanceof IdempotentConsumerDefinition) {
    renderIdempotentConsumer(buffer,expNode);
  }
 else   if (expNode instanceof LoopDefinition) {
    renderLoop(buffer,expNode);
  }
 else   if (expNode instanceof RecipientListDefinition) {
    ExpressionDefinition expression=expNode.getExpression();
    buffer.append("(");
    ExpressionRenderer.render(buffer,expression);
    buffer.append(")");
  }
 else   if (expNode instanceof RoutingSlipDefinition) {
    ExpressionDefinition expression=expNode.getExpression();
    buffer.append("(");
    ExpressionRenderer.render(buffer,expression);
    if (((RoutingSlipDefinition)expNode).getUriDelimiter() != null) {
      buffer.append(", \"");
      buffer.append(((RoutingSlipDefinition)expNode).getUriDelimiter());
      buffer.append("\"");
    }
    buffer.append(")");
  }
 else   if (expNode instanceof SetBodyDefinition) {
    renderSetBody(buffer,expNode);
  }
 else   if (expNode instanceof SetHeaderDefinition) {
    renderSetHeader(buffer,expNode);
  }
 else   if (expNode instanceof SetOutHeaderDefinition) {
    buffer.append("(\"setOutHeaderDefinition\")");
  }
 else   if (expNode instanceof SetPropertyDefinition) {
    renderSetProperty(buffer,expNode);
  }
 else   if (expNode instanceof SplitDefinition) {
    renderSplit(buffer,expNode);
  }
 else   if (expNode instanceof TransformDefinition) {
    renderTransform(buffer,expNode);
  }
 else   if (expNode instanceof WhenDefinition) {
    renderWhen(buffer,expNode);
  }
}
