{
  if (strategy == null) {
    return;
  }
  Map<String,List<String>> cxfHeaders=CastUtils.cast((Map<?,?>)message.get(Message.PROTOCOL_HEADERS));
  if (cxfHeaders != null) {
    for (    Map.Entry<String,List<String>> entry : cxfHeaders.entrySet()) {
      if (!strategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {
        List<String> values=entry.getValue();
        Object evalue;
        if (values.size() > 1) {
          if (exchange.getProperty(CxfConstants.CAMEL_CXF_PROTOCOL_HEADERS_MERGED,Boolean.FALSE,Boolean.class)) {
            StringBuilder sb=new StringBuilder();
            for (Iterator<String> it=values.iterator(); it.hasNext(); ) {
              sb.append(it.next());
              if (it.hasNext()) {
                sb.append(',').append(' ');
              }
            }
            evalue=sb.toString();
          }
 else {
            evalue=values;
          }
        }
 else {
          evalue=values.get(0);
        }
        headers.put(entry.getKey(),evalue);
      }
    }
  }
  String key=Message.CONTENT_TYPE;
  Object value=determineContentType(message);
  if (value != null && !strategy.applyFilterToExternalHeaders(key,value,exchange)) {
    headers.put(Exchange.CONTENT_TYPE,value);
  }
  key=Client.REQUEST_CONTEXT;
  value=message.get(key);
  if (value != null && !strategy.applyFilterToExternalHeaders(key,value,exchange)) {
    headers.put(key,value);
  }
  key=Client.RESPONSE_CONTEXT;
  value=message.get(key);
  if (value != null && !strategy.applyFilterToExternalHeaders(key,value,exchange)) {
    headers.put(key,value);
  }
  key=Message.RESPONSE_CODE;
  value=message.get(key);
  if (value != null && !strategy.applyFilterToExternalHeaders(key,value,exchange)) {
    headers.put(Exchange.HTTP_RESPONSE_CODE,value);
  }
}
