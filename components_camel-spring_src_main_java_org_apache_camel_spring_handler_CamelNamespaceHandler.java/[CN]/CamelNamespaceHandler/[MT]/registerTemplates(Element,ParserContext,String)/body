{
  boolean template=false;
  boolean consumerTemplate=false;
  NodeList list=element.getChildNodes();
  int size=list.getLength();
  for (int i=0; i < size; i++) {
    Node child=list.item(i);
    if (child instanceof Element) {
      Element childElement=(Element)child;
      String localName=childElement.getLocalName();
      if ("template".equals(localName)) {
        template=true;
      }
 else       if ("consumerTemplate".equals(localName)) {
        consumerTemplate=true;
      }
    }
  }
  if (!template) {
    String id="template";
    Element templateElement=element.getOwnerDocument().createElement("template");
    templateElement.setAttribute("id",id);
    BeanDefinitionParser parser=parserMap.get("template");
    BeanDefinition definition=parser.parse(templateElement,parserContext);
    parserContext.registerComponent(new BeanComponentDefinition(definition,id));
    if (LOG.isDebugEnabled()) {
      LOG.debug("Registered a default ProducerTemplate with id: " + id);
    }
  }
  if (!consumerTemplate) {
    String id="consumerTemplate";
    Element templateElement=element.getOwnerDocument().createElement("consumerTemplate");
    templateElement.setAttribute("id",id);
    BeanDefinitionParser parser=parserMap.get("consumerTemplate");
    BeanDefinition definition=parser.parse(templateElement,parserContext);
    parserContext.registerComponent(new BeanComponentDefinition(definition,id));
    if (LOG.isDebugEnabled()) {
      LOG.debug("Registered a default ConsumerTemplate with id: " + id);
    }
  }
}
