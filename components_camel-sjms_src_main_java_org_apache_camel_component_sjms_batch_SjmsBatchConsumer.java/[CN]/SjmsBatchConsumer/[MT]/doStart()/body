{
  super.doStart();
  connection=connectionFactory.createConnection();
  connection.start();
  if (LOG.isInfoEnabled()) {
    LOG.info("Starting " + consumerCount + " consumer(s) for "+ destinationName+ ":"+ completionSize);
  }
  consumersShutdownLatchRef.set(new CountDownLatch(consumerCount));
  jmsConsumerExecutors=getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(this,"SjmsBatchConsumer",consumerCount);
  final List<AtomicBoolean> triggers=new ArrayList<>();
  for (int i=0; i < consumerCount; i++) {
    BatchConsumptionLoop loop=new BatchConsumptionLoop();
    triggers.add(loop.getCompletionTimeoutTrigger());
    jmsConsumerExecutors.execute(loop);
  }
  if (completionInterval > 0) {
    LOG.info("Using CompletionInterval to run every " + completionInterval + " millis.");
    if (timeoutCheckerExecutorService == null) {
      setTimeoutCheckerExecutorService(getEndpoint().getCamelContext().getExecutorServiceManager().newScheduledThreadPool(this,SJMS_BATCH_TIMEOUT_CHECKER,1));
      shutdownTimeoutCheckerExecutorService=true;
    }
    timeoutCheckerExecutorService.scheduleAtFixedRate(new CompletionIntervalTask(triggers),completionInterval,completionInterval,TimeUnit.MILLISECONDS);
  }
}
