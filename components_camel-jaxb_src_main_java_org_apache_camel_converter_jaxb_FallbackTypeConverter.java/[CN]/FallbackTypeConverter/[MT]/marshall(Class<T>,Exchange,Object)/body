{
  LOG.trace("Marshal from value {} to type {}",value,type);
  T answer=null;
  if (parentTypeConverter != null) {
    JAXBContext context=createContext(value.getClass());
    Marshaller marshaller=context.createMarshaller();
    Writer buffer=new StringWriter();
    boolean prettyPrint=isPrettyPrint();
    if (exchange != null) {
      String property=exchange.getContext().getProperty(PRETTY_PRINT);
      if (property != null) {
        if (property.equalsIgnoreCase("false")) {
          prettyPrint=false;
        }
 else {
          prettyPrint=true;
        }
      }
    }
    if (prettyPrint) {
      marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,Boolean.TRUE);
    }
    if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null) {
      marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class));
    }
    Object toMarshall=value;
    if (!hasXmlRootElement(value.getClass())) {
      Method m=JaxbHelper.getJaxbElementFactoryMethod(camelContext,value.getClass());
      try {
        toMarshall=m.invoke(JaxbHelper.getObjectFactory(camelContext,value.getClass()).newInstance(),value);
      }
 catch (      Exception e) {
        LOG.error("Unable to create JAXBElement object for type {} due to {}",value.getClass().getName(),e);
      }
    }
    if (needFiltering(exchange)) {
      XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);
      FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer);
      marshaller.marshal(toMarshall,filteringWriter);
    }
 else {
      marshaller.marshal(toMarshall,buffer);
    }
    answer=parentTypeConverter.convertTo(type,exchange,buffer.toString());
  }
  return answer;
}
