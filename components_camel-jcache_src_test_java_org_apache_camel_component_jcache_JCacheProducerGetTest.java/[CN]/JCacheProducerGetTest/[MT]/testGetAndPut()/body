{
  final Map<String,Object> headers=new HashMap<>();
  final Cache<Object,Object> cache=getCacheFromEndpoint("jcache://test-cache");
  final String key=randomString();
  final String val=randomString();
  final String val2=randomString();
  headers.clear();
  headers.put(JCacheConstants.ACTION,"GETANDPUT");
  headers.put(JCacheConstants.KEY,key);
  sendBody("direct:get-and-put",val2,headers);
  MockEndpoint mock=getMockEndpoint("mock:get-and-put");
  mock.expectedMinimumMessageCount(1);
  mock.expectedHeaderReceived(JCacheConstants.KEY,key);
  mock.expectedMessagesMatches(new Predicate(){
    @Override public boolean matches(    Exchange exchange){
      return exchange.getIn().getBody() == null;
    }
  }
);
  mock.assertIsSatisfied();
  assertTrue(cache.containsKey(key));
  assertEquals(val2,cache.get(key));
}
